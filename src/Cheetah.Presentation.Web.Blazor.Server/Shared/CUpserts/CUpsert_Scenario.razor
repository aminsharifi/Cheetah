@inherits CUpsert_GeneralCode

<CEditDimentions Record="@Record" Records="@Records" IsInline="@IsInline"
                 Name="D_TaskPattern" Id="@Id" reference="@reference"
                 ParentCallback="@ParentCallback" Title="@Title"
                 LinkRecords="@LinkRecords">
    <RowTemplate>
        @if (!IsLoading)
        {
            <div class="row">
                <center>
                    <button type="button" class="col-6 btn btn-primary"
                            style="align-self: center;"
                            @onclick="(e => Add_ScenarioCondition(e,(F_Scenario)Record))">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                            <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                            <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                        </svg>
                        افزودن پیش شرط
                    </button>
                </center>
                <Ctable>
                    <thead>
                        <tr style="width:90%">
                            <th data-sortable="true" aria-sort="ascending">
                                @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                            </th>
                            <th data-sortable="true">
                                @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                            </th>

                            <th data-sortable="true">
                                @(globalization.GetValue(nameof(Localization.BlazorServer_Condition)))
                            </th>

                            <th data-sortable="true">
                                @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var _scenarioCondition in ((F_Scenario)Record).ScenarioConditions
                       .OrderBy(x => x.SortIndex))
                        {
                            <tr style="width:90%">
                                <td>
                                    <span class="col-12">
                                        @(_scenarioCondition?.Id)
                                    </span>
                                </td>
                                <td>
                                    <InputNumber class="col-12" @bind-Value="_scenarioCondition.SortIndex"></InputNumber>
                                </td>
                                <td>
                                    <InputSelect class="col-12"
                                                 @bind-Value="_scenarioCondition.SecondId" style="direction:rtl"
                                                 @oninput="(e => SelectedScenarioConditionsChanged(e,_scenarioCondition))">
                                        <option @((_scenarioCondition.Condition is null)? selected : '' ) value="">
                                            لطفا یک مورد را انتخاب نمایید
                                        </option>
                                        @foreach (var _Condition in _list_F_Condition.Where(x => x.Tag.TagCategoryId == D_TagCategory.Performer.Id))
                                        {
                                            <option value="@_Condition.Id">
                                                @_Condition.DisplayName (@_Condition.Name)
                                            </option>
                                        }
                                    </InputSelect>
                                </td>
                                <td>
                                    <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                 Checked="@_scenarioCondition.EnableRecord"
                                                 Color="Color.Primary"
                                                 CheckedIcon="@Icons.Material.Filled.Verified"
                                                 UnCheckedColor="Color.Error"
                                                 UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                 @onclick="args=>_scenarioCondition.EnableRecord = !_scenarioCondition.EnableRecord" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </Ctable>
            </div>
            <div class="row shadow rounded my-1 mx-1 p-1">
                <MudTabs Outlined="true">
                    <MudTabPanel Text="نمایش فرم ها" Icon="@Icons.Material.Filled.Task"
                                 @onclick="(x=>_scenarioStep = ScenarioStep.Tasks)" />
                    <MudTabPanel Text="نمایش اقدام ها" Icon="@Icons.Material.Filled.Work"
                                 @onclick="(x=>_scenarioStep = ScenarioStep.Actions)" />
                </MudTabs>
                @if (_scenarioStep == ScenarioStep.Tasks)
                {
                    <div class="row my-2">
                        <center>
                            <MudButton Variant="Variant.Filled" Color="Color.Success"
                                       StartIcon="@Icons.Material.Filled.PersonAdd"
                                       style="align-self: center;"
                                       @onclick="AddTaskPattern">
                                @(globalization.GetValue(nameof(Localization.BlazorServer_AddToTasks)))
                            </MudButton>
                        </center>
                    </div>
                }
                <div class="row">
                    <Ctable>
                        <caption>
                            <div class="row my-1" style="justify-content: center;">
                                <span class="col-2 text-success">
                                    @(globalization.GetValue(nameof(Localization.BlazorServer_TasksList)))
                                </span>
                            </div>
                        </caption>
                        <thead>
                            <tr>
                                @if (_scenarioStep == ScenarioStep.Tasks)
                                {
                                    <th data-sortable="true" aria-sort="ascending" width="10px">
                                        @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                                    </th>
                                    <th data-sortable="true" width="10px">
                                        @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                                    </th>
                                }
                                <th data-sortable="true" width="200px">
                                    @(globalization.GetValue(nameof(Localization.BlazorServer_FormName)))
                                </th>
                                @if (_scenarioStep == ScenarioStep.Tasks)
                                {
                                    <th data-sortable="true" width="500px">
                                        ایفاکنندگان
                                    </th>
                                }
                                @if (_scenarioStep == ScenarioStep.Actions)
                                {
                                    <th data-sortable="true" width="10px">
                                        @(globalization.GetValue(nameof(Localization.BlazorServer_Actions)))
                                    </th>
                                }

                                <th data-sortable="true" width="10px">
                                    @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (F_Task _task in (Record as F_Scenario).Tasks.OrderBy(x => x.SortIndex))
                            {
                                <tr>
                                    @if (_scenarioStep == ScenarioStep.Tasks)
                                    {
                                        <td>
                                            <span style="width: 50px">
                                                @(_task?.Id)
                                            </span>
                                        </td>
                                        <td>
                                            <InputNumber style="width: 50px" @bind-Value="_task.SortIndex"></InputNumber>
                                        </td>
                                    }
                                    <td>
                                        <InputText @bind-Value="_task.DisplayName" style="width:200px"></InputText>
                                    </td>
                                    @if (_scenarioStep == ScenarioStep.Tasks)
                                    {
                                        <td>
                                            <center>
                                                <button type="button" class="col-6 btn btn-primary"
                                                        style="align-self: center;"
                                                        @onclick="(e => Add_TaskCondition(e,_task))">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                                                        <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                                                        <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                                                    </svg>
                                                    افزودن ایفاکننده
                                                </button>
                                            </center>
                                            <Ctable>
                                                <thead>
                                                    <tr>
                                                        <th data-sortable="true" aria-sort="ascending" style="width: 50px">
                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                                                        </th>
                                                        <th data-sortable="true" style="width: 50px">
                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                                                        </th>

                                                        <th data-sortable="true" style="width:300px">
                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_Condition)))
                                                        </th>

                                                        <th data-sortable="true" style="width: 50px">
                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var _taskCondition in _task.TaskConditions
                                                   .OrderBy(x => x.SortIndex))
                                                    {
                                                        <tr>
                                                            <td style="width: 50px">
                                                                <span>
                                                                    @(_taskCondition?.Id)
                                                                </span>
                                                            </td>
                                                            <td style="width:50px">
                                                                <InputNumber @bind-Value="_taskCondition.SortIndex" style="width:50px"></InputNumber>
                                                            </td>
                                                            <td style="width:400px">
                                                                <InputSelect @bind-Value="_taskCondition.SecondId" style="direction:rtl;width:400px">
                                                                    <option @((_taskCondition.Condition is null)? selected : '' ) value="">
                                                                        لطفا یک مورد را انتخاب نمایید
                                                                    </option>
                                                                    @foreach (var _Condition in _list_F_Condition.Where(x => x.Tag.TagCategoryId == D_TagCategory.Performer.Id))
                                                                    {
                                                                        <option value="@_Condition.Id">
                                                                            @_Condition.DisplayName (@_Condition.Name)
                                                                        </option>
                                                                    }
                                                                </InputSelect>
                                                            </td>
                                                            <td style="width:100px">
                                                                <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                             Checked="@_taskCondition.EnableRecord"
                                                                             Color="Color.Primary"
                                                                             CheckedIcon="@Icons.Material.Filled.Verified"
                                                                             UnCheckedColor="Color.Error"
                                                                             UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                                             @onclick="args=>_taskCondition.EnableRecord = !_taskCondition.EnableRecord" />
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </Ctable>
                                        </td>
                                    }
                                    @if (_scenarioStep == ScenarioStep.Actions)
                                    {
                                        <td>
                                            <center>
                                                <button type="button" class="col-2 btn btn-primary"
                                                        style="align-self: center;"
                                                        @onclick="(e => Add_Actions(e,_task))">
                                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                                                        <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                                                        <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                                                    </svg>
                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_AddActions)))
                                                </button>
                                            </center>
                                            <div>
                                                <Ctable>
                                                    <thead>
                                                        <tr>
                                                            <th data-sortable="true" aria-sort="ascending">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                                                            </th>
                                                            <th data-sortable="true">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                                                            </th>
                                                            <th data-sortable="true">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_Conditions)))
                                                            </th>
                                                            <th data-sortable="true">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_NextActions)))
                                                            </th>
                                                            <th data-sortable="true">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_CaseState)))
                                                            </th>
                                                            <th data-sortable="true">
                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var _action in _task.TaskFlows
                                                       .Select(x => x.Flow).OrderBy(x => x.SortIndex))
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span>
                                                                        @(_action?.Id)
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <InputNumber @bind-Value="_action.SortIndex" style="width:50px"></InputNumber>
                                                                </td>
                                                                <td>
                                                                    <center>
                                                                        <button type="button" class="col-4 btn btn-primary"
                                                                                style="align-self: center;"
                                                                                @onclick="(e => Add_ActionsCondition(e,_action))">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                                                                                <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                                                                                <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                                                                            </svg>
                                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_AddToConditions)))
                                                                        </button>
                                                                    </center>
                                                                    <Ctable>
                                                                        <thead>
                                                                            <tr>
                                                                                <th data-sortable="true" aria-sort="ascending" style="width: 50px">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                                                                                </th>
                                                                                <th data-sortable="true" style="width: 50px">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                                                                                </th>

                                                                                <th data-sortable="true">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_Condition)))
                                                                                </th>

                                                                                <th data-sortable="true" style="width: 50px">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @foreach (var _flowCondition in _action.FlowConditions
                                                                           .OrderBy(x => x.SortIndex))
                                                                            {
                                                                                <tr>
                                                                                    <td>
                                                                                        <span>
                                                                                            @(_flowCondition?.Id)
                                                                                        </span>
                                                                                    </td>
                                                                                    <td>
                                                                                        <InputNumber @bind-Value="_flowCondition.SortIndex" style="width: 50px"></InputNumber>
                                                                                    </td>
                                                                                    <td>
                                                                                        <InputSelect @bind-Value="_flowCondition.SecondId" style="direction:rtl">
                                                                                            <option @((_flowCondition.Condition is null)? selected : '' ) value="">
                                                                                                لطفا یک مورد را انتخاب نمایید
                                                                                            </option>
                                                                                            @foreach (var _Condition in _list_F_Condition.Where(x => x.Tag.TagCategoryId == D_TagCategory.Action.Id))
                                                                                            {
                                                                                                <option value="@_Condition.Id">
                                                                                                    @_Condition.DisplayName (@_Condition.Name)
                                                                                                </option>
                                                                                            }
                                                                                        </InputSelect>
                                                                                    </td>
                                                                                    <td>
                                                                                        <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                                                     Checked="@_flowCondition.EnableRecord"
                                                                                                     Color="Color.Primary"
                                                                                                     CheckedIcon="@Icons.Material.Filled.Verified"
                                                                                                     UnCheckedColor="Color.Error"
                                                                                                     UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                                                                     @onclick="args=>_flowCondition.EnableRecord = !_flowCondition.EnableRecord" />
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    </Ctable>
                                                                </td>
                                                                <td>
                                                                    <center>
                                                                        <button type="button" class="col-6 btn btn-primary"
                                                                                style="align-self: center;"
                                                                                @onclick="(e => Add_ActionsTask(e,_action))">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                                                                                <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                                                                                <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                                                                            </svg>
                                                                            @(globalization.GetValue(nameof(Localization.BlazorServer_AddNextAction)))
                                                                        </button>
                                                                    </center>
                                                                    <Ctable>
                                                                        <thead>
                                                                            <tr>
                                                                                <th data-sortable="true" aria-sort="ascending" style="width: 50px">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_RowId)))
                                                                                </th>
                                                                                <th data-sortable="true" style="width: 50px">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_SortIndex)))
                                                                                </th>
                                                                                <th data-sortable="true">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_Action)))
                                                                                </th>
                                                                                <th data-sortable="true">
                                                                                    @(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            @foreach (var Task in _action.FlowTasks
                                                                           .OrderBy(x => x.SortIndex))
                                                                            {
                                                                                <tr>
                                                                                    <td>
                                                                                        <span style="width: 50px">
                                                                                            @(Task?.Id)
                                                                                        </span>
                                                                                    </td>
                                                                                    <td>
                                                                                        <InputNumber style="width: 50px" @bind-Value="Task.SortIndex"></InputNumber>
                                                                                    </td>
                                                                                    <td>
                                                                                        <InputSelect @bind-Value="Task.SecondId" style="direction:rtl"
                                                                                                     @oninput="(e => SelectedToTaskChanged(e,Task))">
                                                                                            <option selected value="">
                                                                                                @(globalization.GetValue(nameof(Localization.BlazorServer_SelectOneItem)))
                                                                                            </option>
                                                                                            @foreach (var ToTask in (Record as F_Scenario).Tasks.OrderBy(x => x.SortIndex))
                                                                                            {
                                                                                                <option value="@ToTask.Id">
                                                                                                    @ToTask.DisplayName
                                                                                                </option>
                                                                                            }
                                                                                        </InputSelect>
                                                                                    </td>
                                                                                    <td>
                                                                                        <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                                                     Checked="@Task.EnableRecord"
                                                                                                     Color="Color.Primary"
                                                                                                     CheckedIcon="@Icons.Material.Filled.Verified"
                                                                                                     UnCheckedColor="Color.Error"
                                                                                                     UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                                                                     @onclick="args=>Task.EnableRecord = !Task.EnableRecord" />
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    </Ctable>
                                                                </td>
                                                                <td>
                                                                    <InputSelect @bind-Value="_action.CaseStateId" style="direction:rtl; width:150px"
                                                                                 @oninput="(e => SelectedCaseStateChanged(e,_action))">
                                                                        <option @((_action.CaseState is null)? selected : '' ) value="">لطفا یک مورد را انتخاب نمایید</option>
                                                                        @foreach (var CaseState in _list_CaseState)
                                                                        {
                                                                            <option value="@CaseState.Id">
                                                                                @CaseState.DisplayName
                                                                            </option>
                                                                        }
                                                                    </InputSelect>
                                                                </td>
                                                                <td>
                                                                    <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                                                 Checked="@_action.EnableRecord"
                                                                                 Color="Color.Primary"
                                                                                 CheckedIcon="@Icons.Material.Filled.Verified"
                                                                                 UnCheckedColor="Color.Error"
                                                                                 UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                                                 @onclick="args=>_action.EnableRecord = !_action.EnableRecord" />
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </Ctable>
                                            </div>
                                        </td>
                                    }
                                    <td>
                                        <MudCheckBox Label=@(globalization.GetValue(nameof(Localization.BlazorServer_Enable)))
                                                     Checked="@_task.EnableRecord"
                                                     Color="Color.Primary"
                                                     CheckedIcon="@Icons.Material.Filled.Verified"
                                                     UnCheckedColor="Color.Error"
                                                     UncheckedIcon="@Icons.Material.Filled.DoNotDisturb"
                                                     @onclick="args=>_task.EnableRecord = !_task.EnableRecord" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </Ctable>
                </div>
                <LinkComponent Records="@LinkRecords"
                               reference="@reference"
                               Title=@(globalization.GetValue(nameof(Localization.BlazorServer_ScenariosInProcess), new String[] { Record?.DisplayName}))>
                </LinkComponent>
            </div>
        }
    </RowTemplate>
</CEditDimentions>
@code {
    private enum ScenarioStep
    {
        Tasks,
        Actions
    }
    ScenarioStep _scenarioStep = ScenarioStep.Tasks;
    private List<D_Tag> _list_D_Tag { get; set; } = new();
    private List<D_Operand> _list_D_Operand { get; set; } = new();
    private List<D_CaseState> _list_CaseState { get; set; } = new();
    private List<D_TagType> _list_D_TagType { get; set; } = new();
    private List<D_TagCategory> _list_TagCategory { get; set; } = new();
    private List<F_Condition> _list_F_Condition { get; set; } = new();

    public override async Task ExtendedLoadDTO()
    {
        _list_D_Tag = (await simpleClassRepository.GetAllByNameAsync(nameof(D_Tag)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<D_Tag>())
        .ToList();

        _list_D_Operand = (await simpleClassRepository.GetAllByNameAsync(nameof(D_Operand)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<D_Operand>())
        .ToList();

        _list_CaseState = (await simpleClassRepository.GetAllByNameAsync(nameof(D_CaseState)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<D_CaseState>())
        .ToList();

        _list_D_TagType = (await simpleClassRepository.GetAllByNameAsync(nameof(D_TagType)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<D_TagType>())
        .ToList();

        _list_TagCategory = (await simpleClassRepository.GetAllByNameAsync(nameof(D_TagCategory)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<D_TagCategory>())
        .ToList();

        _list_F_Condition = (await simpleClassRepository.GetAllByNameAsync(nameof(F_Condition)))
        .Where(x => x.EnableRecord)
        .Select(x => x.Adapt<F_Condition>())
        .ToList();

        AllRecords = (await simpleClassRepository.GetAllByNameAsync(nameof(D_Process)))
        .Where(x => x.EnableRecord).ToList();

        AllLink = (await simpleClassRepository.GetAllLinkAsync(nameof(L_ProcessScenario), nameof(LinkProperty.Second), Id))
        .Where(x => x.EnableRecord).ToList();

        this.LinkRecords = new LinkClassDTO()
            {
                LinkType = nameof(L_ProcessScenario),
                FirstType = nameof(D_Process),
                SecondType = nameof(F_Scenario),
                FixedId = Id,
                Sd_Status = nameof(LinkProperty.Second),
                FloatState = AllRecords.Select(x => new KeyValuePair<Tuple<long?, string>, Boolean>(
                    new Tuple<long?, string>(x.Id, x.DisplayName),
                    AllLink.Any(y => y.FirstId == x.Id && y.SecondId == Id)))
                                                                                                                                                        .ToDictionary(x => x.Key, x => x.Value)
            };
    }
    private string GetMultiSelectionText(BaseEntity selectedValues)
    {
        return $"{string.Join(", ", selectedValues?.DisplayName)}";
    }
    private async Task SelectedOperandChanged(ChangeEventArgs e, F_Condition f_Condition)
    {
        if (String.IsNullOrEmpty(e.ToString()))
        {
            f_Condition.OperandId = null;
            f_Condition.Operand = null;
        }
        else
        {
            var _D_OperandId = Int64.Parse(e.Value.ToString());

            f_Condition.Operand = _list_D_Operand
            .First(x => x.Id == _D_OperandId) as D_Operand;
        }
    }
    private async Task SelectedParameterListChanged(ChangeEventArgs e, F_Condition f_Condition)
    {
        if (Id > 0 && e.Value is not null)
        {
            var _D_ParameterListId = Int64.Parse(e.Value.ToString());

            f_Condition.Tag = _list_D_Tag
            .First(x => x.Id == _D_ParameterListId) as D_Tag;
        }
    }
    private async Task Add_ActionsTask(MouseEventArgs e, F_Flow cObject)
    {
        L_FlowTask _l_ActionTask = new();

        ICollection<L_FlowTask> _l_TaskActions = cObject.FlowTasks;

        if (_l_TaskActions.Any())
        {
            _l_ActionTask.SortIndex = _l_TaskActions.Max(x => x.SortIndex) + 1;
        }
        else
        {
            _l_ActionTask = await simpleClassRepository
            .GetLastAsync(nameof(L_FlowTask)) as L_FlowTask;
        }

        cObject.FlowTasks.Add(_l_ActionTask);
    }
    private async Task Add_TaskCondition(MouseEventArgs e, F_Task cObject)
    {
        L_TaskCondition _TaskCondition = new();

        ICollection<L_TaskCondition> _taskConditions = cObject.TaskConditions;

        if (_taskConditions.Any())
        {
            _TaskCondition.SortIndex = _taskConditions.Max(x => x.SortIndex) + 1;
        }
        else
        {
            _TaskCondition = await simpleClassRepository
            .GetLastAsync(nameof(L_TaskCondition)) as L_TaskCondition;
        }

        cObject.TaskConditions.Add(_TaskCondition);
    }
    private async Task Add_ScenarioCondition(MouseEventArgs e, F_Scenario cObject)
    {
        L_ScenarioCondition _ScenarioCondition = new();

        ICollection<L_ScenarioCondition> _scenarioConditions = cObject.ScenarioConditions;

        if (_scenarioConditions.Any())
        {
            _ScenarioCondition.SortIndex = _scenarioConditions.Max(x => x.SortIndex) + 1;
        }
        else
        {
            _ScenarioCondition = await simpleClassRepository
            .GetLastAsync(nameof(L_ScenarioCondition)) as L_ScenarioCondition;
        }

        cObject.ScenarioConditions.Add(_ScenarioCondition);
    }
    private async Task Add_ActionsCondition(MouseEventArgs e, F_Flow cObject)
    {
        var _flowCondition = await simpleClassRepository
            .GetLastAsync(nameof(L_FlowCondition)) as L_FlowCondition;

        _flowCondition.FirstId = cObject.Id;
        _flowCondition.Flow = cObject;

        ICollection<L_FlowCondition> _Conditions = cObject.FlowConditions;

        if (_Conditions.Any())
        {
            _flowCondition.SortIndex = _Conditions.Max(x => x.SortIndex) + 1;
        }

        cObject.FlowConditions.Add(_flowCondition);
    }
    private async Task Add_Actions(MouseEventArgs e, F_Task cObject)
    {
        L_TaskFlow _l_TaskAction = new();

        F_Flow _f_Action = await simpleClassRepository.GetLastAsync(nameof(F_Flow)) as F_Flow;

        _l_TaskAction.Task = cObject;

        _l_TaskAction.Flow = _f_Action;

        ICollection<L_TaskFlow> _TaskItems = cObject.TaskFlows;

        if (_TaskItems.Any())
        {
            _l_TaskAction.SortIndex = _TaskItems.Max(x => x.SortIndex) + 1;
        }
        else
        {
            _l_TaskAction.SortIndex = 1;
        }

        cObject.TaskFlows.Add(_l_TaskAction);
    }

    private async Task AddTaskPattern()
    {
        var d_Task = new F_Task();

        var eP_Tasks = (Record as F_Scenario).Tasks;

        if (eP_Tasks.Any())
        {
            d_Task.SortIndex = eP_Tasks.Max(x => x.SortIndex) + 1;
        }
        else
        {
            d_Task = await simpleClassRepository.GetLastAsync(nameof(F_Task)) as F_Task;
        }

        (Record as F_Scenario).Tasks.Add(d_Task);
    }

    private async Task SelectedCaseStateChanged(ChangeEventArgs e, F_Flow f_Flow)
    {
        if (Id > 0 && e.Value is not null)
        {
            var CaseStateId = Int64.Parse(e.Value.ToString());

            f_Flow.CaseStateId = CaseStateId;
        }
    }
    private async Task SelectedToTaskChanged(ChangeEventArgs e, L_FlowTask TaskSelector)
    {
        if (Id > 0 && e.Value is not null)
        {
            var ToTaskId = Int64.Parse(e.Value.ToString());

            TaskSelector.Task = (Record as F_Scenario).Tasks
            .First(x => x.Id == ToTaskId) as F_Task;
        }
        else
        {
            TaskSelector.Task = null;
        }
    }
    private async Task SelectedScenarioConditionsChanged(ChangeEventArgs e, L_ScenarioCondition ScenarioCondition)
    {
        if (Id > 0 && e.Value is not null)
        {
            var _flowConditionId = Int64.Parse(e.Value.ToString());

            ScenarioCondition.SecondId = (_list_F_Condition
                .First(x => x.Id == _flowConditionId) as F_Condition).Id;
        }
    }
}
@using System.Collections.ObjectModel
@inherits CUpsert_GeneralCode

<CEditDimentions Record="@Record" Records="@Records" IsInline="@IsInline"
                 Name="D_TaskPattern" Id="@Id" reference="@reference"
                 ParentCallback="@ParentCallback" Title="@Title"
                 LinkRecords="@LinkRecords">
    <RowTemplate>
        <CInput @bind-LValue="(Record as F_Condition).TagId"
                Records="@List_D_Tag"
                Record="@((Record as F_Condition).Tag)"
                CDescription=@(globalization.GetValue(nameof(Localization.BlazorServer_Tag)))
                CDisplayName=@(globalization.GetValue(nameof(Localization.BlazorServer_Tag)))
                SelectedProcessesChanged="@SelectedTagChanged"
                CFieldType="@(Cheetah.Domain.FieldType.CSelect)"
                reference="@reference"></CInput>

        <CInput CFieldType="@(Cheetah.Domain.FieldType.CSelect)"
                Records="@List_D_Operand"
                @bind-LValue="(Record as F_Condition).OperandId"
                Record="@((Record as F_Condition).Operand)"
                CDescription=@(globalization.GetValue(nameof(Localization.BlazorServer_Operand)))
                CDisplayName=@(globalization.GetValue(nameof(Localization.BlazorServer_Operand)))
                SelectedProcessesChanged="@SelectedOperandChanged"
                reference="@reference"></CInput>

        @switch (TagTypeId)
        {
            case var _boolean when _boolean == D_TagType.Boolean.Id:
                <CInput CFieldType="@(Cheetah.Domain.FieldType.CBool)"
                        @bind-BValue="(Record as F_Condition).BooleanValue"
                        CDescription=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        CDisplayName=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        reference="@reference"></CInput>
                break;
            case var _string when _string == D_TagType.String.Id:
                <CInput CFieldType="@(Cheetah.Domain.FieldType.CString)"
                        @bind-SValue="(Record as F_Condition).Value"
                        CDescription=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        CDisplayName=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        reference="@reference"></CInput>
                break;
            case var _numberic when _numberic == D_TagType.Numberic.Id:
                <CInput CFieldType="@(Cheetah.Domain.FieldType.CNFloat)"
                        @bind-NFValue="(Record as F_Condition).FloatValue"
                        CDescription=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        CDisplayName=@(globalization.GetValue(nameof(Localization.BlazorServer_CellValue)))
                        reference="@reference"></CInput>
                break;
            case var _date when _date == D_TagType.Date.Id:
                <span>not implemented</span>
                break;
        }
    </RowTemplate>
</CEditDimentions>
@code {

    public IEnumerable<BaseEntity> List_D_Tag { get; set; }
    public IEnumerable<BaseEntity> List_D_Operand { get; set; }
    public Int64? TagTypeId = D_TagType.String.Id;

    public override async Task ExtendedLoadDTO()
    {
        List_D_Tag = await simpleClassRepository.GetAllByName(nameof(D_Tag));
        List_D_Operand = await simpleClassRepository.GetAllByName(nameof(D_Operand));
    }

    private async Task SelectedOperandChanged(ChangeEventArgs e)
    {
        if (Id > 0 && e.Value is not null)
        {
            var _operandId = Int64.Parse(e.Value.ToString());

            var _selectedOperand = List_D_Operand
            .First(x => x.Id == _operandId) as D_Operand;
            (Record as F_Condition).Operand = _selectedOperand;

            TagTypeId = D_TagType.String.Id;
        }
    }

    private async Task SelectedTagChanged(ChangeEventArgs e)
    {
        if (Id > 0 && e.Value is not null)
        {
            var _tagId = Int64.Parse(e.Value.ToString());
            var _tag = List_D_Tag.First(x => x.Id == _tagId) as D_Tag;

            (Record as F_Condition).Tag = _tag;
        }
    }
}

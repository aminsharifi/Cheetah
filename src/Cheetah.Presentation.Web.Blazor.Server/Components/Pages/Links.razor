@page "/Links/{Name}/{type}/{Id:long}/{reference}"

@inherits MyComponentBase
<NavigationComponent _CNavigation="@_CNavigation" />
@if (Records != null)
{
    <div class="form-group my-3">
        <div class="btn-group" role="group" aria-label="Basic example" style="direction: ltr">
            <a href="@($"/Links/Create/{Name}/{type}/{Id}/{reference}")" class="btn btn-primary">
                @(globalization.GetValue(nameof(Localization.BlazorServer_Add) ))
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-database-fill-add" viewBox="0 0 16 16">
                    <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0ZM8 1c-1.573 0-3.022.289-4.096.777C2.875 2.245 2 2.993 2 4s.875 1.755 1.904 2.223C4.978 6.711 6.427 7 8 7s3.022-.289 4.096-.777C13.125 5.755 14 5.007 14 4s-.875-1.755-1.904-2.223C11.022 1.289 9.573 1 8 1Z" />
                    <path d="M2 7v-.839c.457.432 1.004.751 1.49.972C4.722 7.693 6.318 8 8 8s3.278-.307 4.51-.867c.486-.22 1.033-.54 1.49-.972V7c0 .424-.155.802-.411 1.133a4.51 4.51 0 0 0-4.815 1.843A12.31 12.31 0 0 1 8 10c-1.573 0-3.022-.289-4.096-.777C2.875 8.755 2 8.007 2 7Zm6.257 3.998L8 11c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V10c0 1.007.875 1.755 1.904 2.223C4.978 12.711 6.427 13 8 13h.027a4.552 4.552 0 0 1 .23-2.002Zm-.002 3L8 14c-1.682 0-3.278-.307-4.51-.867-.486-.22-1.033-.54-1.49-.972V13c0 1.007.875 1.755 1.904 2.223C4.978 15.711 6.427 16 8 16c.536 0 1.058-.034 1.555-.097a4.507 4.507 0 0 1-1.3-1.905Z" />
                </svg>
            </a>

            <div type="button" class="btn btn-info"
             @onclick="@(e => _CNavigation.BackNavigation(_NavigationManager))">
                @(globalization.GetValue(nameof(Localization.BlazorServer_Return) ))
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M1.5 1.5A.5.5 0 0 0 1 2v4.8a2.5 2.5 0 0 0 2.5 2.5h9.793l-3.347 3.346a.5.5 0 0 0 .708.708l4.2-4.2a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 8.3H3.5A1.5 1.5 0 0 1 2 6.8V2a.5.5 0 0 0-.5-.5z" />
                </svg>
            </div>
        </div>

    </div>
    <ListGenericTypeItems Records="@Records" Name="@Name"
                      ConfirmationDelete="ConfirmDelete_Click"
                      type="@type" reference="@reference">
    </ListGenericTypeItems>
}
<CLoading IsLoading="@IsLoading" AnyRecord="@Records.Any()"></CLoading>
@code {

    [Parameter]
    public long? Id { get; set; }

    [Parameter]
    public String Name { get; set; }

    [Parameter]
    public String? type { get; set; }

    [Parameter]
    public String? reference { get; set; }

    public Boolean IsLoading { get; set; } = true;

    public long DeleteidRole { get; set; }

    public IEnumerable<SimpleClassDTO> Records { get; set; } = new List<SimpleClassDTO>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadRecords();
        }
        if (reference is null || firstRender)
        {
            var _D_Entity = await simpleClassRepository.GetAllByNameAsync("D_Entity");
            var PDisplayName = _D_Entity.Where(x => x.Name == Name).Single().DisplayName;
            reference = _CNavigation.LoadNavigation(Address: $"Links/{Name}/{type}/{Id}", RowDescription: PDisplayName,
                RowId: null, Reference: reference);

            IsLoading = false;
            StateHasChanged();
        }
    }

    private async Task LoadRecords()
    {
        Records = await simpleClassRepository.GetAllLinkAsync(Name, type, Id.Value);
    }

    public async Task ConfirmDelete_Click()
    {
        IsLoading = true;
        await LoadRecords();
        IsLoading = false;
    }
}

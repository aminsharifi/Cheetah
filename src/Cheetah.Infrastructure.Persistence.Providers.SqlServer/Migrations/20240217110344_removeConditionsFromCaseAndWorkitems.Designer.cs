// <auto-generated />
using System;
using Cheetah.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cheetah.Infrastructure.Persistence.Providers.SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240217110344_removeConditionsFromCaseAndWorkitems")]
    partial class removeConditionsFromCaseAndWorkitems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 481, DateTimeKind.Unspecified).AddTicks(3293), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c7bec201-ebea-4204-9f31-e75a1550a48e"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8175), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مقداردهی اولیه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1a6ec43a-6a86-460f-98dd-f328fa1e907a"),
                            Name = "Initializing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8189), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "در دست بررسی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("8b0f5237-fdf4-4b70-bef3-af67345be62f"),
                            Name = "Ongoing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8191), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "منتظر بازنگری",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("0a6ad507-1e66-4252-a485-cdf9f147677d"),
                            Name = "Editing",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8194), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کامل شده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e1ac6c87-60d6-4757-95ea-527d214cb42b"),
                            Name = "Completed",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8202), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عدم تایید",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2bfc1d4e-8145-448e-83c9-7880b26e30b5"),
                            Name = "Rejected",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(8205), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ابطال شده",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c8925cb1-d389-4cb2-9549-d8ccafaaa3e3"),
                            Name = "Aborted",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 481, DateTimeKind.Unspecified).AddTicks(5275), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("aba62d4c-c6ad-41cb-aa57-81615a773276"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("Display");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 107, DateTimeKind.Unspecified).AddTicks(5658), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            ERPCode = 101L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7571db8c-5587-45e0-9875-ef1f6a4754f6"),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9180), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            ERPCode = 102L,
                            EnableRecord = true,
                            GuidRecord = new Guid("02ed79e0-6bdb-4ab9-b2fc-f3fd50f72106"),
                            Name = "D_Operand",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9212), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            ERPCode = 103L,
                            EnableRecord = true,
                            GuidRecord = new Guid("64144fdc-24e8-400f-beb3-a50c094b63b2"),
                            Name = "D_Tag",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9228), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            ERPCode = 104L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1410a171-ad57-45d4-886d-4237fca7deda"),
                            Name = "D_CaseState",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9235), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            ERPCode = 105L,
                            EnableRecord = true,
                            GuidRecord = new Guid("849a58d6-6d8c-4d03-8723-efbfc00d1317"),
                            Name = "D_Process",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9246), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            ERPCode = 106L,
                            EnableRecord = true,
                            GuidRecord = new Guid("50dcc8af-85d7-412e-9b37-f29d51bb69ee"),
                            Name = "D_User",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9252), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            ERPCode = 107L,
                            EnableRecord = true,
                            GuidRecord = new Guid("de3665f1-e1e0-45e6-90d6-09d1cf06fef4"),
                            Name = "D_UserInformation",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9257), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            ERPCode = 108L,
                            EnableRecord = true,
                            GuidRecord = new Guid("42add623-dbe4-4ecb-9681-1d3c3368c6e4"),
                            Name = "F_WorkItem",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9315), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            ERPCode = 109L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5e69311c-6c26-4b14-9442-7f4b57a0bf84"),
                            Name = "F_Attachment",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 110L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9320), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            ERPCode = 110L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c3b67348-bee0-47be-b4a5-69b26668cc56"),
                            Name = "F_Task",
                            SortIndex = 110L
                        },
                        new
                        {
                            Id = 111L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9325), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            ERPCode = 111L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7a168fbd-d109-4579-b406-d1831cde1896"),
                            Name = "F_Condition",
                            SortIndex = 111L
                        },
                        new
                        {
                            Id = 112L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9330), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            ERPCode = 112L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d66af6bf-3472-4cdd-81eb-9ca06e2b4a46"),
                            Name = "F_Case",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 113L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9334), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            ERPCode = 113L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7fcffe09-aa0d-45fa-908a-bd99295d3fad"),
                            Name = "F_Scenario",
                            SortIndex = 113L
                        },
                        new
                        {
                            Id = 114L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 108, DateTimeKind.Unspecified).AddTicks(9340), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            ERPCode = 114L,
                            EnableRecord = true,
                            GuidRecord = new Guid("cbc508bd-02b5-4c56-a669-8c20a2b4c3f3"),
                            Name = "L_ProcessScenario",
                            SortIndex = 114L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 481, DateTimeKind.Unspecified).AddTicks(6986), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("cd9531cf-3539-4081-b669-0ba50063637b"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1879), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مساوی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5e33a33e-c403-4891-a299-cda055c8776a"),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1893), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مخالف",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f8b97602-bbcf-429a-9a18-d867d69bed7e"),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1896), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزگتر از",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("b5eccc5f-df6b-4f01-9dbb-0cf5a2f00f15"),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1899), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزرگتر و مساوی",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2ff11acc-23c6-4ef0-aeab-03d576230bf5"),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1929), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = " کوچکتر از",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("257da42c-2db2-46a7-9286-7a3755e9768c"),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(1932), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کوچکتر و مساوی",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a35eb112-05ab-481d-a05b-d17cf8b4036c"),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 481, DateTimeKind.Unspecified).AddTicks(8489), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8624d4ef-4abf-4bd1-b1c8-940c39ae6628"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(110);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(3000), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فرآیند نمونه",
                            ERP = true,
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("dcff6266-3cb1-482f-9e46-15e49de57606"),
                            Name = "SampleProcess",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(531), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("873fb05e-f68a-461f-93bf-996e1b40780e"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(6226), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "تایید",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("0b16cedc-2ebe-4b11-adcd-7c515d19b24f"),
                            Name = "Approve",
                            SortIndex = 1L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7909), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "عدم تایید",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("af8abcf3-2e0a-44de-acea-ce995aaa7e3a"),
                            Name = "Reject",
                            SortIndex = 2L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7914), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "بازنگری",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("cd4414ab-d722-4985-be59-1e1369eef5eb"),
                            Name = "Revise",
                            SortIndex = 3L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7917), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "موقعیت",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("3d07b8ce-f604-4723-9c60-a7052052b898"),
                            Name = "Location",
                            SortIndex = 4L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7923), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "نقش",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("6168dea7-db60-412f-90d1-6b27682284d5"),
                            Name = "Role",
                            SortIndex = 5L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7926), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "سمت",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("848530fa-8328-444a-bc9e-4f6fdd58745a"),
                            Name = "Position",
                            SortIndex = 6L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 7L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7929), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "مدیر این پرسنل",
                            ERPCode = 7L,
                            EnableRecord = true,
                            GuidRecord = new Guid("b70e7926-e7ed-430d-a234-18918839c702"),
                            Name = "Employees",
                            SortIndex = 7L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 8L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7932), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            ERPCode = 8L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5c72cbc1-a099-463d-b996-a205feebb5c6"),
                            Name = "Price",
                            SortIndex = 8L,
                            TagTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(2156), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("e57f6a3b-e75d-46e4-b0f4-b9af0deaa205"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7353), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عددی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("343c2dfd-535b-4575-a4d7-6e37554d98c4"),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7359), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "دودویی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("aa895dd9-cec9-4d0a-8923-63d34cf93054"),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7361), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "تاریخ",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("65755aa8-4da3-462c-9473-2bc3e1033aa3"),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 109, DateTimeKind.Unspecified).AddTicks(7363), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "حروف",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("30ab9655-e5f5-4abb-9806-120e4d3ed2a2"),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(4268), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("4cdc805e-7cea-4499-a71b-33104223ecd3"))
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(1152), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "محمد شریفی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("cf339011-f224-4950-a95b-e6f568e7e794"),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(1182), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "امین شریفی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d3c6a779-831b-4bde-858a-7a34a2a37b42"),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(6162), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("ca0236b3-a92e-4a46-ad63-aaae2d2f05f0"))
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(7699), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("a6834d90-078f-4a97-91d7-bf4cb924c133"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(2701), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "صندوق ورودی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("746ed48f-3e2c-442e-bf5d-41b33be7031a"),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(2706), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ارسال شده",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7d42ce7b-e64c-4958-a009-38029ef84362"),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(2714), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "خارج شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("3ccbffdb-edf9-475f-a73d-cc2d216a39cd"),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 110, DateTimeKind.Unspecified).AddTicks(2716), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "آینده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("677f17d5-e243-4c6a-85a2-dc91126bc822"),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 482, DateTimeKind.Unspecified).AddTicks(9609), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("baa6eb2c-e877-4b3c-af22-3f68547eaf5b"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 483, DateTimeKind.Unspecified).AddTicks(1725), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("f4d11d52-b766-4a8b-802a-d09d992ad0df"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 483, DateTimeKind.Unspecified).AddTicks(4308), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("710ff979-fd4c-4ab0-8e71-3b7d2d83cebd"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("OperandId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Flow", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 483, DateTimeKind.Unspecified).AddTicks(6118), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("51e03d9d-1ad1-4373-afbd-ff84db17e1f0"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Flow", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 483, DateTimeKind.Unspecified).AddTicks(8081), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("f07ed5c3-5dda-4457-9d9c-6d00029e805a"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(4290), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ee79911f-46cc-4ec3-b76d-cbe70e26b976"),
                            Name = "SampleScenario",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 483, DateTimeKind.Unspecified).AddTicks(9690), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("861c2d1b-28f5-4a28-b264-45b4041eac54"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Task", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(6048), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ثبت درخواست",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("aa3123cd-2d50-4b20-b938-f3113939a78a"),
                            Name = "Sample_Scenario_Requestor",
                            ScenarioId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 106, DateTimeKind.Unspecified).AddTicks(6218), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بررسی درخواست",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("58d29d98-1501-4a10-b860-3ce140d9122c"),
                            Name = "Sample_Scenario_RequestorManager",
                            ScenarioId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 484, DateTimeKind.Unspecified).AddTicks(2025), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("cedef71a-6adb-40c4-8e21-fd53c749e7bb"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 484, DateTimeKind.Unspecified).AddTicks(4070), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("9de41e79-c71a-4cf8-aa7a-352721102188"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_CaseCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseTaskUser", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 484, DateTimeKind.Unspecified).AddTicks(6869), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("e7c5be4c-8fa2-4c67-887e-54ac85e565da"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_CaseTaskUser", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_FlowCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 484, DateTimeKind.Unspecified).AddTicks(9207), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("2a1846c6-e392-4dd3-948a-984d47e386b9"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_FlowCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_FlowTask", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 485, DateTimeKind.Unspecified).AddTicks(1917), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("2f853ad9-2da7-40ca-8aa1-7b042dba24c1"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_FlowTask", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 485, DateTimeKind.Unspecified).AddTicks(4466), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c479c30d-32f8-425a-9d2b-08d79544ef3a"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 105, DateTimeKind.Unspecified).AddTicks(8633), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فرآیند نمونه-سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("1a2b7ca7-bef5-4a7a-ae97-4464b371aaa5"),
                            Name = "SampleProcess_SampleScenario",
                            SecondId = 1L,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ScenarioCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 485, DateTimeKind.Unspecified).AddTicks(6941), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8f61b3f7-ce91-4644-9a48-f53f5a0c6e71"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_ScenarioCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 485, DateTimeKind.Unspecified).AddTicks(9576), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("cf7e87e9-ba95-4a0b-9408-50df365fa0be"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_TaskCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskFlow", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 486, DateTimeKind.Unspecified).AddTicks(1912), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("e86de050-c56e-4002-ae60-743b86785380"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_TaskFlow", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 486, DateTimeKind.Unspecified).AddTicks(4591), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("96dcae17-455e-4351-a482-5fc2ed41d249"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_UserCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_WorkItemCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 17, 14, 33, 43, 486, DateTimeKind.Unspecified).AddTicks(7247), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("F_WorkItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3c866a26-c01a-48f0-b273-f0620c0dfd29"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("F_WorkItemId");

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_WorkItemCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("IU_UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IU_UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Operand");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Flow", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.Navigation("CaseState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Tasks")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Task");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("CaseConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Case");

                    b.Navigation("Condition");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseTaskUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("ThirdId");

                    b.Navigation("Case");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_FlowCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Flow", "Flow")
                        .WithMany("FlowConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Condition");

                    b.Navigation("Flow");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_FlowTask", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Flow", "Flow")
                        .WithMany("FlowTasks")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Flow");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ScenarioCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("ScenarioConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Condition");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany("L_TaskConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Condition");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskFlow", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany("L_TaskFlows")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Flow", "Flow")
                        .WithMany("TaskFlows")
                        .HasForeignKey("SecondId");

                    b.Navigation("Flow");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Condition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_WorkItemCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_WorkItem", null)
                        .WithMany("WorkItemConditions")
                        .HasForeignKey("F_WorkItemId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", "Case")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Case");

                    b.Navigation("Condition");
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId");

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserConditions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Navigation("CaseConditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Flow", b =>
                {
                    b.Navigation("FlowConditions");

                    b.Navigation("FlowTasks");

                    b.Navigation("TaskFlows");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Navigation("ProcessScenarios");

                    b.Navigation("ScenarioConditions");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.Navigation("L_TaskConditions");

                    b.Navigation("L_TaskFlows");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Navigation("WorkItemConditions");
                });
#pragma warning restore 612, 618
        }
    }
}

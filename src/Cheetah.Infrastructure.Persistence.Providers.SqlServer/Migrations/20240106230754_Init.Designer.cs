// <auto-generated />
using System;
using Cheetah.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cheetah.Infrastructure.Persistence.Providers.SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106230754_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(5061), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("a349e660-f60f-4c9c-b0a5-383eba81b209"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(5254), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(5342), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "در دست بررسی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f9b55a52-85ac-4ff6-b1f9-8888ef08a1bc"),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(5349), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "منتظر بازنگری",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("73e8937a-3109-4525-9657-b910a139cdbb"),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(5352), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "کامل شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a96b922c-816b-48f8-80c7-954d08a72625"),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(5355), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "عدم تایید",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("05fbc29d-ac25-4098-b269-2eae688612bf"),
                            Name = "Rejected",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(5358), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "ابطال شده",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ecf70062-cb86-40ff-b15c-2232c37f76e3"),
                            Name = "Aborted",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(6838), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("5a951242-95c3-4f9c-a021-acef78c3a582"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(6964), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("Display");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 485, DateTimeKind.Unspecified).AddTicks(5278), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            ERPCode = 101L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2a25a773-dfab-4f8e-9e96-401e7b6e3f1f"),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4645), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            ERPCode = 102L,
                            EnableRecord = true,
                            GuidRecord = new Guid("90d2730d-c665-479e-b303-4ec313ea8d83"),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4686), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            ERPCode = 103L,
                            EnableRecord = true,
                            GuidRecord = new Guid("4549c53f-1458-4201-bbfb-35b89fabc26a"),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4700), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            ERPCode = 104L,
                            EnableRecord = true,
                            GuidRecord = new Guid("4c6865ba-f268-435f-8c9f-3cb178253f8e"),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4707), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "سمت‌ها(Dimentions)",
                            ERPCode = 105L,
                            EnableRecord = true,
                            GuidRecord = new Guid("da342a97-bbb4-4b69-bbd6-d77bc63fa652"),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4713), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            ERPCode = 106L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f8adba07-a42e-41f7-8fec-e2a8d0c46410"),
                            Name = "D_CaseState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4719), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            ERPCode = 107L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e7abda66-a062-458a-ad42-77348e03ab54"),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4725), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            ERPCode = 108L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5ee01315-c82c-4fa7-b7e9-eda54e95524d"),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4731), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            ERPCode = 109L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1df5db69-4729-49a8-8b73-e501b6b892ea"),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4745), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            ERPCode = 112L,
                            EnableRecord = true,
                            GuidRecord = new Guid("3d74d4bd-62e3-4f61-be9d-e09218e48b93"),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4751), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            ERPCode = 200L,
                            EnableRecord = true,
                            GuidRecord = new Guid("301f96d5-929e-4bea-b287-e5c862b58280"),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4758), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            ERPCode = 202L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a69ae0f4-aba4-4fc6-9e7c-d111e1b28716"),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4762), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            ERPCode = 203L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f53264ef-2f7a-49a1-ad58-ed70b793bb5c"),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4767), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            ERPCode = 204L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a18aa156-e321-4fb8-a219-0c8e77c12d60"),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4773), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            ERPCode = 205L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ef39a25a-7bf4-4109-a097-b03502ca7169"),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4779), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            ERPCode = 206L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e94d3ad8-bd71-48cb-a944-c1d074d72fe0"),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4783), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            ERPCode = 300L,
                            EnableRecord = true,
                            GuidRecord = new Guid("9cbfb815-e694-4a66-90ce-fcfdded2d146"),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4821), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            ERPCode = 301L,
                            EnableRecord = true,
                            GuidRecord = new Guid("07cd51bd-08b9-4778-92ff-cf971773ed1b"),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4828), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            ERPCode = 302L,
                            EnableRecord = true,
                            GuidRecord = new Guid("396a8843-e13c-4400-bdde-e919edc33248"),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(4835), new TimeSpan(0, -8, 0, 0, 0)),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            ERPCode = 303L,
                            EnableRecord = true,
                            GuidRecord = new Guid("cf15f1e6-67eb-4b2e-8bd3-588078bbce1f"),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(8554), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("fa2d50f5-7c6a-4c95-adf6-28f0282d3f4d"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 930, DateTimeKind.Unspecified).AddTicks(8690), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(5860), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "ÝÇÑÓ",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("99a822eb-4af1-4baf-8603-b58646e8ccc0"),
                            Name = "Fars",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("94c990e4-4381-4c50-abdc-6abb6b600a8f"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(339), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7810), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "مساوی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e9b71743-1dc3-45ac-97b9-0700850954ba"),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7820), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "مخالف",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1924e203-98dc-4be5-a01f-f8b4c7c2f8ee"),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7823), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "بزگتر از",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d8c56a1c-d13d-4539-bef0-0e12776f95b6"),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7826), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "بزرگتر و مساوی",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("71702447-b68f-44f2-ac91-f7cd090590f5"),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7830), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = " کوچکتر از",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7a97012b-ff4a-4e9a-8876-693a1b2313cd"),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(7832), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "کوچکتر و مساوی",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("acb7c691-b021-48ba-abd6-f2b497a555b3"),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(1813), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("433b0bb2-e683-40a1-91b4-fc62e9eaf051"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(1949), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(9086), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "کارشناس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("14142346-6da3-4eb3-8be8-df52f7baf63e"),
                            Name = "Expert",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(3370), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3ae783c5-fd58-40cb-bf81-e22077edc5b2"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(3532), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(110);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 486, DateTimeKind.Unspecified).AddTicks(9846), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "فرآیند نمونه",
                            ERP = true,
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ed2773ae-cf8c-4442-a838-0533cea79e03"),
                            Name = "SampleProcess",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(4962), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<bool>("FixedRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("0fc224a9-2e3c-4784-b5d2-0a9fbbad8eba"))
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(100);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(5085), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("Independent");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(826), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "درخواست کننده",
                            ERPCode = 100L,
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("763e24a0-73c6-483d-87df-948b13f8e182"),
                            Independent = false,
                            Name = "Requestor",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 101L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(963), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "مدیر درخواست کننده",
                            ERPCode = 101L,
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("3bac8a9c-a9a4-4a84-87db-fd27bf6efe16"),
                            Independent = false,
                            Name = "RequestorManager",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(6631), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("9ede2b65-043f-47e7-85e1-808e5503cbad"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(6757), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(2699), new TimeSpan(0, -8, 0, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مرکز",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ccc900c8-4021-4589-ba87-ebb6df41669f"),
                            Name = "D_Location",
                            SortIndex = 1L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 201L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(2994), new TimeSpan(0, -8, 0, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "تایید",
                            ERPCode = 201L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5e957543-c459-46ff-ad1c-8a642eaeef30"),
                            Name = "Approve",
                            SortIndex = 2L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(2999), new TimeSpan(0, -8, 0, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "عدم تایید",
                            ERPCode = 202L,
                            EnableRecord = true,
                            GuidRecord = new Guid("49ab9698-fcea-490b-a34d-c5606a7216c4"),
                            Name = "Reject",
                            SortIndex = 3L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(3003), new TimeSpan(0, -8, 0, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "بازنگری",
                            ERPCode = 203L,
                            EnableRecord = true,
                            GuidRecord = new Guid("aec2ebf6-3ecd-49d7-85b9-6dabc03522e7"),
                            Name = "Revise",
                            SortIndex = 4L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 301L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(3011), new TimeSpan(0, -8, 0, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            ERPCode = 301L,
                            EnableRecord = true,
                            GuidRecord = new Guid("348062ec-01fc-4ee2-9945-f191a2b714c7"),
                            Name = "Price",
                            SortIndex = 5L,
                            TagTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(8259), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d9f0b267-edbf-4842-8aa5-29b54af80741"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 931, DateTimeKind.Unspecified).AddTicks(8377), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(4675), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "عددی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1a9e59e5-807f-42e2-84f2-d1529a0e2976"),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(4713), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "دودویی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("70d16c68-e9a9-4593-8343-d230f0deb8a1"),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(4724), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "تاریخ",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("63c162f1-79d2-4fba-8515-6eccd25134bb"),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(4728), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "حروف",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("4e38ca8a-abad-49c7-95bc-f7007565f9e8"),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(180), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("da5d262f-e155-4c1b-abf2-0b568f7b15a7"))
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(336), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(8447), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "محمد شریفی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("bbc942bf-5bab-477d-baec-184ecd9d4a3c"),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(8489), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "امین شریفی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("bc40a64b-1373-40b8-b0cc-e4e16eee5a35"),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(1971), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("95d44cfa-9e8e-4347-920f-3a612d784227"))
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(2083), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(5948), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("aaa90c59-b184-4777-bdbd-a1d660eb5fde"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 932, DateTimeKind.Unspecified).AddTicks(6143), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(9847), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "صندوق ورودی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("83df011b-fbd7-4509-a37f-f73e0f111957"),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(9855), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "ارسال شده",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("67786412-44fd-4db3-bf37-84bdf5d788ac"),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(9859), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "خارج شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("fed94a08-269c-4a84-844a-5cab9323799e"),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 487, DateTimeKind.Unspecified).AddTicks(9862), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "آینده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2b4a263a-a43a-4152-89d6-71c08a6d25f7"),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 933, DateTimeKind.Unspecified).AddTicks(6591), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("1b788d6c-b2fb-4b90-8733-a96e59e560c6"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 933, DateTimeKind.Unspecified).AddTicks(6788), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 933, DateTimeKind.Unspecified).AddTicks(9310), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("dcaca89a-3e19-43f2-9dd2-65a28f0172a0"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 934, DateTimeKind.Unspecified).AddTicks(211), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 934, DateTimeKind.Unspecified).AddTicks(3314), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c4c238b5-08e8-4119-8ce3-545bef8e6efc"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 934, DateTimeKind.Unspecified).AddTicks(4238), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(8069), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "مبلغ",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5b78510b-8713-4fc7-a0fb-605b1bd51eed"),
                            Name = "Price",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 301L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(8549), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 2L,
                            EnableRecord = true,
                            EndorsementItemId = 1L,
                            GuidRecord = new Guid("d82cc118-18c9-43da-bfd5-43c668cfda2c"),
                            Name = "One",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(8632), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 3L,
                            EnableRecord = true,
                            EndorsementItemId = 2L,
                            GuidRecord = new Guid("5a09b9af-01b0-45d1-8568-7519fcac0ca2"),
                            Name = "Two",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(8639), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 4L,
                            EnableRecord = true,
                            EndorsementItemId = 3L,
                            GuidRecord = new Guid("b1edb511-ee70-48cb-aff7-0c601033aa36"),
                            Name = "Three",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 203L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(8647), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 5L,
                            EnableRecord = true,
                            EndorsementItemId = 4L,
                            GuidRecord = new Guid("203bee86-9029-4e68-9651-aa91d6aef2ca"),
                            Name = "Four",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 202L,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("ConditionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 934, DateTimeKind.Unspecified).AddTicks(7129), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("39f7a327-55dc-47a7-93e4-263349016877"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 934, DateTimeKind.Unspecified).AddTicks(7350), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(375), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "ثبت درخواست",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("be60350a-ad99-4385-b77f-f8b7b20454bd"),
                            Name = "Sample_Scenario__Requestor",
                            RoleId = 100L,
                            ScenarioId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(619), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "بررسی درخواست",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("6d59ef28-9acd-4ca3-ad99-e70f83602295"),
                            Name = "Sample_Scenario__RequestorManager",
                            RoleId = 101L,
                            ScenarioId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(413), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8e3e1344-bc34-414a-a710-13e67b623886"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(608), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_EndorsementItem", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CaseStateId = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(2689), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 1L,
                            EnableRecord = true,
                            EndorsementId = 1L,
                            GuidRecord = new Guid("348f1d82-f3a6-4dfc-b5c3-b2229db8096a"),
                            Name = "one",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CaseStateId = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(2909), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 2L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("890ec66c-cbdc-47cc-a0ce-1d7134482a81"),
                            Name = "two",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CaseStateId = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(2915), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 3L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("ead74cd3-0e98-4ee9-819e-b37444e13425"),
                            Name = "Three",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CaseStateId = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(2918), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 4L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("aa43b198-8dfb-423d-b129-9afe99785438"),
                            Name = "Four",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(3186), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8ffd2ed3-c180-4dac-acdf-6648f871fc66"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(3332), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 484, DateTimeKind.Unspecified).AddTicks(3956), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("3e6cb777-9cee-4b75-b118-022fbde22b2f"),
                            Name = "SampleScenario",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(6506), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("603b6e0b-902f-429d-a6ca-c1d6363df6a5"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(6744), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 935, DateTimeKind.Unspecified).AddTicks(9222), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3382c08d-e7f6-4c23-9886-293f66792592"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(3), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_EndorsementItemEndorsement", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 482, DateTimeKind.Unspecified).AddTicks(8432), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("ec2d988d-ac03-4059-b9e6-d2f9df9c4028"),
                            Name = "One",
                            SecondId = 2L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 482, DateTimeKind.Unspecified).AddTicks(9193), new TimeSpan(0, -8, 0, 0, 0)),
                            ERPCode = 2L,
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("aac263a7-6497-4a0b-b3ad-1cbb7b767603"),
                            Name = "Two",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementUser", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(2316), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c92d0e8a-3186-4fea-9f13-00b062c28f25"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(2540), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_EndorsementUser", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(5459), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("95bb99dc-3477-4d61-8731-20c05237741a"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(5684), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(2876), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "فرآیند نمونه-سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("25140dff-e8ac-4d99-8fb4-e940fb43dcd7"),
                            Name = "SampleProcess_SampleScenario",
                            SecondId = 1L,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(8604), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("078a8c60-9b1d-4393-8df3-ac2b290173ab"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 936, DateTimeKind.Unspecified).AddTicks(8827), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(4019), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "درخواست کننده-کارشناس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 100L,
                            GuidRecord = new Guid("6f93b1dc-6070-4d19-a782-efa6e71ab661"),
                            Name = "Requestor_Expert",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(4063), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "مدیر درخواست کننده-کارشناس",
                            ERPCode = 2L,
                            EnableRecord = true,
                            FirstId = 101L,
                            GuidRecord = new Guid("276c27cc-26eb-4719-9743-6d0476562b55"),
                            Name = "RequestorManager_Expert",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 937, DateTimeKind.Unspecified).AddTicks(1096), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("34c0a2ea-1327-4988-85e9-2769f1afe8d5"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 937, DateTimeKind.Unspecified).AddTicks(1779), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(4995), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "محمد شریفی-فارس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("77c104f2-0a5f-4ba9-a08a-7c57c01c91d3"),
                            Name = "m_sharifi__Fars",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(5002), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "امین شریفی-فارس",
                            ERPCode = 2L,
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("4cfcc293-799b-4907-9ba4-84e3540b5e26"),
                            Name = "a_sharifi__Fars",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 937, DateTimeKind.Unspecified).AddTicks(4141), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3b9d8c5b-ca2b-4412-b4b4-6d3c6eedd8f2"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 937, DateTimeKind.Unspecified).AddTicks(4364), new TimeSpan(0, -8, 0, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(5887), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "محمد شریفی-کارشناس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("3b7a419f-1640-4d1d-973c-af646791a23f"),
                            Name = "Requestor_Expert",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 1, 6, 15, 7, 52, 483, DateTimeKind.Unspecified).AddTicks(5893), new TimeSpan(0, -8, 0, 0, 0)),
                            DisplayName = "امین شریفی-کارشناس",
                            ERPCode = 2L,
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("91a54290-50bf-44fb-bf33-8e5936a38a84"),
                            Name = "RequestorManager_Expert",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("IU_UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IU_UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Condition");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany("EndorsementItems")
                        .HasForeignKey("EndorsementId");

                    b.Navigation("CaseState");

                    b.Navigation("Endorsement");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Endorsements")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Users")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Role", "Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Location", "Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId");

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Role", b =>
                {
                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.Navigation("EndorsementItems");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah.Infrastructure.Persistence.Providers.SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231008082518_serilog")]
    partial class serilog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2214),
                            DisplayName = "در دست بررسی",
                            EnableRecord = true,
                            GuidRecord = new Guid("54f45a6d-8da5-4161-a718-3d9e1f8db26e"),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2218),
                            DisplayName = "منتظر بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("3e8ff3e7-cccf-423a-8572-0cf1a8dcb020"),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2220),
                            DisplayName = "کامل شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("c16d5e9b-10d3-4dc3-938c-d071db5de912"),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2222),
                            DisplayName = "عدم تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("7dc2532c-42ee-47fa-9ff0-a2c5bab88895"),
                            Name = "Rejected",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2224),
                            DisplayName = "ابطال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("4f977004-5371-436d-9327-23e73cbcfac6"),
                            Name = "Aborted",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2591),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("91546a56-4f87-4003-8087-ff55d29d8f8e"),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2640),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("e6de87f2-bd9e-4bfd-917a-35099feed129"),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2646),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("e0d5f14d-fd1a-4208-ab60-4e2770f51c45"),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2652),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("37a51bf9-c208-40ac-bda5-3baa091c139d"),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2658),
                            Display = false,
                            DisplayName = "سمت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("de09caea-a8cd-48d1-833a-611f30f037cc"),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2663),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("5fd21199-1371-400e-90ef-8e6f584d9576"),
                            Name = "D_CaseState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2668),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("f4cae591-546e-469e-a6cb-55d8cd06402b"),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2673),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("60109540-86de-4781-a64f-4d019015b57b"),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2681),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("2c006af2-20f1-4855-b607-60d5bf74eb12"),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2686),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("7005a371-2279-4840-a315-21920cdf1610"),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2767),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("86278405-e2e9-4d87-877e-bf2d06dc52e5"),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2775),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("2c6cb023-bb37-4307-b2dc-95183d65de9b"),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2781),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("e81adf2f-3288-4164-b0f2-5a08c49954f3"),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2786),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("dc400367-b7c1-451c-95fa-9671d8ff311d"),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2791),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("5cf1a1ca-eeec-41d4-851e-d450433cde23"),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2800),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("ba4d2e8a-f9b9-4889-8a49-19f53493c9aa"),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2808),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("be160f68-e9c4-47b4-918b-648c40307c69"),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2812),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("30651f28-c713-40f5-8a77-fa05ff8a912e"),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2817),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("aecf1c3b-0a6d-477e-aeee-eed0d139340c"),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2823),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("20fa206d-daac-4384-91ae-dcc6755d16b8"),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2305),
                            DisplayName = "فارس",
                            EnableRecord = true,
                            GuidRecord = new Guid("18571eec-27d8-4292-b587-287c17ab5802"),
                            Name = "Fars",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2323),
                            DisplayName = "مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("068be901-acf8-47e5-9fc5-8b0bb3fc7715"),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2326),
                            DisplayName = "مخالف",
                            EnableRecord = true,
                            GuidRecord = new Guid("f7c1d87a-826f-43d8-9c7d-9d4526511373"),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2329),
                            DisplayName = "بزگتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("e02ed417-9126-4a97-86ae-29aea479abe3"),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2331),
                            DisplayName = "بزرگتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("3e4e2057-fda6-47e1-bd05-65f8869c5a3b"),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2340),
                            DisplayName = " کوچکتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("5bdd2aac-032d-41b5-8113-b8d36cf3263f"),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2342),
                            DisplayName = "کوچکتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("31255e35-0c96-47b7-81db-f8df83288022"),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2566),
                            DisplayName = "کارشناس",
                            EnableRecord = true,
                            GuidRecord = new Guid("924f7f26-6ea6-4002-9a05-a9286a052dd8"),
                            Name = "Expert",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(1915),
                            DisplayName = "فرآیند نمونه",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("856e3d5c-c0ee-45b1-95ce-6e8faedc6d43"),
                            Name = "SampleProcess",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool>("FixedRole")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2521),
                            DisplayName = "درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("616c71c1-9b6d-449c-b487-647f5b043fb4"),
                            Independent = false,
                            Name = "Requestor",
                            SortIndex = 100L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2530),
                            DisplayName = "مدیر درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("419c3262-462b-4c2a-81d2-14bf076b76e3"),
                            Independent = false,
                            Name = "RequestorManager",
                            SortIndex = 101L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2403),
                            Description = "عددی",
                            DisplayName = "مرکز",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f66e94b6-87bf-4878-9953-d2950d6cf0ae"),
                            Name = "D_Location",
                            SortIndex = 1L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2409),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("1dc5ecfa-aa9b-4575-88dd-af7138bf12fc"),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2458),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("20e23279-6caa-4461-8919-363396a11988"),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2461),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("af8490ca-f879-4ed3-ae58-efa0024711b8"),
                            Name = "Edit",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2463),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            EnableRecord = true,
                            GuidRecord = new Guid("8ca0e148-722f-4d58-a8e1-005a22e0fcc0"),
                            Name = "Price",
                            SortIndex = 301L,
                            TagTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2373),
                            DisplayName = "عددی",
                            EnableRecord = true,
                            GuidRecord = new Guid("3a8e8acd-f7ea-4999-8b7b-4e0f4e16a840"),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2375),
                            DisplayName = "دودویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("3f82d8af-cde7-4fd5-b1b4-8d3566f1d67a"),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2378),
                            DisplayName = "تاریخ",
                            EnableRecord = true,
                            GuidRecord = new Guid("b64069fd-4117-4c06-8bc5-4a9a3cd16d59"),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2380),
                            DisplayName = "حروف",
                            EnableRecord = true,
                            GuidRecord = new Guid("c87a1a43-ebcc-445a-9bf8-d421f0807d37"),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2492),
                            DisplayName = "محمد شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("8e06e50e-166e-4303-b8e6-cd7c7440c048"),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2496),
                            DisplayName = "امین شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("0082e474-a413-4e0c-b0db-6d8e8467b8cd"),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2259),
                            DisplayName = "صندوق ورودی",
                            EnableRecord = true,
                            GuidRecord = new Guid("ca879edb-9720-4e81-a3d2-4e77f6871f16"),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2272),
                            DisplayName = "ارسال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("4b7adc66-b186-42a7-bee6-07adb5285244"),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2275),
                            DisplayName = "خارج شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("c2fa4b64-bfdf-4f03-9608-6695ed1789c8"),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2277),
                            DisplayName = "آینده",
                            EnableRecord = true,
                            GuidRecord = new Guid("3f443e32-6b99-4f1c-bc80-6e8787f9cf52"),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3006),
                            DisplayName = "مبلغ",
                            EnableRecord = true,
                            GuidRecord = new Guid("3d1e22cf-f58c-4303-8101-5f5815e4753d"),
                            Name = "Price",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 301L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3013),
                            EnableRecord = true,
                            EndorsementItemId = 1L,
                            GuidRecord = new Guid("ba78e33c-b7c3-4591-bc92-77e32d303e64"),
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3016),
                            EnableRecord = true,
                            EndorsementItemId = 2L,
                            GuidRecord = new Guid("c276e0c8-53d5-44e2-8f12-c424dec011f7"),
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3019),
                            EnableRecord = true,
                            EndorsementItemId = 3L,
                            GuidRecord = new Guid("e977ec66-627c-4b89-b8b4-a9222814f001"),
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 203L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3021),
                            EnableRecord = true,
                            EndorsementItemId = 4L,
                            GuidRecord = new Guid("68e224fc-e14d-4fdd-b5d9-4d63e1928726"),
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 202L,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("ConditionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2897),
                            DisplayName = "ثبت درخواست",
                            EnableRecord = true,
                            GuidRecord = new Guid("37010a00-26d3-48a7-ab7f-0fb861eeb6eb"),
                            Name = "Sample_Scenario,Requestor",
                            RoleId = 100L,
                            ScenarioId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2901),
                            DisplayName = "بررسی درخواست",
                            EnableRecord = true,
                            GuidRecord = new Guid("f50f8fb7-a5f6-419d-bc25-08d06bdbe275"),
                            Name = "Sample_Scenario,RequestorManager",
                            RoleId = 101L,
                            ScenarioId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_EndorsementItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_EndorsementItem", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CaseStateId = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2929),
                            EnableRecord = true,
                            EndorsementId = 1L,
                            GuidRecord = new Guid("3a76c8ad-0c57-4177-afbe-cd153bc9d98b"),
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CaseStateId = 3L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2937),
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("c5681637-42a6-4501-a50f-dbceabff7fb9"),
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CaseStateId = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2939),
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("6aeb8245-a5f0-492b-af09-2847e2ecda6b"),
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CaseStateId = 4L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2941),
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("8727c7dc-0b62-4b97-ac4f-756cbbe3947c"),
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(2871),
                            DisplayName = "سناریو نمونه",
                            EnableRecord = true,
                            GuidRecord = new Guid("54496abf-2c18-4780-bda8-4e42f1d96478"),
                            Name = "SampleScenario",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_EndorsementItemEndorsement", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3170),
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("8de1eecd-5163-4184-b076-2cf82e7561cc"),
                            SecondId = 2L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3176),
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("63f7e25b-1ba3-499a-9f07-6ee598a04176"),
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_EndorsementUser", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_EndorsementUser", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3126),
                            DisplayName = "فرآیند نمونه-سناریو نمونه",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("e1de4067-cdbd-4dec-b58c-84afa4739c79"),
                            Name = "SampleProcess-SampleScenario",
                            SecondId = 1L,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3100),
                            DisplayName = "درخواست کننده-کارشناس",
                            EnableRecord = true,
                            FirstId = 100L,
                            GuidRecord = new Guid("2369579c-b54e-4cab-b244-ea4537b3e851"),
                            Name = "Requestor-Expert",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3103),
                            DisplayName = "مدیر درخواست کننده-کارشناس",
                            EnableRecord = true,
                            FirstId = 101L,
                            GuidRecord = new Guid("b3ae78b2-b921-4328-ac70-5b657bb3039f"),
                            Name = "RequestorManager-Expert",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3076),
                            DisplayName = "محمد شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("9f83e371-1996-43f3-8cce-2cc11f3447cb"),
                            Name = "m.sharifi-Fars",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3080),
                            DisplayName = "امین شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("5256871e-569d-40cb-b919-a3cf821e5375"),
                            Name = "a.sharifi-Fars",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3146),
                            DisplayName = "محمد شریفی-کارشناس",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("49340d70-d265-450b-9b06-d3a48ed9766d"),
                            Name = "m.sharifi-Expert",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 10, 8, 11, 55, 17, 848, DateTimeKind.Local).AddTicks(3149),
                            DisplayName = "امین شریفی-کارشناس",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("0a1d9b02-91de-4bfa-bbbb-132ca188ca4b"),
                            Name = "a.sharifi-Expert",
                            SecondId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah.Domain.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah.Domain.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah.Domain.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah.Domain.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Cheetah.Domain.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah.Domain.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Condition");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_EndorsementItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Facts.F_Endorsement", "Endorsement")
                        .WithMany("EndorsementItems")
                        .HasForeignKey("EndorsementId");

                    b.Navigation("CaseState");

                    b.Navigation("Endorsement");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Endorsements")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_EndorsementUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Users")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_Role", "Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Location", "Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_Role", b =>
                {
                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Endorsement", b =>
                {
                    b.Navigation("EndorsementItems");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_EndorsementItem", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");
                });

            modelBuilder.Entity("Cheetah.Domain.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

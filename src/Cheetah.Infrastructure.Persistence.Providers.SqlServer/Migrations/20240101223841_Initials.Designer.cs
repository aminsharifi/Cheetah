// <auto-generated />
using System;
using Cheetah.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah.Infrastructure.Persistence.Providers.SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240101223841_Initials")]
    partial class Initials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 150, DateTimeKind.Unspecified).AddTicks(9552), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("5f439273-ba88-47da-9e99-cbe40fc29f93"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 151, DateTimeKind.Unspecified).AddTicks(98), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(7396), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "در دست بررسی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("89d4e884-a04b-484d-8426-b81d5dd567d4"),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(7436), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "منتظر بازنگری",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("95482bf2-b673-4911-bdfe-ca8539c1c788"),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(7445), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کامل شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a4c471e5-b176-4d59-b9c4-9be099249125"),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(7448), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عدم تایید",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2a4725b3-ab14-4b3d-84cc-4cee1f87f5c6"),
                            Name = "Rejected",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(7461), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ابطال شده",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("9b9a910a-73e0-4230-8ebe-136a90539d9d"),
                            Name = "Aborted",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 151, DateTimeKind.Unspecified).AddTicks(6569), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("667968b0-0e51-49a8-8bd7-e970f75ae010"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 151, DateTimeKind.Unspecified).AddTicks(7204), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("Display");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 215, DateTimeKind.Unspecified).AddTicks(1200), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            ERPCode = 101L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1ac61008-66d2-4a24-9d40-370e7119c210"),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3302), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            ERPCode = 102L,
                            EnableRecord = true,
                            GuidRecord = new Guid("101f466d-440c-42d1-ab4d-502b81c05f64"),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3408), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            ERPCode = 103L,
                            EnableRecord = true,
                            GuidRecord = new Guid("40df96ab-dfdf-4655-bb25-c6250cbd7972"),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3443), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            ERPCode = 104L,
                            EnableRecord = true,
                            GuidRecord = new Guid("9bb303af-e1e8-4c38-94c4-79c204831d95"),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3461), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "سمت‌ها(Dimentions)",
                            ERPCode = 105L,
                            EnableRecord = true,
                            GuidRecord = new Guid("17202ceb-05aa-4cc0-b572-49d2a654f1c4"),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3475), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            ERPCode = 106L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5e075699-6587-40fa-a017-54a06f6d1a10"),
                            Name = "D_CaseState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3486), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            ERPCode = 107L,
                            EnableRecord = true,
                            GuidRecord = new Guid("49b03f1c-b05e-4306-b1aa-19d5dcc1bee6"),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3535), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            ERPCode = 108L,
                            EnableRecord = true,
                            GuidRecord = new Guid("959a0f36-d0e5-4f63-885f-293a418122ad"),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3578), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            ERPCode = 109L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1000badf-3535-409e-8832-012ca36b8f07"),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3590), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            ERPCode = 112L,
                            EnableRecord = true,
                            GuidRecord = new Guid("8e14479d-11d0-46c6-a75c-4bc055108f75"),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3597), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            ERPCode = 200L,
                            EnableRecord = true,
                            GuidRecord = new Guid("aed67cbb-864a-48b7-9677-9bcfd490abd2"),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3603), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            ERPCode = 202L,
                            EnableRecord = true,
                            GuidRecord = new Guid("0087c84a-a690-4579-80b9-bafdc94b724d"),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3609), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            ERPCode = 203L,
                            EnableRecord = true,
                            GuidRecord = new Guid("95fcff24-b1cf-4fc1-88c2-4f71c2770860"),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3668), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            ERPCode = 204L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5748cb0f-e189-4117-9209-b6f488851376"),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3676), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            ERPCode = 205L,
                            EnableRecord = true,
                            GuidRecord = new Guid("49573f9c-7b51-423c-aba4-432700bdb84f"),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3687), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            ERPCode = 206L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1e980b9b-c0d5-4bce-a14c-e1a80053a8fe"),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3692), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            ERPCode = 300L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d4c078a5-7a43-403d-b0de-9d5e010ec5d9"),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3697), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            ERPCode = 301L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c8abf036-29fa-4335-82ef-a3a6fced9cff"),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3704), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            ERPCode = 302L,
                            EnableRecord = true,
                            GuidRecord = new Guid("05df7904-4fdf-4b9d-9030-c87e59ab72d6"),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(3710), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            ERPCode = 303L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e417056b-c8e3-47e3-9204-6ebea49cb915"),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 152, DateTimeKind.Unspecified).AddTicks(3940), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("035f01c9-b223-43cf-8610-6a47cca6cd22"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 152, DateTimeKind.Unspecified).AddTicks(4452), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 217, DateTimeKind.Unspecified).AddTicks(6444), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فارس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("418514f1-3bd5-47a7-a035-684228178d49"),
                            Name = "Fars",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 153, DateTimeKind.Unspecified).AddTicks(752), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("83329a5b-6759-4a43-9ddb-09bbfb24ef80"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 153, DateTimeKind.Unspecified).AddTicks(1264), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(617), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مساوی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ccf266f7-3fdb-4eb4-96cf-df8438848185"),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(637), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مخالف",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ea29030c-939e-4e47-9e56-366d184e4bfa"),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(647), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزگتر از",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("243b9d8d-648f-4cca-b2b4-03efb5a5e9be"),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(649), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزرگتر و مساوی",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7636530e-88e1-46ec-a5ba-3e89015f952a"),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(652), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = " کوچکتر از",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("00ca11e4-fd19-4fb5-9fa9-7c2c418da1a6"),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(654), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کوچکتر و مساوی",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("45006648-db2b-4d5d-b2ac-182bce4d99d9"),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 153, DateTimeKind.Unspecified).AddTicks(7260), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d2a3b76d-76b8-4855-8909-1284ba237c88"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 153, DateTimeKind.Unspecified).AddTicks(7682), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(3785), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کارشناس",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("64811158-323c-4c83-ad73-756e69aeadd4"),
                            Name = "Expert",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 154, DateTimeKind.Unspecified).AddTicks(3685), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("a5829f9e-8bac-41e4-be10-d2b2db066a56"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 154, DateTimeKind.Unspecified).AddTicks(4107), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(110);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(5897), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فرآیند نمونه",
                            ERP = true,
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ab4407a8-2bfc-4cfe-bcbb-19fbdc6890c2"),
                            Name = "SampleProcess",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 155, DateTimeKind.Unspecified).AddTicks(161), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<bool>("FixedRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("ff057eee-f55f-4442-a690-86f54d15222f"))
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(100);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 155, DateTimeKind.Unspecified).AddTicks(613), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("Independent");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(8419), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "درخواست کننده",
                            ERPCode = 100L,
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("f52333b4-f4cc-46ad-afe0-dbf7a4bc0e59"),
                            Independent = false,
                            Name = "Requestor",
                            SortIndex = 100L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 218, DateTimeKind.Unspecified).AddTicks(8836), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مدیر درخواست کننده",
                            ERPCode = 101L,
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("48cf41d1-3115-48b7-bff4-474d9760d247"),
                            Independent = false,
                            Name = "RequestorManager",
                            SortIndex = 101L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 155, DateTimeKind.Unspecified).AddTicks(8390), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("cc1ed8df-bf80-451c-a10f-f5c4eaa255a0"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 155, DateTimeKind.Unspecified).AddTicks(9267), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(3877), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مرکز",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("15e847c3-e44c-4e00-a134-0ca8a80d725b"),
                            Name = "D_Location",
                            SortIndex = 1L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(4690), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            ERPCode = 201L,
                            EnableRecord = true,
                            GuidRecord = new Guid("bea49889-364f-4ea5-a9ad-8ffde5486233"),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(4706), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            ERPCode = 202L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5bdfdb1e-1991-413f-bc22-e55be3881818"),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(4826), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            ERPCode = 203L,
                            EnableRecord = true,
                            GuidRecord = new Guid("849378c9-0652-4d8f-ba74-02be71b4af32"),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(4841), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            ERPCode = 301L,
                            EnableRecord = true,
                            GuidRecord = new Guid("cf2c8fcd-3c34-49ff-8611-e0fa9e461d27"),
                            Name = "Price",
                            SortIndex = 301L,
                            TagTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 156, DateTimeKind.Unspecified).AddTicks(6703), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("ca240cb6-6b8f-430d-aee1-4fe2b5400abc"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 156, DateTimeKind.Unspecified).AddTicks(7242), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(7992), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عددی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("518be551-e9dc-44b8-a30a-188df359c0ff"),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(8013), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "دودویی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("4dbd05c5-e7db-4ad4-8189-d4ff90d31760"),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(8018), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "تاریخ",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("8fbd24bb-fd4a-4fb3-8938-0e5b7c660e2a"),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 219, DateTimeKind.Unspecified).AddTicks(8028), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "حروف",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("31976beb-3e17-4103-a2ee-934abf928956"),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<bool?>("EnabledForAssignation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("DelegateId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 157, DateTimeKind.Unspecified).AddTicks(4045), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("0358f5ef-4df3-4dda-bc2d-f9735ea33eea"))
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 157, DateTimeKind.Unspecified).AddTicks(4516), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 158, DateTimeKind.Unspecified).AddTicks(658), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("bcace081-0d0a-4c3f-9ec9-304eb05a5c25"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 158, DateTimeKind.Unspecified).AddTicks(1100), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 220, DateTimeKind.Unspecified).AddTicks(1132), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "صندوق ورودی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d73e35f6-38a1-4829-a8b8-37fd7b4e333c"),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 220, DateTimeKind.Unspecified).AddTicks(1150), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ارسال شده",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a46612d2-5602-478a-b34a-f1ffceddeedb"),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 220, DateTimeKind.Unspecified).AddTicks(1154), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "خارج شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5f2e5e83-4a8c-4b54-b5d7-86d19577c8b9"),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 220, DateTimeKind.Unspecified).AddTicks(1156), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "آینده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a249c477-d6c3-4641-9a6f-85bb03d09873"),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 158, DateTimeKind.Unspecified).AddTicks(7268), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d6d19f74-8e35-41ff-8713-a929d5a5d13e"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 158, DateTimeKind.Unspecified).AddTicks(7726), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 159, DateTimeKind.Unspecified).AddTicks(6430), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("9195babd-836b-4e61-9e48-0d14bfefdacb"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 159, DateTimeKind.Unspecified).AddTicks(7121), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 160, DateTimeKind.Unspecified).AddTicks(7344), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d67b9b06-5482-42e6-92c6-123429dace97"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 160, DateTimeKind.Unspecified).AddTicks(8059), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 209, DateTimeKind.Unspecified).AddTicks(7748), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مبلغ",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("720ccbc3-d922-47f7-8439-579e16b1ae7a"),
                            Name = "Price",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 301L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 210, DateTimeKind.Unspecified).AddTicks(2271), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 2L,
                            EnableRecord = true,
                            EndorsementItemId = 1L,
                            GuidRecord = new Guid("48147843-2868-4073-b9f6-65ce9ad06e7d"),
                            Name = "One",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 210, DateTimeKind.Unspecified).AddTicks(2634), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 3L,
                            EnableRecord = true,
                            EndorsementItemId = 2L,
                            GuidRecord = new Guid("bbd32109-a82c-4c3c-be5a-f638f2c8ff68"),
                            Name = "Two",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 201L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 210, DateTimeKind.Unspecified).AddTicks(2662), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 4L,
                            EnableRecord = true,
                            EndorsementItemId = 3L,
                            GuidRecord = new Guid("850bd914-0fc3-4102-89c6-81cdac877b0d"),
                            Name = "Three",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 203L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 210, DateTimeKind.Unspecified).AddTicks(2675), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 5L,
                            EnableRecord = true,
                            EndorsementItemId = 4L,
                            GuidRecord = new Guid("02a6e880-f320-45ff-89b7-7716981b4a30"),
                            Name = "Four",
                            OperandId = 1L,
                            SortIndex = 1L,
                            TagId = 202L,
                            Value = "1"
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<long?>("ConditionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 161, DateTimeKind.Unspecified).AddTicks(7221), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("ba0f4696-2aba-45e1-b646-3a5269e7c768"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 161, DateTimeKind.Unspecified).AddTicks(7893), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementItemId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 211, DateTimeKind.Unspecified).AddTicks(3556), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ثبت درخواست",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("88858e14-c2db-4afa-833c-a274da5266e6"),
                            Name = "Sample_Scenario__Requestor",
                            RoleId = 100L,
                            ScenarioId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 211, DateTimeKind.Unspecified).AddTicks(4380), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بررسی درخواست",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("278cc6bd-8a35-4ba5-a892-c1cbaa8f2d13"),
                            Name = "Sample_Scenario__RequestorManager",
                            RoleId = 101L,
                            ScenarioId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 162, DateTimeKind.Unspecified).AddTicks(6088), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("e4355ea6-15ed-486d-8071-3966a7b1825a"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 162, DateTimeKind.Unspecified).AddTicks(6745), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_EndorsementItem", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CaseStateId = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(124), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 1L,
                            EnableRecord = true,
                            EndorsementId = 1L,
                            GuidRecord = new Guid("844f15af-7202-4ef7-94b6-6d616a0140fa"),
                            Name = "one",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CaseStateId = 3L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(950), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 2L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("9b2ceb78-e295-449f-b348-195d3680257a"),
                            Name = "two",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CaseStateId = 2L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(988), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 3L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("e79a3585-a792-419f-82a7-90d95320e1c1"),
                            Name = "Three",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CaseStateId = 4L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(994), new TimeSpan(0, 3, 30, 0, 0)),
                            ERPCode = 4L,
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("890369bb-1e5f-4191-9eb0-d50c82a2af32"),
                            Name = "Four",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 163, DateTimeKind.Unspecified).AddTicks(3033), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("17e8cd1e-0ff6-4a39-82f5-457cf354b040"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 163, DateTimeKind.Unspecified).AddTicks(3451), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 39, 212, DateTimeKind.Unspecified).AddTicks(3934), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("460088bb-8d2e-4968-a11a-380cf7ba458e"),
                            Name = "SampleScenario",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(1);

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 164, DateTimeKind.Unspecified).AddTicks(2046), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("bd9d5228-a2a4-4fc0-8fe8-061952f14801"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 1, 2, 2, 8, 40, 164, DateTimeKind.Unspecified).AddTicks(2767), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_EndorsementItemEndorsement", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementUser", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_EndorsementUser", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_ProcessScenario", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_RolePosition", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_UserLocation", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("CreateTimeRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit");

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("LastUpdatedRecord")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[FirstId] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[SecondId] IS NOT NULL");

                    b.ToTable("L_UserPosition", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany()
                        .HasForeignKey("EndorsementItemId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Condition");

                    b.Navigation("EndorsementItem");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany("EndorsementItems")
                        .HasForeignKey("EndorsementId");

                    b.Navigation("CaseState");

                    b.Navigation("Endorsement");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementItemEndorsement", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_EndorsementItem", "EndorsementItem")
                        .WithMany("Endorsements")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("EndorsementItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_EndorsementUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Users")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Endorsement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Role", "Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Location", "Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId");

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Role", b =>
                {
                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Endorsement", b =>
                {
                    b.Navigation("EndorsementItems");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_EndorsementItem", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

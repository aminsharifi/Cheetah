// <auto-generated />
using System;
using Cheetah.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cheetah.Infrastructure.Persistence.Providers.SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 951, DateTimeKind.Unspecified).AddTicks(8662), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("a169fe70-b3fd-45bf-a8f3-b55f67e8a4bb"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8751), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مقدار دهی اولیه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d0885ddc-dca6-48e2-864f-50f53ab5d986"),
                            Name = "Initializing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8766), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "در دست بررسی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("99397c6c-0153-4743-8d0e-1bda98ed4429"),
                            Name = "Ongoing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8781), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "منتظر بازنگری",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("629ae0fa-023f-40d5-a11e-e1b01596ff48"),
                            Name = "Editing",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8786), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کامل شده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("53a0e017-7c71-45dd-90db-96b4d31fcfee"),
                            Name = "Completed",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8789), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عدم تایید",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2fde0fa7-9c5a-4b93-9f6d-b345166ac5d9"),
                            Name = "Rejected",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(8792), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ابطال شده",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("585ec7e6-71fc-4ecf-9eb8-687299cd6ec3"),
                            Name = "Aborted",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 952, DateTimeKind.Unspecified).AddTicks(1151), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("72260a6c-2b78-471f-bc49-67019ef0c650"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("Display");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 493, DateTimeKind.Unspecified).AddTicks(8376), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            ERPCode = 101L,
                            EnableRecord = true,
                            GuidRecord = new Guid("4ee40b9a-cab7-4749-b917-0d08f3a555ad"),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2068), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            ERPCode = 102L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5434a20f-05c8-4314-8fc6-a19b364cc201"),
                            Name = "D_Operand",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2108), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            ERPCode = 103L,
                            EnableRecord = true,
                            GuidRecord = new Guid("843b6f5b-522f-4906-8b4a-8f93d857d047"),
                            Name = "D_Tag",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2116), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            ERPCode = 104L,
                            EnableRecord = true,
                            GuidRecord = new Guid("8e5b91f0-f2d6-4ae1-ad2d-203b28d486b0"),
                            Name = "D_CaseState",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2130), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            ERPCode = 105L,
                            EnableRecord = true,
                            GuidRecord = new Guid("11742085-588a-4059-9c4d-eb61c78afbb1"),
                            Name = "D_Process",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2150), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            ERPCode = 106L,
                            EnableRecord = true,
                            GuidRecord = new Guid("a9b932e2-be82-485f-a3fc-43f969da1dab"),
                            Name = "D_User",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2157), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            ERPCode = 107L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e0249e8a-47e8-43a4-871f-4206cdb54ac0"),
                            Name = "D_UserInformation",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2164), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            ERPCode = 108L,
                            EnableRecord = true,
                            GuidRecord = new Guid("b9e3157f-6118-4756-b3d4-bc0375e924b0"),
                            Name = "F_WorkItem",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2172), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            ERPCode = 109L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ee009a91-9ecc-4224-b81b-5449f1dc3dfc"),
                            Name = "F_Attachment",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 110L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2177), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            ERPCode = 110L,
                            EnableRecord = true,
                            GuidRecord = new Guid("eaa08f44-4e15-4839-ac20-161f82c1a5fe"),
                            Name = "F_Task",
                            SortIndex = 110L
                        },
                        new
                        {
                            Id = 111L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2184), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            ERPCode = 111L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c7ef89ab-6523-4bbd-9b04-698b6330b0b7"),
                            Name = "F_Condition",
                            SortIndex = 111L
                        },
                        new
                        {
                            Id = 112L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2190), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            ERPCode = 112L,
                            EnableRecord = true,
                            GuidRecord = new Guid("38f8dbab-56f4-48b0-a409-a3218c3bbc3f"),
                            Name = "F_Case",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 113L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2199), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            ERPCode = 113L,
                            EnableRecord = true,
                            GuidRecord = new Guid("1ddc8cdc-d063-4a99-b785-d28ffb0da01f"),
                            Name = "F_Scenario",
                            SortIndex = 113L
                        },
                        new
                        {
                            Id = 114L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(2905), new TimeSpan(0, 3, 30, 0, 0)),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            ERPCode = 114L,
                            EnableRecord = true,
                            GuidRecord = new Guid("8b078a43-fad8-45f5-b47b-96dbf0ce3465"),
                            Name = "L_ProcessScenario",
                            SortIndex = 114L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 952, DateTimeKind.Unspecified).AddTicks(3043), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("dcf4fe36-ca1b-4e88-af24-f86884cf0348"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 952, DateTimeKind.Unspecified).AddTicks(4881), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8966c40d-79a2-4a0c-b776-35e11ff11ba1"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6113), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مساوی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d5882eee-1db7-4373-b827-34d69fd83efb"),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6132), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "مخالف",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("6b3c4d50-7f9e-484a-9fce-38c5427c64d9"),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6135), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزگتر از",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("5f1187ad-3a3c-455f-a8a3-4fa8a51994c4"),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6138), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بزرگتر و مساوی",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("99d55a57-bebb-4b47-80a9-e64964a7a77d"),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6141), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = " کوچکتر از",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("28dd2aca-5a3a-48a4-a43a-b45873800cca"),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(6145), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "کوچکتر و مساوی",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c8804073-7462-4130-9097-43fb9eba3f8f"),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 952, DateTimeKind.Unspecified).AddTicks(6657), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("98eb684e-74f1-463f-acd2-c3c08b99c585"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(110);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 495, DateTimeKind.Unspecified).AddTicks(7544), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فرآیند نمونه",
                            ERP = true,
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("eab6cf22-5771-4234-9432-5efb0cfde8ce"),
                            Name = "SampleProcess",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 952, DateTimeKind.Unspecified).AddTicks(9031), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("d395053a-dcb4-497c-81a8-8c1819265f09"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(1943), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "مقداردهی اولیه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("2f9b3bef-c486-4c3f-b675-c33adba8bfb3"),
                            Name = "Initializing",
                            SortIndex = 1L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4575), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "تایید",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("b1150804-3153-41c1-afc9-5ff6baf7a422"),
                            Name = "Approve",
                            SortIndex = 2L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4580), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "عدم تایید",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("3654c067-a3b5-494f-bb0e-6aa88d5abad7"),
                            Name = "Reject",
                            SortIndex = 3L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4590), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "دودویی",
                            DisplayName = "بازنگری",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c7811475-46d2-4edd-bd42-4a6a792fcf1b"),
                            Name = "Revise",
                            SortIndex = 4L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4594), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "موقعیت",
                            ERPCode = 5L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e22e8d24-c6ad-4d90-a61c-065dc8c642b6"),
                            Name = "Location",
                            SortIndex = 5L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 6L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4598), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "نقش",
                            ERPCode = 6L,
                            EnableRecord = true,
                            GuidRecord = new Guid("6dd00ec8-4d0a-44e2-a993-513695e9ddd0"),
                            Name = "Role",
                            SortIndex = 6L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 7L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4602), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            DisplayName = "سمت",
                            ERPCode = 7L,
                            EnableRecord = true,
                            GuidRecord = new Guid("85e1f90b-6e3e-4381-ac35-19dc889987aa"),
                            Name = "Position",
                            SortIndex = 7L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 8L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4607), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "حروف",
                            ERPCode = 8L,
                            EnableRecord = true,
                            GuidRecord = new Guid("10b34e52-916f-46a9-a1fa-66ba36d161f0"),
                            Name = "Employees",
                            SortIndex = 8L,
                            TagTypeId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(4611), new TimeSpan(0, 3, 30, 0, 0)),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            ERPCode = 9L,
                            EnableRecord = true,
                            GuidRecord = new Guid("7d1d5c84-ca61-4739-8cdb-173fb9a14d8d"),
                            Name = "Price",
                            SortIndex = 9L,
                            TagTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 953, DateTimeKind.Unspecified).AddTicks(1288), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("fe7d8e63-386d-46ff-a1a3-77029e651c55"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(3905), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "عددی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c65f81a9-ec09-4745-b71c-479e5b6e9ed7"),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(3915), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "دودویی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("0ca4e2b0-93fd-46f0-b194-f08d1de4ed45"),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(3919), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "تاریخ",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("e5d6b371-7fc6-4b48-b9bd-fdd895350502"),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(3922), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "حروف",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("f038ce78-1b56-4d0d-9e0e-a7fc93694f25"),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 953, DateTimeKind.Unspecified).AddTicks(3520), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("3d4ee775-9056-46d7-aee5-447b8ca8b5e8"))
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(9644), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "محمد شریفی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("bba9654f-7538-406a-8781-d0a365e1d0be"),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 496, DateTimeKind.Unspecified).AddTicks(9686), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "امین شریفی",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("d05e0f4f-0b2f-405a-a97e-8776b49fdb29"),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 953, DateTimeKind.Unspecified).AddTicks(5688), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c98844eb-b0ac-4626-98be-56a555064c42"))
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 953, DateTimeKind.Unspecified).AddTicks(7473), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("eda78870-c13b-4672-90fd-62da31cb13d7"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 497, DateTimeKind.Unspecified).AddTicks(1577), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "صندوق ورودی",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c9f37128-c711-4d78-add6-a35245e31565"),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 497, DateTimeKind.Unspecified).AddTicks(1584), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ارسال شده",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("c17f3d2f-f19b-4ffb-bdeb-a8522557c919"),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 497, DateTimeKind.Unspecified).AddTicks(1588), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "خارج شده",
                            ERPCode = 3L,
                            EnableRecord = true,
                            GuidRecord = new Guid("31d0a70c-38f4-47b1-9d3e-5e93cf815aed"),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 497, DateTimeKind.Unspecified).AddTicks(1591), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "آینده",
                            ERPCode = 4L,
                            EnableRecord = true,
                            GuidRecord = new Guid("b819f914-095f-403c-89c5-90332062f6bf"),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Action", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 954, DateTimeKind.Unspecified).AddTicks(3491), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("1c847350-c15e-4c9e-b2ff-cfdb9e0c7e76"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Action", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 954, DateTimeKind.Unspecified).AddTicks(5751), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("e81f4c24-025d-4f08-9c53-0c8e4bfa72ce"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 954, DateTimeKind.Unspecified).AddTicks(8364), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("474b4587-a56f-4403-821a-8934f7a7f30c"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("ActionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 955, DateTimeKind.Unspecified).AddTicks(3484), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8c2403c6-3b40-4b20-bd81-c4c8e9a86f2b"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CaseId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("OperandId");

                    b.HasIndex("TagId");

                    b.HasIndex("WorkItemId");

                    b.ToTable("F_Condition", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 955, DateTimeKind.Unspecified).AddTicks(8344), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("7b7e71ed-b340-4745-90f9-538bc8c60be1"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(4204), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("ad395346-3683-4b8c-a3af-7ede18e179b2"),
                            Name = "SampleScenario",
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("ConditionId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 956, DateTimeKind.Unspecified).AddTicks(2580), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("de75e1e5-8d9c-460e-92ef-4eeda617aedf"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ConditionId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Task", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(6180), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "ثبت درخواست",
                            ERPCode = 1L,
                            EnableRecord = true,
                            GuidRecord = new Guid("df974c33-034e-4137-a992-b6f3df46c29a"),
                            Name = "Sample_Scenario_Requestor",
                            ScenarioId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 492, DateTimeKind.Unspecified).AddTicks(6417), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "بررسی درخواست",
                            ERPCode = 2L,
                            EnableRecord = true,
                            GuidRecord = new Guid("bdca15e9-f261-4bdf-a5d5-39bfe490470f"),
                            Name = "Sample_Scenario_RequestorManager",
                            ScenarioId = 1L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 956, DateTimeKind.Unspecified).AddTicks(7014), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("fb2c80b8-ada5-4507-9185-5ed49c9b2c4f"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseTaskUser", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 957, DateTimeKind.Unspecified).AddTicks(1150), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("c217c2f8-3a06-4662-ab19-e1070e68fd2e"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_CaseTaskUser", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 957, DateTimeKind.Unspecified).AddTicks(5440), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("5be2fb89-9726-4e32-a7e5-fdbb730cd39d"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Created = new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 491, DateTimeKind.Unspecified).AddTicks(7216), new TimeSpan(0, 3, 30, 0, 0)),
                            DisplayName = "فرآیند نمونه-سناریو نمونه",
                            ERPCode = 1L,
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("4bd3841c-5637-42d7-8f93-2e767cda7b6d"),
                            Name = "SampleProcess_SampleScenario",
                            SecondId = 1L,
                            SortIndex = 1L
                        });
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskAction", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 957, DateTimeKind.Unspecified).AddTicks(9748), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("27cfd6dc-8522-4ceb-843e-5da757aeaef8"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_TaskAction", "Links");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserCondition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1)
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTimeOffset?>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValue(new DateTimeOffset(new DateTime(2024, 2, 10, 13, 3, 18, 958, DateTimeKind.Unspecified).AddTicks(2917), new TimeSpan(0, 3, 30, 0, 0)))
                        .HasColumnOrder(6);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnOrder(9);

                    b.Property<long?>("FifthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("FourthId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("154de2f4-12b0-491f-a70f-e99f3686bdd7"))
                        .HasColumnOrder(8);

                    b.Property<DateTimeOffset?>("LastModified")
                        .IsConcurrencyToken()
                        .HasColumnType("datetimeoffset")
                        .HasColumnOrder(7);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasDefaultValue("")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnOrder(2);

                    b.Property<long?>("ThirdId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("Created")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FifthId")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("FourthId")
                        .IsDescending();

                    b.HasIndex("LastModified")
                        .IsDescending();

                    b.HasIndex("Name")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.HasIndex("ThirdId")
                        .IsDescending();

                    b.ToTable("L_UserCondition", "Links");
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("IU_UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IU_UserId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Action", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.Navigation("CaseState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Action", "Action")
                        .WithMany("Conditions")
                        .HasForeignKey("ActionId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_WorkItem", "WorkItem")
                        .WithMany("Conditions")
                        .HasForeignKey("WorkItemId");

                    b.Navigation("Action");

                    b.Navigation("Case");

                    b.Navigation("Operand");

                    b.Navigation("Tag");

                    b.Navigation("WorkItem");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("Tasks")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Condition");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Task");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_CaseTaskUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Case", "Case")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("ThirdId");

                    b.Navigation("Case");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_TaskAction", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Task", "Task")
                        .WithMany("TaskAction")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Action", "Action")
                        .WithMany("TaskAction")
                        .HasForeignKey("SecondId");

                    b.Navigation("Action");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Links.L_UserCondition", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "User")
                        .WithMany("UserConditions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah.Domain.Entities.Facts.F_Condition", "Condition")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("Condition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah.Domain.Entities.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId");

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Cheetah.Infrastructure.Persistence.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserConditions");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Action", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("TaskAction");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Scenario", b =>
                {
                    b.Navigation("ProcessScenarios");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_Task", b =>
                {
                    b.Navigation("TaskAction");
                });

            modelBuilder.Entity("Cheetah.Domain.Entities.Facts.F_WorkItem", b =>
                {
                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}

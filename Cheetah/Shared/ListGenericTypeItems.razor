@using Cheetah.Shared.Dimentions
@typeparam TEntity
@inject IJSRuntime _jSRuntime;
@inject ISimpleClassRepository simpleClassRepository;
@inject NavigationManager _NavigationManager;
@inject CNavigation _CNavigation;

@if (Records != null && Records.Any())
{
    <_DeleteConfirmation ConfirmationChanged="ConfirmDelete_Click"></_DeleteConfirmation>
 
    <Ctable>
        <thead>
            <tr class="d-flex">
                <th class="col-1" scope="col">شناسه</th>
                <th class="col-1" scope="col">کد</th>
                <th class="col-1" scope="col">ایندکس</th>
                <th class="col-2" scope="col">نام</th>
                <th class="col-2" scope="col">نام نمایشی</th>
                <th class="col-2" scope="col">متن راهنما</th>
                <th class="col-1" scope="col">غیرفعال</th>
                @HeaderContent
                <th class="col-2" scope="col">اقدام</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Records as IEnumerable<SimpleClass>)
            {
                <tr class="d-flex">
                    <th class="d-flex justify-content-center col-1" scope="row"><span style="align-self:center"> @(item.Id)</span></th>
                    <td class="d-flex justify-content-center col-1"><span style="align-self:center"> @(item.PCode)</span></td>
                    <td class="d-flex justify-content-center col-1"><span style="align-self:center"> @(item.PIndex)</span></td>
                    <td class="d-flex justify-content-center col-2"><span style="align-self:center"> @(item.PName)</span></td>
                    <td class="d-flex justify-content-center col-2"><span style="align-self:center"> @(item.PDisplayName)</span></td>
                    <td class="d-flex justify-content-center col-2"><span style="align-self:center"> @(item.PDescription)</span></td>
                    <td class="d-flex justify-content-center col-1">
                        <div class="form-check form-switch" style="align-self:center">
                            <input class="form-check-input" type="checkbox" role="switch" disabled
                                   style="width:3em"
                                   checked="@(item.DsblRecord)">
                        </div>
                    </td>
                    @BodyContent
                    <td class="col-2">
                        <div class="btn-group" role="group" aria-label="Basic example" style="direction: ltr">
                            <button class="btn btn-danger" @onclick="()=>HandleDelete((item as SimpleClass).Id)">
                                حذف
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                </svg>
                            </button>

                            @if (type == SD.First || type == SD.Second)
                            {
                                <NavLink class="btn btn-primary btn"
                                         href="@($"Links/Edit/{item.GetType().BaseType.Name}/{type}/{(item as SimpleClass).Id}/{reference}")">
                                    ویرایش
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                    </svg>
                                </NavLink>
                            }
                            else
                            {
                                <NavLink class="btn btn-primary btn"
                                         href="@($"Dimentions/Edit/{item.GetType().BaseType.Name}/{(item as SimpleClass).Id}/{reference}")">
                                    ویرایش
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z" />
                                    </svg>
                                </NavLink>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </Ctable>
}

@code {
    [Parameter]
    public long Id { get; set; } = 0;

    [Parameter]
    public EventCallback ParentCallback { get; set; }


    [Parameter]
    public IEnumerable<TEntity>? Records { get; set; }

    [Parameter]
    public String? type { get; set; }

    [Parameter]
    public String? reference { get; set; }

    [Parameter]
    public RenderFragment? HeaderContent { get; set; }

    [Parameter]
    public RenderFragment? BodyContent { get; set; }

    [Parameter]
    public String Name { get; set; }

    public String CurrentState { get; set; }

    public long DeleteidRole { get; set; }

    private async Task HandleDelete(long DeletedState)
    {
        DeleteidRole = DeletedState;
        await _jSRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        if (isConfirmed && DeleteidRole != 0)
        {
            await simpleClassRepository.delete(Name, DeleteidRole);
            await _jSRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
            await ParentCallback.InvokeAsync();
        }
    }
}
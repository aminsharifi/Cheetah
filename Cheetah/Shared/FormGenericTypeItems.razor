@using Cheetah_DataAccess.Data
@using System.ComponentModel;
@using Cheetah_DataAccess.Dimentions;
@using Cheetah_Common;
@typeparam TEntity where TEntity : SimpleClass
@inject ISimpleClassRepository simpleClassRepository;
@inject NavigationManager _NavigationManager;

<div class="row my-4" style="direction:rtl">
    <h3 class="card-title text-primary mb-3 ml-3">@Title @Name</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <h1>در حال بارگیری اطلاعات ...</h1>
        }
        else if(Record != null)
        {
            <EditForm Model="Record" OnValidSubmit="UpsertTask">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>شناسه</label>
                    <input @bind="Record.Id" disabled="disabled" class="form-control"></input>
                    <label>کد</label>
                    <InputNumber @bind-Value="Record.PCode" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => Record.PCode)" />
                    <label>ایندکس</label>
                    <InputNumber @bind-Value="Record.PIndex" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => Record.PIndex)" />
                    <label>نام نمایشی</label>
                    <InputText class="form-control"
                           @bind-Value="Record.PDescription"></InputText>
                    <ValidationMessage For="@(() => Record.PDescription)" />
                    <label>نام</label>
                    <InputText @bind-Value="Record.PName" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Record.PName)" />
                    @if (RowTemplate is not null)
                    {
                        @RowTemplate
                    }
                </div>
                <div class="form-group  py-2">
                    <button class="btn btn-primary">@Title</button>
                    @if (type == SD.First || type == SD.Second)
                    {
                        @if (LinkId != 0)
                        {
                            <NavLink href="@($"Dimentions/Parameters/List/{Name}/{type}/{LinkId}/{reference}")" class="btn btn-secondary">برگشت</NavLink>
                        }
                        else
                        {
                            <NavLink href="@($"Dimentions/Parameters/List/{Name}/{type}/{Id}/{reference}")" class="btn btn-secondary">برگشت</NavLink>
                        }
                    }
                    else
                    {
                        <NavLink href="@($"Dimentions/Parameters/List/{Name}")"
                         class="btn btn-secondary">برگشت</NavLink>
                    }
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public Boolean IsLoading { get; set; } = true;
    [Parameter]
    public long Id { get; set; } = 0;
    [Parameter]
    public TEntity Record { get; set; }
    [Parameter]
    public String? reference { get; set; }
    [Parameter]
    public String? Name { get; set; }
    [Parameter]
    public String? type { get; set; }
    [Parameter]
    public long? LinkId { get; set; } = 0;
    [Parameter]
    public String? Title { get; set; }
    [Parameter]
    public RenderFragment? RowTemplate { get; set; }

    private async Task UpsertTask()
    {

        var RecordId = Record.Id;
        if (RecordId > 0)
        {
            Record = await  simpleClassRepository.Update(Record) as TEntity;
        }
        else
        {
            Record = await  simpleClassRepository.Create(Record) as TEntity;
        }

        if (type == SD.First || type == SD.Second)
        {
            _NavigationManager.NavigateTo($"Dimentions/Parameters/List/{Name}/{type}/{LinkId}/{reference}");
        }
        else
        {
            _NavigationManager.NavigateTo($"Dimentions/Parameters/List/{Name}");
        }
    }
}
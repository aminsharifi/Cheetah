@page "/Parameters/Create"
@page "/Parameters/Edit/{idRole:long}"
@using Cheetah_Models.Parameters;

@inject IP_ParameterListRepository iP_ParameterListRepository;
@inject NavigationManager _NavigationManager;

<div class="row my-4" style="direction:rtl">
    <h3 class="card-title text-primary mb-3 ml-3">@Title نقش</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <h1>در حال بارگیری اطلاعات ...</h1>
        }
        else
        {
            <EditForm Model="p_ParameterListDTO" OnValidSubmit="UpsertTask">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>نام گروه اقدام</label>
                    <InputText @bind-Value="p_ParameterListDTO.PName" class="form-control"></InputText>
                    <ValidationMessage For="()=>p_ParameterListDTO.PName" />
                    <label>نوع پارامترها</label>
                    @foreach (var item in p_ParameterListDTO.PL_ParameterType)
                    {   
                        <InputText @bind-Value="item.PName" class="form-control"></InputText>
                    }
                </div>
                <div class="form-group  py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="Parameters/List" class="btn btn-secondary">برگشت</NavLink>
                </div>
            </EditForm>
        }
    </div>

</div>
@code {
    [Parameter]
    public long idRole { get; set; }
    private P_ParameterListDTO p_ParameterListDTO { get; set; } = new P_ParameterListDTO();

    private String Title { get; set; } = "ایجاد";

    public Boolean IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (idRole == 0)
            {
                IsLoading = false;
            }
            else
            {
                Title = "ویرایش";
                await LoadDTO();
            }
        }
    }

    private async Task LoadDTO()
    {
        IsLoading = true;
        StateHasChanged();
        p_ParameterListDTO = await iP_ParameterListRepository.Get(idRole);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertTask()
    {
        if (p_ParameterListDTO.IdRecord == 0)
        {
            //copyROLEDTO.roleName = "دکمه کلیک شد.";
            await iP_ParameterListRepository.Create(p_ParameterListDTO);
        }
        else
        {
            await iP_ParameterListRepository.Update(p_ParameterListDTO);
        }

        _NavigationManager.NavigateTo("Parameters/List");
    }
}

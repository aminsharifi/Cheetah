@page "/Dimentions/Create/D_Area/{reference}"
@page "/Dimentions/Edit/D_Area/{Id:long}/{reference}"

@inject ISimpleClassRepository simpleClassRepository;
@inject NavigationManager _NavigationManager;
@inject CNavigation _CNavigation;

<NavigationComponent _CNavigation="@_CNavigation" />
<FormGenericTypeItems Record="@Record" 
                      Name="@Name" Title="@Title" IsLoading="@IsLoading">
    <RowTemplate>
        <div class="shadow rounded p-3 form-group mx-1 my-1 col-sm-11 col-md-5">
            <div class="input-group" style="direction:ltr">
                <select @bind-value="Record.Area_UnitTypeId" @bind-value:event="oninput"
                        @onchange="SelectedProcessesChanged" class="form-select"
                        aria-describedby="basic-addon2" lang="fa" dir="rtl">

                    @if (Record.Area_UnitType == null)
                    {
                        <option selected value="">لطفا یک مورد را انتخاب نمایید</option>
                    }
                    @foreach (var unitType in unitTypes)
                    {
                        <option value="@unitType.Id">شناسه: @unitType.Id | نام: @unitType.PName | نام فارسی: @unitType.PDescription</option>
                    }
                </select>
                <br />
                <ValidationMessage For="@(() => Record.Area_UnitTypeId)" />
                <div class="input-group-prepend">
                    <span class="input-group-text" style="border-radius:revert;width: 7em;font-size:large;" lang="fa" dir="rtl">نوع واحد</span>
                </div>
            </div>
        </div>
        <div class="form-group mx-1 my-1 col-sm-11 col-md-5">
            <NavLink href="@($"Dimentions/Parameters/List/L_UserArea/{SD.Second}/{Record.Id}/Dimentions*Edit*{Name}*{Id}/{reference}")"
                     class="btn btn-secondary">لیست کاربرانی که این واحد را دارند</NavLink>
            <br />
        </div>
    </RowTemplate>
</FormGenericTypeItems>
@code {
    [Parameter]
    public long Id { get; set; } = 0;
    [Parameter]
    public String Name { get; set; } = "D_Area";
    [Parameter]
    public String? reference { get; set; }

    public D_Area Record { get; set; }

    public IEnumerable<SimpleClass> unitTypes { get; set; }

    public IEnumerable<SimpleClass> UserAreas { get; set; }

    private String Title { get; set; } = "ایجاد";

    public Boolean IsLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && Record is null)
        {
            Title = (Id > 0) ? "ذخیره" : "ایجاد";
            await LoadDTO();

        }
        if (reference is null || firstRender)
        {
            _CNavigation.LoadNavigation(TableName: Name, RowDescription: Record.PDescription,
            RowId: Record.Id, reference: reference);
            reference = _CNavigation.Serialize();
            IsLoading = false;
            StateHasChanged();
        }
    }
    private async Task SelectedProcessesChanged(ChangeEventArgs e)
    {
        if (Id > 0 && e.Value is not null)
        {
            var Area_UnitTypeId = Int64.Parse(e.Value.ToString());
            Record.Area_UnitType = unitTypes.First(x => x.Id == Area_UnitTypeId) as D_UnitType;
        }
    }
    private async Task LoadDTO()
    {
        Record = await simpleClassRepository.Get("D_Area", Id) as D_Area;
        unitTypes = await simpleClassRepository.GetAllByName("D_UnitType");
    }
}
@page "/Dimentions/Create/{Name}"
@page "/Dimentions/Edit/{Name}/{Id:long}"
@using Cheetah_DataAccess.Data;

@inject IGeneralRepository<D_ParameterType> iGeneralRepository;
@inject IGeneralRepository<D_FieldType> iD_FieldTypeRepository;
@inject IGeneralRepository<D_Operand> iD_OperandRepository;
@inject NavigationManager _NavigationManager;

<div class="row my-4" style="direction:rtl">
    <h3 class="card-title text-primary mb-3 ml-3">@Title نوع پارامتر</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <h1>در حال بارگیری اطلاعات ...</h1>
        }
        else
        {
            <EditForm Model="Record" OnValidSubmit="UpsertTask">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label>شناسه</label>
                    <input @bind="Record.Id" disabled="disabled" class="form-control"></input>
                    <label>کد</label>
                    <InputNumber @bind-Value="Record.PCode" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => Record.PCode)" />
                    <label>ایندکس</label>
                    <InputNumber @bind-Value="Record.PIndex" class="form-control"></InputNumber>
                    <ValidationMessage For="@(() => Record.PIndex)" />
                    <label>نام</label>
                    <InputText @bind-Value="Record.PName" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Record.PName)" />
                    <label>نام نمایشی</label>
                    <InputText @bind-Value="Record.PDescription" class="form-control"></InputText>
                    <ValidationMessage For="@(() => Record.PDescription)" />
                    @*<label>نوع پارامترها</label>
                @foreach (var item in p_ParameterListDTO.PL_ParameterType)
                {
                <InputText @bind-Value="item.PName" class="form-control"></InputText>
                }*@
                </div>
                <div class="form-group  py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="Dimentions/D_ParameterType/List" class="btn btn-secondary">برگشت</NavLink>
                </div>
            </EditForm>
        }
    </div>

</div>
@code {
    [Parameter]
    public long? Id { get; set; }
    [Parameter]
    public String? Name { get; set; }

    public D_ParameterType? Record { get; set; }

    private String Title { get; set; } = "ایجاد";

    public Boolean IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Title = (Id > 0) ? "ویرایش" : "ایجاد";
            await LoadDTO();
        }
    }

    private async Task LoadDTO()
    {

        IsLoading = true;
        StateHasChanged();

        switch (Name)
        {
            case "D_ParameterType":
                Record = await iGeneralRepository.Get(Id);
                break;
            case "D_FieldType":
                Record = await iD_FieldTypeRepository.Get(Id);
                break;
            case "D_Operand":
                Record = await iD_OperandRepository.Get(Id);
                break;
            default:
                Record = await iGeneralRepository.Get(Id);
                break;
        }

        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertTask()
    {
        if (Record.Id == 0)
        {
            switch (Name)
            {
                case "D_ParameterType":
                    Record = await iGeneralRepository.Update(Record);
                    break;
                case "D_FieldType":
                    Record = await iD_FieldTypeRepository.Update(Record);
                    break;
                case "D_Operand":
                    Record = await iD_OperandRepository.Update(Record);
                    break;
                default:
                    Record = await iGeneralRepository.Update(Record);
                    break;
            }
        }
        else
        {
            switch (Name)
            {
                case "D_ParameterType":
                    Record = await iGeneralRepository.Update(Record);
                    break;
                case "D_FieldType":
                    Record = await iD_FieldTypeRepository.Update(Record);
                    break;
                case "D_Operand":
                    Record = await iD_OperandRepository.Update(Record);
                    break;
                default:
                    Record = await iGeneralRepository.Update(Record);
                    break;
            }
        }

        _NavigationManager.NavigateTo("/Dimentions/D_ParameterType/List");
    }
}
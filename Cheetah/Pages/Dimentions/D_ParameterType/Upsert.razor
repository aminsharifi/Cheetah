@page "/Dimentions/Create/{Name}"
@page "/Dimentions/Edit/{Name}/{Id:long}"
@using Cheetah_DataAccess.Data;

@inject IGeneralRepository<D_ParameterType> iGeneralRepository;
@inject IGeneralRepository<D_FieldType> iD_FieldTypeRepository;
@inject IGeneralRepository<D_Operand> iD_OperandRepository;
@inject NavigationManager _NavigationManager;

<div class="row my-4" style="direction:rtl">
    <h3 class="card-title text-primary mb-3 ml-3">@Title @Name</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <h1>در حال بارگیری اطلاعات ...</h1>
        }
        else
        {
            @if (Id.HasValue)
            {
                <FormGenericTypeItems Record="@Record"
                              Name="@Name" Title="@Title">
                </FormGenericTypeItems>
            }
        }
    </div>

</div>

@code {
    [Parameter]
    public long? Id { get; set; }
    [Parameter]
    public String? Name { get; set; }

    public dynamic? Record { get; set; }
    

    private String Title { get; set; } = "ایجاد";

    public Boolean IsLoading { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Title = (Id > 0) ? "ویرایش" : "ایجاد";
            await LoadDTO();
        }
    }

    private async Task LoadDTO()
    {
        IsLoading = true;
        StateHasChanged();
        if (!Id.HasValue)
        {
            Id = 0;
        }
        switch (Name)
        {
            case "D_ParameterType":
                Record = await iGeneralRepository.Get(Id.Value) ;
                break;
            case "D_FieldType":
                Record = await iD_FieldTypeRepository.Get(Id.Value);
                break;
            case "D_Operand":
                Record = await iD_OperandRepository.Get(Id.Value);
                break;
            default:
                //Record = await iGeneralRepository.Get(Id);
                break;
        }

        IsLoading = false;
        StateHasChanged();
    }


}
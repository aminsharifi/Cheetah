@using Cheetah.Sample.Presentation.Web.Blazor.Server.AI
@using Microsoft.SemanticKernel.ChatCompletion
@using Microsoft.SemanticKernel;
@using Microsoft.SemanticKernel.Connectors.OpenAI
@using static Cheetah.Sample.Presentation.Web.Blazor.Server.Components.Pages.UserGuide
@inherits SharedPage
<MudDialog>
    <DialogContent>
        <MudGrid Class="d-flex justify-end">
            <MudItem xs="9">
                <MudTextField Lines="5" @bind-Value="currentItem.Body" Label="متن" Required="true" />
            </MudItem>
            <MudItem xs="3">
                <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="BodyValidation" Disabled="disableSubmit">اعتبارسنجی</MudButton>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="currentItem.Subject" Label="عنوان" Required="true" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="currentItem.Description" Label="توضیحات" Required="true" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="currentItem.Keywords" Label="کلمات کلیدی" Required="true" />
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Error" OnClick="Cancel">انصراف</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Submit">ذخیره</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public UserGuideItem currentItem { get; set; }
    void Submit() => MudDialog.Close(DialogResult.Ok(currentItem));
    void Cancel() => MudDialog.Cancel();

    private string userInput = String.Empty;
    private string question = String.Empty;
    ChatHistory _chathistory = new();
    String _aIResponse = String.Empty;
    bool disableSubmit = false;

    private async Task BodyValidation()
    {
        disableSubmit = true;
        // _kernel.Plugins.AddFromType<UserGuideInfo>("userguide_info");

        ChatHistory chatHistory = new ChatHistory();

        chatHistory.AddSystemMessage("user guide's body:\n");

        chatHistory.AddUserMessage(currentItem.Body);

        chatHistory.AddSystemMessage("extract subject from it in persian laguage");

        // Get the response from the AI
        var result = await ChatCompletionService.GetChatMessageContentAsync(
           chatHistory,
           kernel: _kernel);

        currentItem.Subject = result?.Items.FirstOrDefault()?.ToString();

        chatHistory.AddSystemMessage("just extract description from it in persian laguage");

        // Get the response from the AI
        result = await ChatCompletionService.GetChatMessageContentAsync(
           chatHistory,
           kernel: _kernel);

        currentItem.Description = result?.Items.FirstOrDefault()?.ToString();


        chatHistory.AddSystemMessage("just extract keywords from it in persian laguage");

        // Get the response from the AI
        result = await ChatCompletionService.GetChatMessageContentAsync(
          chatHistory,
          kernel: _kernel);

        currentItem.Keywords = result?.Items.FirstOrDefault()?.ToString();

        disableSubmit = false;
    }
}

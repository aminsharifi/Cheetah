// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230729133455_show-tag")]
    partial class showtag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3113),
                            DisplayName = "در دست بررسی",
                            EnableRecord = true,
                            GuidRecord = new Guid("540ba569-dc40-4773-9e39-70d0cbabace4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3114),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3119),
                            DisplayName = "منتظر بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("5f14387a-a932-4096-8751-acd55d42135f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3119),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3121),
                            DisplayName = "کامل شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("54b34ddb-ff74-4b80-abca-9421a9910ea0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3122),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3123),
                            DisplayName = "ابطال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("33d01d51-fa3f-4777-a1d2-f2e7f6d0f8af"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3124),
                            Name = "Aborted",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3553),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("13b1a8dd-8829-4d04-96ba-4be6c9de68bb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3554),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3599),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("8f51feb8-154f-4c07-820b-c0f145fd2265"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3600),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3607),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("1b17177d-5626-4408-b876-8eacaf451737"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3608),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3614),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("ddb4cc37-25ea-4b37-90f6-98a8774fc93d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3614),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3619),
                            Display = true,
                            DisplayName = "سمت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("48d3c5fc-262a-47ae-a776-f89b8bca5b3b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3620),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3662),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("2f05b060-ca37-4def-bd88-75e06302c857"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3663),
                            Name = "D_CaseState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3669),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("7e61b956-2193-43b0-91ff-dd442261c3af"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3669),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3674),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("1f1ebd6e-3ea4-4c5a-a907-bf816a6b1117"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3674),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3681),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("fd3aff1a-8a98-494d-8af7-24630a3bb741"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3682),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3686),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("657248f3-0031-4529-bf19-cf1d502e8d2b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3687),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3692),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("b608bbc4-13ba-4910-841f-12862be1c258"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3692),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3697),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("8bfead73-f85b-461e-a98d-c8b457cd06f0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3698),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3703),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("6e87d885-9dfe-4bc3-a557-418c39909c4a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3703),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3709),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("62da2497-9b19-488e-80f2-6bc1ddff1801"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3709),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3714),
                            Display = true,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("6af06b12-ca0a-4ce3-a447-78de09196f06"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3715),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3724),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("7f9605d2-d74d-41e6-bb82-d8c424518bd0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3725),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3731),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("f4748532-ce86-4f83-80ae-6c57f52dcc3a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3732),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3736),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("c8e34935-6a02-485d-b628-8c5460bf7797"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3737),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3741),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("fc7a8123-994f-439a-869f-da46506c0275"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3742),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3746),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("e0741698-3fbf-4883-8c1d-9c2076fbc2a9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3747),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3197),
                            DisplayName = "تهران",
                            EnableRecord = true,
                            GuidRecord = new Guid("0fd75ed3-0e69-4108-b40a-b7ae28e5878a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3197),
                            Name = "Tehran",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3201),
                            DisplayName = "فارس",
                            EnableRecord = true,
                            GuidRecord = new Guid("05f12800-33ab-42b1-b563-3ac56e7d516b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3201),
                            Name = "Fars",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3204),
                            DisplayName = "اصفهان",
                            EnableRecord = true,
                            GuidRecord = new Guid("cb461ea2-ba35-44da-bf7f-fdc6e9c7d4e4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3204),
                            Name = "Esfahan",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3225),
                            DisplayName = "مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("91555e22-3589-4af3-9197-7223544b0fa7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3231),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3253),
                            DisplayName = "مخالف",
                            EnableRecord = true,
                            GuidRecord = new Guid("be92c45b-58dd-45e2-86ce-7be74cb066ad"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3253),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3256),
                            DisplayName = "بزگتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("47b15cda-d066-4e47-b5c0-901979ccb7ea"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3257),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3259),
                            DisplayName = "بزرگتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("ada64c36-4d39-4f5a-840e-12ee3dd6a927"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3260),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3265),
                            DisplayName = " کوچکتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("cc86d132-dd7d-4427-92bb-b996626cd2cc"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3265),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3268),
                            DisplayName = "کوچکتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("ca22ecde-070e-4ed6-884e-bdab457e15c8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3268),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3515),
                            DisplayName = "معاون دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("23cb9239-23b0-4350-8599-2905c1cd964c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3516),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3518),
                            DisplayName = "معاون غذایی",
                            EnableRecord = true,
                            GuidRecord = new Guid("564d014d-7a7a-4cb4-b2e6-3cb7b6b5d729"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3519),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3521),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            EnableRecord = true,
                            GuidRecord = new Guid("04c07bc7-eb91-46fc-8f88-b512274c5d1c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3521),
                            Name = "BusinessSeniorSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3523),
                            DisplayName = "کارشناس بازرگانی",
                            EnableRecord = true,
                            GuidRecord = new Guid("24afceff-4653-4818-9fbc-6ab500231bc2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3523),
                            Name = "BusinessSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3526),
                            DisplayName = "کارشناس ارشد فروش",
                            EnableRecord = true,
                            GuidRecord = new Guid("e2dab696-ca73-48f9-8c5f-55b5b2a94ba9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3526),
                            Name = "SalesSeniorSpecialist",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3528),
                            DisplayName = "کارشناس فروش",
                            EnableRecord = true,
                            GuidRecord = new Guid("acaaedc4-3357-4ba5-923c-f167b733cfa9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3528),
                            Name = "SalesSpecialist",
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3531),
                            DisplayName = "مدیر مرکز توزیع",
                            EnableRecord = true,
                            GuidRecord = new Guid("538c0c04-71f4-456a-ac8b-5f2bb6c05b7f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3531),
                            Name = "DistributionCenterManager",
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2784),
                            DisplayName = "تعریف/اصلاح مشتری",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("1e68115c-7f56-40a1-b3c9-63055482dbc9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2799),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2900),
                            DisplayName = "مجوزهای موردی",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("95c0fa44-6750-467e-971b-e3a5978a351c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2901),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2920),
                            DisplayName = "اعتباردهی مالی مشتری",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("816e9489-248e-4e4b-a7c6-5abdd7b996a7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(2920),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool>("FixedRole")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3458),
                            DisplayName = "معاونت دارویی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("09754f54-718a-4ba6-87de-68fcd83aa310"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3459),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3462),
                            DisplayName = "معاونت غذایی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("2ed42f45-2de7-4acf-86aa-164abbd04acb"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3462),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3464),
                            DisplayName = "کارشناس بازرگانی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("f56e0149-064a-45b6-9ef5-825dd1c08076"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3465),
                            Name = "BusinessSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3467),
                            DisplayName = "کارشناس فروش",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("eadbad35-5946-4ed9-a85e-53b2b48ded67"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3468),
                            Name = "SalesSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3470),
                            DisplayName = "مدیریت مرکز توزیع",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("92477d9e-aa56-4552-87af-0f29c0370eb9"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3470),
                            Name = "DistributionCenterManager",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3473),
                            DisplayName = "درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("13fb921b-d5df-4dcc-9789-3beb177d280d"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3473),
                            Name = "Requestor",
                            SortIndex = 100L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3478),
                            DisplayName = "مدیر درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("bb2c9435-691a-434c-81f2-22805714596c"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3478),
                            Name = "RequestorManager",
                            SortIndex = 101L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3326),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            EnableRecord = true,
                            GuidRecord = new Guid("02d5de93-04ff-436c-ae44-999e9ed16493"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3326),
                            Name = "OursShare",
                            SortIndex = 100L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3329),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            EnableRecord = true,
                            GuidRecord = new Guid("9a48f72e-26bd-40a8-9712-9ad945a19ea5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3330),
                            Name = "OthersShare",
                            SortIndex = 101L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3335),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            EnableRecord = true,
                            GuidRecord = new Guid("da0a4e25-683e-4592-b401-a707dc38eb58"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3336),
                            Name = "Price",
                            SortIndex = 103L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3338),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            EnableRecord = true,
                            GuidRecord = new Guid("516ec0cc-3a7c-40ab-936d-2d4867a92572"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3339),
                            Name = "Refrigerator",
                            SortIndex = 200L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3341),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("519b3799-0fac-44fd-bb46-f6fc36878557"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3341),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3344),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("e83fe513-431e-4541-9545-79969c61844b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3344),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3350),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("325fdaaa-8346-4bf0-974a-8a4a56040fb0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3351),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3354),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("5237953e-e68e-4204-a326-bda2e43b434b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3354),
                            Name = "Med",
                            SortIndex = 204L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3357),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("496ba048-d202-42a0-b8f4-ad2ba5ee24ee"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3358),
                            Name = "FMCG",
                            SortIndex = 205L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3361),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            EnableRecord = true,
                            GuidRecord = new Guid("76a3fc5f-57ec-4998-b0a8-212376606a1f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3362),
                            Name = "General",
                            SortIndex = 206L,
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3300),
                            DisplayName = "عددی",
                            EnableRecord = true,
                            GuidRecord = new Guid("f0be8907-45f2-4a9f-a33e-615c082bad98"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3301),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3303),
                            DisplayName = "دودویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("831916bc-d1f9-403a-a4e8-1273f4537e4b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3303),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3306),
                            DisplayName = "تاریخ",
                            EnableRecord = true,
                            GuidRecord = new Guid("ffc5a18d-b604-4c00-82dd-4a6ea4f71a00"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3307),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3309),
                            DisplayName = "حروف",
                            EnableRecord = true,
                            GuidRecord = new Guid("6f69ee64-c377-4db4-894e-d319324f30ac"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3309),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3432),
                            DisplayName = "محمد شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("0d67df82-2576-4ec8-92ae-399fbfd8b62d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3433),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3436),
                            DisplayName = "امین شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("2bdf749b-0f76-4ece-a2f2-e53ee9b22f41"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3437),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3153),
                            DisplayName = "صندوق ورودی",
                            EnableRecord = true,
                            GuidRecord = new Guid("bee58238-2587-4202-be5f-46f262b64737"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3154),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3157),
                            DisplayName = "ارسال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("3ae96685-d315-4af8-a187-9b4da80bfa23"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3157),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3159),
                            DisplayName = "خارج شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("4c5ef1f5-d6a1-469a-bb44-c8956a68080c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3160),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3166),
                            DisplayName = "آینده",
                            EnableRecord = true,
                            GuidRecord = new Guid("53036fc8-3779-4196-a3dd-1e08569163ed"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3167),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3866),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("f5d19a1d-9910-4c2a-84f6-211a8421cae6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3866),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3874),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            EnableRecord = true,
                            GuidRecord = new Guid("70feb155-efa4-46cf-8ecb-2e06236bf398"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3875),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3878),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            EnableRecord = true,
                            GuidRecord = new Guid("f30ed6d0-bc65-422d-a36d-6b943d11d838"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3878),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            SortIndex = 3L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3881),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            EnableRecord = true,
                            GuidRecord = new Guid("c831b446-3f5d-4bfc-b72c-e933a2ab25c7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3881),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            SortIndex = 4L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3885),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            EnableRecord = true,
                            GuidRecord = new Guid("f68ab120-3251-45fe-ae41-cb59a4628b39"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3885),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            SortIndex = 5L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3909),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            EnableRecord = true,
                            GuidRecord = new Guid("6ea2a6b2-1931-4ca7-8b7c-4e4d715a5ca2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3909),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3913),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            EnableRecord = true,
                            GuidRecord = new Guid("c6675e25-e241-4f10-a2c0-690f68bd0339"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3914),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3916),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("312638bb-5be9-482c-9841-e0461c733ded"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3917),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3919),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("227b375e-a986-469e-a037-655d985c3dab"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3920),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3791),
                            DisplayName = "سناریو ستاد",
                            EnableRecord = true,
                            GuidRecord = new Guid("d7edc252-1407-4798-8bda-61fb4333e115"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3792),
                            Name = "Head_Scenario3",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3795),
                            DisplayName = "سناریو دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("7b17a75a-f766-433c-bc6a-73d14e0fbc94"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3795),
                            Name = "Med_Scenario",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3835),
                            DisplayName = "سناریو مصرفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("b49ab978-f080-454a-acc6-80965ee05043"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3835),
                            Name = "FMCG_Scenario",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4044),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("c93043f9-1e56-4dc7-ad10-76437243c77b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4044),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4048),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("682ab38a-0228-4add-a98c-792c8b0636c1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4049),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4051),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("e5ccca81-737f-4e9f-ba81-be82d48ac10b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4051),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4054),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("28bc72d7-e2bb-4b51-9547-e37b8241bab4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4054),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4056),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("37f63ff6-262c-4a8f-8ac5-139d3780b1f1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4057),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L,
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3999),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("fab887f7-029f-45d7-a2d9-fe7757d1fe36"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4000),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4002),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("a8004676-3e2e-40e1-bd60-2a1996396392"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4003),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4005),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("9aac069e-093c-4963-b496-d1a03cdc8d73"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4006),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4008),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("24755cd2-1a45-4731-b140-53bcbb4f82a2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4008),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4013),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            EnableRecord = true,
                            FirstId = 4L,
                            GuidRecord = new Guid("a785b9d7-dfd5-4f2c-8419-6fda13988bae"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4013),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L,
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4016),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            EnableRecord = true,
                            FirstId = 4L,
                            GuidRecord = new Guid("1888f2d4-1583-4e00-b3bc-5f312f2e4968"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4016),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L,
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4018),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            EnableRecord = true,
                            FirstId = 5L,
                            GuidRecord = new Guid("bbc8f06e-a466-405f-a703-1f01b81d00c2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4019),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L,
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3947),
                            DisplayName = "محمد شریفی-تهران",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("eb1c03bc-3503-48ef-8c23-0022ca8893ba"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3948),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3951),
                            DisplayName = "امین شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("7a985a38-85d9-454c-8449-6cc339996647"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3951),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3954),
                            DisplayName = "محمد شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("394afff7-8764-4a4b-abc4-bf0dee83c92a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3954),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3958),
                            DisplayName = "امین شریفی-تهران",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("aaa74d84-50ac-4719-b6e5-0e528c717c9d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(3958),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4117),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("dcb33683-c60e-45dc-82e8-75caa55fdce6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4117),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4121),
                            DisplayName = "امین شریفی-معاون غذایی",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("4046c29a-32ff-4f2c-ac04-91dad95275fd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 29, 17, 4, 54, 346, DateTimeKind.Local).AddTicks(4121),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230710080207_current")]
    partial class current
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4697),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("7e78bcc2-ca22-43bc-a14f-70aaeecea94c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4698),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4744),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("e0a48cf4-7201-4f75-8ad5-11ba28348dd6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4744),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4749),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0904c363-3f3e-410d-ad1e-60bc85488bc6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4750),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4755),
                            Display = false,
                            DisplayName = "تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("6227f4e8-de96-4fdb-bc7c-ccd87f5cc34e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4756),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4761),
                            Display = true,
                            DisplayName = "سمت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("a84a6bc3-25d9-4926-91d7-eecd3c39bb23"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4762),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4830),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("dcea122b-274b-41ba-8176-c0a70e999d3c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4831),
                            Name = "D_ProcessState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4838),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("efcd6647-dc1b-4827-8e4b-49db07cd9a42"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4838),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4846),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("4af950c9-e438-441c-a71a-ac7712cf2ad4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4846),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4852),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("bf427735-64ce-4301-a523-f84af7f54f14"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4852),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4857),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("80b2e04d-8379-4f05-8e91-9d1206d06295"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4857),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4864),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("2089379b-220e-4361-9679-3febd1b51c99"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4864),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4869),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("fee83096-bb47-4a0b-84b9-79fe943c82d8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4870),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4875),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("ddde0e18-ffe2-47ee-8972-711a8535c2ec"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4875),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4880),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("4c56683c-ed2a-4c14-b4a9-5632736443d2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4881),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4886),
                            Display = true,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("a9f075ce-1eba-4a12-b32f-198374a25c1a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4886),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4894),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("37cb36f3-6d56-43a8-b930-142316df7382"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4894),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4900),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("962dd10b-2358-45a6-b441-341b9f890f31"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4900),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4905),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("6c2bc688-4789-41b4-9c5a-a3c89b32ca5c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4905),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4911),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("cf95de0d-565a-4420-977a-d7b66ea15328"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4911),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4916),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("e1fee514-a82c-4a97-8a3d-d846a7ca3ccf"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4917),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4331),
                            DisplayName = "تهران",
                            DsblRecord = false,
                            GuidRecord = new Guid("3f9bcd4d-7b12-4c7b-9ad5-8df8d03195fa"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4332),
                            Name = "Tehran",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4334),
                            DisplayName = "فارس",
                            DsblRecord = false,
                            GuidRecord = new Guid("e241bcba-efa3-4cc6-b1af-5f832ba1d684"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4335),
                            Name = "Fars",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4337),
                            DisplayName = "اصفهان",
                            DsblRecord = false,
                            GuidRecord = new Guid("fc27a7e3-067f-464a-bc2e-2f5352478c64"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4337),
                            Name = "Esfahan",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4406),
                            DisplayName = "مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0008ff75-236d-418a-8b33-00bed256240b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4406),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4412),
                            DisplayName = "مخالف",
                            DsblRecord = false,
                            GuidRecord = new Guid("c11f7fbd-f198-4e50-babf-1e410a164524"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4412),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4414),
                            DisplayName = "بزگتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("bf68b41b-007d-4b4e-8c42-9ee95b20b42f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4415),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4417),
                            DisplayName = "بزرگتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("f80a33f2-c30a-4cfa-b9c1-45e8caf15c05"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4417),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4419),
                            DisplayName = " کوچکتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("d0b2dfec-97f8-4ffe-931d-5c960bc11a4c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4419),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4422),
                            DisplayName = "کوچکتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("630f7f37-4ed4-4114-b0b3-d10dccd14167"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4423),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4654),
                            DisplayName = "معاون دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("2d7b23a4-80bf-4f60-a2d9-446d49dbed9d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4655),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4658),
                            DisplayName = "معاون غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("070eb1e8-b36c-4ce9-b179-9c30819f797d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4658),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4660),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("454c7165-4b6e-4656-beb8-2177bef0f023"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4661),
                            Name = "BusinessSeniorSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4663),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("62d6c990-7b67-49e5-be93-abbe7d479ee3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4664),
                            Name = "BusinessSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4666),
                            DisplayName = "کارشناس ارشد فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("346c45f1-f642-4ac1-9bc0-36383f74f989"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4666),
                            Name = "SalesSeniorSpecialist",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4668),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("bc682979-e48b-4738-9e9d-bfe44e8f6e46"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4669),
                            Name = "SalesSpecialist",
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4673),
                            DisplayName = "مدیر مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("701e3ab9-e0b6-4940-b660-cbf72c52fa67"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4673),
                            Name = "DistributionCenterManager",
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4037),
                            DisplayName = "تعریف/اصلاح مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("24a21a9a-46e6-434f-9456-2124c245f4c4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4053),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4087),
                            DisplayName = "مجوزهای موردی",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("f6365af5-fa60-4da5-a367-797dc5aab768"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4088),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4090),
                            DisplayName = "اعتباردهی مالی مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("a585f0e9-712f-41fb-9119-61ef656fde21"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4091),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4295),
                            DisplayName = "در دست بررسی",
                            DsblRecord = false,
                            GuidRecord = new Guid("a38e9629-e24e-469c-bbaf-a19ba332e3eb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4296),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4300),
                            DisplayName = "منتظر بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("4629301e-8b46-4a68-bd1c-60f9923ac209"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4301),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4303),
                            DisplayName = "کامل شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("b18ca8e9-9f42-449e-b751-ee2a0a9e3735"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4303),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4305),
                            DisplayName = "ابطال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("5d66d839-1443-4345-920f-f58d35aadd4a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4305),
                            Name = "Aborted",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4613),
                            DisplayName = "معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("6a5e79a9-7da2-4bc3-b936-1723dae61412"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4613),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4616),
                            DisplayName = "معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("f8bb6bce-35c9-495b-a978-df94ea8c5548"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4617),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4619),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0331604b-b59b-4b31-aebc-c342bcd2ee87"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4620),
                            Name = "BusinessSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4624),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("b202bf81-ca86-4c12-98e7-42cb70c7568b"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4625),
                            Name = "SalesSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4628),
                            DisplayName = "مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("dce7f1a8-06e5-4b67-98a4-772b397f86f7"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4628),
                            Name = "DistributionCenterManager",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4488),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            DsblRecord = false,
                            GuidRecord = new Guid("93865aa4-6e21-4e90-a3fe-dae35b5c5b06"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4489),
                            Name = "OursShare",
                            SortIndex = 100L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4492),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            DsblRecord = false,
                            GuidRecord = new Guid("602867ca-85c4-4a9f-9fcd-1ee9707362b1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4493),
                            Name = "OthersShare",
                            SortIndex = 101L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4496),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            DsblRecord = false,
                            GuidRecord = new Guid("0ad0e701-a1d3-4f2c-a294-67f404d23698"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4496),
                            Name = "Price",
                            SortIndex = 103L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4498),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            DsblRecord = false,
                            GuidRecord = new Guid("5f87d533-b0a1-4bb8-9361-77fcf57b1cc6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4499),
                            Name = "Refrigerator",
                            SortIndex = 200L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4501),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("d09142fb-556d-484f-a039-aa534c2152b3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4502),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4504),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("dfc7993a-dc36-4888-ac0c-6145aba6e2a3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4504),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4507),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("b3cf3646-f1a7-4c43-84d7-60e6470e6e82"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4507),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4511),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("b99afb6d-a04a-4a09-b9c2-e727d4e87a57"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4512),
                            Name = "Med",
                            SortIndex = 204L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4514),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("b5e984ce-c77b-4b29-a81e-52564295ce87"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4514),
                            Name = "FMCG",
                            SortIndex = 205L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4517),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            DsblRecord = false,
                            GuidRecord = new Guid("950c8255-1b14-4397-ae74-8cf99045af18"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4517),
                            Name = "General",
                            SortIndex = 206L,
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4454),
                            DisplayName = "عددی",
                            DsblRecord = false,
                            GuidRecord = new Guid("54f79a2b-5a56-4992-9006-b2a98f0e0359"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4454),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4457),
                            DisplayName = "دودویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("5f902432-3f1a-41bc-85f3-9affece01cc4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4458),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4460),
                            DisplayName = "تاریخ",
                            DsblRecord = false,
                            GuidRecord = new Guid("732d1dad-5635-430f-a63b-18a89c2a872d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4460),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4464),
                            DisplayName = "حروف",
                            DsblRecord = false,
                            GuidRecord = new Guid("d11e4742-9e57-4096-a345-47d40ca8576c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4465),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4543),
                            DisplayName = "محمد شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("5f7c2a7e-f599-404f-bd18-4714a6b927b7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4543),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4546),
                            DisplayName = "امین شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("ce69fba5-96c2-49d2-a587-bc88f2f4789b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4546),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProcessStateId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5028),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("47341d46-eb56-4ad0-8a68-933d4f4c82bb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5028),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5036),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("e1105e6b-1a2e-419f-af73-e7e64023fc09"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5036),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5039),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("42367457-cac4-47f7-9da1-1b4635bfaa74"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5040),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            SortIndex = 3L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5042),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("a7a0c349-6efb-4af3-a67f-33d17192cfd7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5043),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            SortIndex = 4L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5045),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("c34850a3-4912-4fe1-af24-92981c0729c4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5046),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            SortIndex = 5L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5069),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("87eee395-7c82-42f7-80ec-9eeb837a0e56"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5069),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5073),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("e2ad9229-05c7-4936-9c49-ecc816a0df3d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5074),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5076),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("b5825fe9-0864-4c80-b5cd-0a157633c0da"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5077),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5082),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("77286fda-7caa-497f-8280-1fdf51a8aa18"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5082),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4994),
                            DisplayName = "سناریو ستاد",
                            DsblRecord = false,
                            GuidRecord = new Guid("e2109e8c-8e09-4425-944e-a47c5398ef9d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4995),
                            Name = "Head_Scenario3",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4998),
                            DisplayName = "سناریو دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("53d36338-b5ec-4171-8f97-f7a7a2f68c60"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(4999),
                            Name = "Med_Scenario",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5001),
                            DisplayName = "سناریو مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("722940a4-d256-4ba8-818c-0ab300146013"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5001),
                            Name = "FMCG_Scenario",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("Current")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5225),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("bd3dc3f2-aa1c-4602-b5ce-f267c5f06072"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5225),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5229),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("b37e4a22-ff21-4b3b-b574-184f2125a218"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5229),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5231),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("98daaab0-f097-426f-a796-a8cda0dfbb90"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5232),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5234),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("4df770b5-94ba-48f3-bfff-227feac5c606"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5234),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5239),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("1cde15d0-8373-4941-973f-6e82c9184696"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5239),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L,
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5140),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("75e61570-23ea-46f0-a394-b5244dd2ca87"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5140),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5143),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("adac8cad-d2c1-4761-b513-9470e8ec71c3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5144),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5146),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("96ceed5b-d82d-46af-a589-35c696cd9012"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5146),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5151),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("e3a251eb-949b-4243-a152-b288f35bb966"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5151),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5193),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("91063d60-2b3b-4cce-be9e-a7281dae66e1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5193),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L,
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5196),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("efa8ee8e-39a6-4701-aaf3-0bc1f6fc2e70"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5197),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L,
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5199),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("831e0f62-1933-4db2-9269-0311cfd226b4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5199),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L,
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5111),
                            DisplayName = "محمد شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("77e43a2c-5f89-4955-8ab0-66e0bfc27f6e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5111),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5115),
                            DisplayName = "امین شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("e96c9227-b911-4082-853a-c538a3122b67"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5115),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5117),
                            DisplayName = "محمد شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("4ab4f1c4-b43e-4766-9131-5123efd98246"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5118),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5120),
                            DisplayName = "امین شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("2ef71d0a-9614-450c-aa3f-68686675d88c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5120),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5262),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("3956909a-594f-40b2-a7f4-7442473f6543"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5262),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5265),
                            DisplayName = "امین شریفی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("04f02903-eae4-4619-89be-c62c06c8d6fe"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 11, 32, 6, 177, DateTimeKind.Local).AddTicks(5265),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("Parent");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Case", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ProcessState")
                        .WithMany()
                        .HasForeignKey("ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("Creator");

                    b.Navigation("Parent");

                    b.Navigation("Process");

                    b.Navigation("ProcessState");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Parent");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Parent");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_WorkItem", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Parent");

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230710091334_workitemstateData")]
    partial class workitemstateData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7711),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0f0d7e1f-f7b5-47f7-a883-34249a2e8228"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7712),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7754),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("9653fe1f-bd21-4353-94f5-041858cd726e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7754),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7763),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("ee8a3197-8a81-402e-9a43-7ef33183d3eb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7763),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7768),
                            Display = false,
                            DisplayName = "تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8f9648ce-c4f0-49f1-a44c-c48916862ca8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7769),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7775),
                            Display = true,
                            DisplayName = "سمت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0bd070d0-5106-49ce-8003-4ae7ce9815ea"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7775),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7780),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("92c86249-4379-486b-9269-5a401dba6571"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7780),
                            Name = "D_ProcessState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7785),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("6d443429-2a59-4bfb-b302-6a82460d0adc"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7786),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7791),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("1159a521-b672-4b34-ad20-53a072165baf"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7791),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7796),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("baaf6384-58e4-487d-8a4a-8d58e5ea58a9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7796),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7801),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("cea35885-ef17-47fd-b9f8-4ca27b58f34d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7801),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7808),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8804f8c0-798e-4560-bafe-87af1d3b185f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7809),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7814),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8ca46cb9-e332-4266-a49d-42ead1be7a1d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7815),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7820),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0d8379c7-94dd-43b0-b412-202958bcd41a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7820),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7825),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("e12e9d2c-7b49-4f97-8c0e-52ab63a7937a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7826),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7831),
                            Display = true,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("47c0c24a-dd5a-4e92-ba20-06af7d2a197b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7832),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7837),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0c70e430-474e-4602-8015-04303f2b5ee6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7837),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7841),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("ab89c54b-1da1-408f-a33e-3491a7967a3a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7842),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7847),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("3e9c9e67-e960-46e5-a3bc-37b192e1cf80"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7848),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7933),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("6bde767d-5bcd-45b8-a532-20336a9d8aeb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7934),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7940),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("204b0aa6-463c-43e3-82f2-f1f133dde0e6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7941),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7365),
                            DisplayName = "تهران",
                            DsblRecord = false,
                            GuidRecord = new Guid("b6217b0a-b6c3-457f-9f16-1939860d1883"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7366),
                            Name = "Tehran",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7368),
                            DisplayName = "فارس",
                            DsblRecord = false,
                            GuidRecord = new Guid("f37efb03-04d5-4dec-84a3-f0d1f8fd2488"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7369),
                            Name = "Fars",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7370),
                            DisplayName = "اصفهان",
                            DsblRecord = false,
                            GuidRecord = new Guid("7720f997-e012-4f31-84f3-ecda61d5a18a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7371),
                            Name = "Esfahan",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7390),
                            DisplayName = "مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("3660e7b7-de0e-4a47-a0d1-ccb8a439b051"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7391),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7393),
                            DisplayName = "مخالف",
                            DsblRecord = false,
                            GuidRecord = new Guid("9d06e292-02c5-4aee-a743-5016566bc39e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7393),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7395),
                            DisplayName = "بزگتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("b6fbd498-12a2-4b7b-b2a1-b218a787265c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7395),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7397),
                            DisplayName = "بزرگتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("e46e877f-7145-43eb-8673-c4884a741bb6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7397),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7401),
                            DisplayName = " کوچکتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("f46493ba-dbac-4d1e-b58f-2c6b17627250"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7402),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7403),
                            DisplayName = "کوچکتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("194fc082-2315-42b8-9b02-f34f81b85b5a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7404),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7634),
                            DisplayName = "معاون دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("d079462b-346a-4dc2-b781-cbe5c7e67bdc"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7635),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7640),
                            DisplayName = "معاون غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("2aaedf1e-51cd-49ac-8ce1-120c040bba1f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7640),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7642),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("77e0d7cb-2017-4b6e-b646-7fe8e29b5d10"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7642),
                            Name = "BusinessSeniorSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7645),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("f5944509-a270-4dc5-9e92-cc3125322b81"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7645),
                            Name = "BusinessSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7647),
                            DisplayName = "کارشناس ارشد فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("2a6912f1-517b-4516-b843-2197a6fb28ce"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7647),
                            Name = "SalesSeniorSpecialist",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7649),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("00eb80ae-b985-40fd-805c-31313c4728e0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7650),
                            Name = "SalesSpecialist",
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7685),
                            DisplayName = "مدیر مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("4194ad84-dcaa-461c-b050-eec691bb8711"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7686),
                            Name = "DistributionCenterManager",
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7041),
                            DisplayName = "تعریف/اصلاح مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("e93fa67e-6160-47a0-b090-9eff36168094"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7056),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7086),
                            DisplayName = "مجوزهای موردی",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("542a081d-980c-4945-a4b7-1477ecde83c3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7087),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7089),
                            DisplayName = "اعتباردهی مالی مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("80144870-7122-4fcc-b9f1-cb8b2a810742"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7089),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7292),
                            DisplayName = "در دست بررسی",
                            DsblRecord = false,
                            GuidRecord = new Guid("c61e5492-b74c-4fd9-a659-b6715473843c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7293),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7297),
                            DisplayName = "منتظر بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("7a006183-6efa-44a3-8390-d6892df4393b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7297),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7299),
                            DisplayName = "کامل شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("d684ecfc-6d43-449b-982e-6df56def0c55"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7300),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7302),
                            DisplayName = "ابطال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("7659bbcb-4bd2-4331-befb-7842d2230dc8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7302),
                            Name = "Aborted",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7603),
                            DisplayName = "معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0e71cc0d-6c35-42a4-b6b3-274427c56e54"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7603),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7606),
                            DisplayName = "معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("c37d6d81-deb9-4d3b-bb4a-9a8fc0ee26c9"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7606),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7608),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("32f207ac-cbaf-4dfe-99e4-82c98ecde227"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7609),
                            Name = "BusinessSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7611),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("bc0e202e-32c8-4abb-b4dd-e14567d62398"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7611),
                            Name = "SalesSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7613),
                            DisplayName = "مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("4d437d62-5438-47f0-b4b2-c239a1615c8b"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7614),
                            Name = "DistributionCenterManager",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7524),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            DsblRecord = false,
                            GuidRecord = new Guid("384bab8d-cc94-4af9-a6ae-2ef29248f6a9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7524),
                            Name = "OursShare",
                            SortIndex = 100L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7528),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            DsblRecord = false,
                            GuidRecord = new Guid("f846003b-fc59-46b9-a859-7a460d76e5a4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7528),
                            Name = "OthersShare",
                            SortIndex = 101L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7533),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            DsblRecord = false,
                            GuidRecord = new Guid("d3f8ff55-314a-494a-b620-18c72ec4db67"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7533),
                            Name = "Price",
                            SortIndex = 103L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7535),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            DsblRecord = false,
                            GuidRecord = new Guid("d14a83f9-8f92-4d2d-9325-5f13e5aa6201"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7535),
                            Name = "Refrigerator",
                            SortIndex = 200L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7538),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("4f5df4d6-5b23-499a-a510-8ec183d6e8cb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7538),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7540),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("a51b125b-e21e-4904-a7dd-b93432139a52"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7540),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7543),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("e1c97d3c-9650-4562-96a4-feba267addd5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7543),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7546),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("daf7b5b7-4875-4798-b097-079fb5a80775"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7546),
                            Name = "Med",
                            SortIndex = 204L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7548),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("de0a8e36-0fd2-488e-975c-b0c203c35b92"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7549),
                            Name = "FMCG",
                            SortIndex = 205L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7551),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            DsblRecord = false,
                            GuidRecord = new Guid("8357104d-1c67-492a-86f1-4345ab3ab3fb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7551),
                            Name = "General",
                            SortIndex = 206L,
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7430),
                            DisplayName = "عددی",
                            DsblRecord = false,
                            GuidRecord = new Guid("93848eee-6bf2-4896-b975-083de2ef9b0e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7431),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7433),
                            DisplayName = "دودویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("625c52ea-c153-4115-ba00-068619ea5a39"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7433),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7500),
                            DisplayName = "تاریخ",
                            DsblRecord = false,
                            GuidRecord = new Guid("3a55952c-654c-4697-827b-31258f1598fc"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7500),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7503),
                            DisplayName = "حروف",
                            DsblRecord = false,
                            GuidRecord = new Guid("df69d2ad-2e1d-4c27-a98a-f20cc16e45fb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7504),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7580),
                            DisplayName = "محمد شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("845eb457-f12c-4ba4-a101-6367214a7e97"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7580),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7583),
                            DisplayName = "امین شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("1aa9d0d8-af20-4fac-97fd-e26a863238cd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7584),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7324),
                            DisplayName = "صندوق ورودی",
                            DsblRecord = false,
                            GuidRecord = new Guid("d1b716f3-20cc-4b86-933a-0dc61a9c986a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7324),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7326),
                            DisplayName = "ارسال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("83fe1627-9094-43a2-aa0a-f1aba2e9cf2a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7327),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7329),
                            DisplayName = "خارج شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("8ea9532a-713d-46bf-b32a-c1f5f8c37c77"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7329),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7334),
                            DisplayName = "آینده",
                            DsblRecord = false,
                            GuidRecord = new Guid("6a2b504e-0204-4676-8004-9c22cb59a6c5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7334),
                            Name = "Future",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7339),
                            DisplayName = "ابطال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("a490d53c-e1ac-49d0-9a10-e5a82af1978b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(7339),
                            Name = "Aborted",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProcessStateId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8046),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("785495f8-4b47-4e98-b748-91cf2efb0119"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8046),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8052),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("0ba573d8-f738-4741-971b-41c7ef18abd4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8052),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8055),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("c0c15885-58e5-4596-9fc1-8d03623cb148"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8056),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            SortIndex = 3L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8060),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("00ff75b6-6fb8-4960-8f9b-74cc0c31e0f5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8061),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            SortIndex = 4L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8063),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("163efa29-a6ab-4c79-94ab-6f31b26294df"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8064),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            SortIndex = 5L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8083),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("f31fac64-079f-4dfd-8d72-e2748ca8edda"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8084),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8087),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("4fe3d363-8caf-4973-a8a0-2613f46d6a95"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8087),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8090),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("46c79fff-cf10-47fc-9aa9-3a952a3bdd27"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8090),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8092),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("d2496ea7-d8ba-4ca0-aaea-4cc649bbdacb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8093),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8019),
                            DisplayName = "سناریو ستاد",
                            DsblRecord = false,
                            GuidRecord = new Guid("10d19fcf-75f1-4605-bc21-94055fe8f8c8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8019),
                            Name = "Head_Scenario3",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8022),
                            DisplayName = "سناریو دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("4896e921-78b2-4c9a-8237-8086ac18036c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8023),
                            Name = "Med_Scenario",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8025),
                            DisplayName = "سناریو مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("6ac24140-84ce-43c9-9151-cd1d8c089145"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8025),
                            Name = "FMCG_Scenario",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8235),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("0cdf7651-3a94-42d9-9ac3-f059970c5735"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8235),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8238),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("b378d05a-45a4-413c-ac0f-cf804335edb4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8238),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8241),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("c070a0d0-8f8b-4061-a5f6-0f29d07f6e80"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8241),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8243),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("a68d7a51-6245-431a-9ddb-81cd38e5e0fd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8244),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8246),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("ab715061-db48-4f15-9696-ab0682be9ccd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8246),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L,
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8153),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("53e24bfb-edae-4b92-8868-9dcad87c3645"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8154),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8157),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("d5b00e3e-a222-498d-b36a-c5ca9ec76497"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8157),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8159),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("88d2d109-a738-4a18-bf83-ccff3a0f6fda"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8160),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8197),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("62ddded3-ff1d-47c1-a293-ad13d0b55c30"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8198),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8200),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("0ede255e-b4c8-4dac-96ed-5ef4b3589d07"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8200),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L,
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8203),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("3690fe7e-bb81-43dc-8462-ff4aed9476a1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8204),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L,
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8208),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("d4e53bbf-9f6b-4609-b546-c64c1aadb2f6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8209),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L,
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8121),
                            DisplayName = "محمد شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("dddee876-ac3d-405e-be77-05520f1d61f2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8121),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8124),
                            DisplayName = "امین شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("d407c3b3-c0dd-42ce-9a34-40c5c64cecc3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8125),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8129),
                            DisplayName = "محمد شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("71baef38-b75e-423d-aa2f-7855f62f5ae9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8129),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8131),
                            DisplayName = "امین شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("d5bb7eee-6ac4-44ee-add0-eacc0a88af61"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8132),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8267),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("4d913219-4b69-4428-b129-280513a41548"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8267),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8270),
                            DisplayName = "امین شریفی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("683c42c5-fcfc-4533-af57-bdff357ed412"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 12, 43, 33, 813, DateTimeKind.Local).AddTicks(8270),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ProcessState")
                        .WithMany()
                        .HasForeignKey("ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("ProcessState");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230730070419_hidden_Position")]
    partial class hidden_Position
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_CaseState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_CaseState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5209),
                            DisplayName = "در دست بررسی",
                            EnableRecord = true,
                            GuidRecord = new Guid("7bc19135-6878-4748-9c10-0541f059aaaa"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5210),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5213),
                            DisplayName = "منتظر بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("defc3059-4519-4e06-b905-115859c07c6b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5213),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5217),
                            DisplayName = "کامل شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("fb408204-56be-4da2-b9db-becda4de40d9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5217),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5219),
                            DisplayName = "ابطال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("0aa5cc66-8944-4d46-8aa5-e5e99a498b1d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5220),
                            Name = "Aborted",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5612),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("64dce63f-cc9e-41f3-8f82-0625c336b97c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5613),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5691),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("56d63a52-a944-4777-aa9d-0fb7ec85024a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5692),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5699),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("dfe12bdd-a6fb-4ddf-98a0-efd3ea48531d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5699),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5704),
                            Display = true,
                            DisplayName = "تگ‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("b082c262-33cf-4c61-aa4a-1848665c3276"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5704),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5710),
                            Display = false,
                            DisplayName = "سمت‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("2b2fc83c-05d3-4b8e-a843-c702991cc6e8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5710),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5715),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("d8a23641-84d9-4d93-9819-aac861857afb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5715),
                            Name = "D_CaseState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5722),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("5932b9dd-2f19-49f5-9406-257af2345aaf"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5723),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5727),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("eaef989b-c79b-48d4-9225-29473f175c96"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5728),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5733),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            EnableRecord = true,
                            GuidRecord = new Guid("2ce35b19-9535-4e2a-a234-57966256b13e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5733),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5739),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("e287fa19-c39c-4ad5-8793-3e021a71db2e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5739),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5747),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("533f7f1c-c23c-41ab-a62f-f72e345ebdd8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5747),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5756),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("7d1b6031-5891-4c2b-9cf7-295933756f3f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5757),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5763),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("98c20a17-4574-4c6b-8e79-36711822acd9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5764),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5771),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("7c447596-30e9-4b78-859e-d98dddd409e1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5771),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5777),
                            Display = false,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("b01ddb02-b016-413c-9e50-4f885341f9d3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5778),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5783),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            EnableRecord = true,
                            GuidRecord = new Guid("ddb5d041-f542-462b-9116-b4bad4e6f931"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5784),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5788),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("56d743a7-21f2-46d8-85cf-e46d3fc660d6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5788),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5793),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("fb2a4d14-094f-4cd3-9f7d-76b15b810a46"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5793),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5798),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("f7913d05-be71-4aaa-8e51-9ea5e47f4795"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5798),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5802),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            EnableRecord = true,
                            GuidRecord = new Guid("cb85ea49-9412-46e4-80d6-c3bdff0cd13d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5802),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5282),
                            DisplayName = "تهران",
                            EnableRecord = true,
                            GuidRecord = new Guid("0082a543-68d7-46ad-b371-3280d4482036"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5283),
                            Name = "Tehran",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5290),
                            DisplayName = "فارس",
                            EnableRecord = true,
                            GuidRecord = new Guid("47189af1-3187-420c-9439-66b9e84852ef"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5290),
                            Name = "Fars",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5292),
                            DisplayName = "اصفهان",
                            EnableRecord = true,
                            GuidRecord = new Guid("517790be-82bc-4117-aa64-f0c8de638f96"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5293),
                            Name = "Esfahan",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5309),
                            DisplayName = "مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("1f89af23-7e4a-4050-8a9b-3d83ef812ea3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5309),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5312),
                            DisplayName = "مخالف",
                            EnableRecord = true,
                            GuidRecord = new Guid("e18e5412-2523-49bc-a364-e877bc0e86f0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5312),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5318),
                            DisplayName = "بزگتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("55e4a585-891b-42f5-9a00-cadf031722b2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5319),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5322),
                            DisplayName = "بزرگتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("2413e997-291d-458d-8d4a-a623d8f224db"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5322),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5325),
                            DisplayName = " کوچکتر از",
                            EnableRecord = true,
                            GuidRecord = new Guid("1a58c466-9633-4306-beda-d5917bc604ab"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5325),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5328),
                            DisplayName = "کوچکتر و مساوی",
                            EnableRecord = true,
                            GuidRecord = new Guid("54c1f33c-0763-4847-a010-ace8c747ff5c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5328),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5570),
                            DisplayName = "معاون دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("361a81fe-54d8-422c-9f1a-986f1369a2de"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5570),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5573),
                            DisplayName = "معاون غذایی",
                            EnableRecord = true,
                            GuidRecord = new Guid("3066dd95-9439-474e-8484-506a351f1c5f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5573),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5575),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            EnableRecord = true,
                            GuidRecord = new Guid("ebdbbec5-f705-4a9e-8189-6a181fb6d561"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5576),
                            Name = "BusinessSeniorSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5578),
                            DisplayName = "کارشناس بازرگانی",
                            EnableRecord = true,
                            GuidRecord = new Guid("6ff5fc9c-265f-4d27-90fa-2ed859e19f93"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5578),
                            Name = "BusinessSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5580),
                            DisplayName = "کارشناس ارشد فروش",
                            EnableRecord = true,
                            GuidRecord = new Guid("796e4639-8386-4707-88c9-e9671062c7e2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5580),
                            Name = "SalesSeniorSpecialist",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5584),
                            DisplayName = "کارشناس فروش",
                            EnableRecord = true,
                            GuidRecord = new Guid("7731b309-d545-4ce0-aa5f-9e492b75382f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5585),
                            Name = "SalesSpecialist",
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5589),
                            DisplayName = "مدیر مرکز توزیع",
                            EnableRecord = true,
                            GuidRecord = new Guid("31789361-06d7-4cf3-ab14-640ecd8117f8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5589),
                            Name = "DistributionCenterManager",
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(4994),
                            DisplayName = "تعریف/اصلاح مشتری",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("14c8eedd-d207-4d30-a59d-dc398c9f5bf4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5008),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5042),
                            DisplayName = "مجوزهای موردی",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("68a7eaa7-962c-4624-a5e8-7e8f21e88c9a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5042),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5045),
                            DisplayName = "اعتباردهی مالی مشتری",
                            ERP = true,
                            EnableRecord = true,
                            GuidRecord = new Guid("799a0287-6fde-491e-8d1f-606bb77e78ce"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5045),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool>("FixedRole")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5532),
                            DisplayName = "معاونت دارویی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("10bfaa6d-95de-47d7-8c0f-f8f4aea25955"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5532),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5535),
                            DisplayName = "معاونت غذایی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("fd58dd25-287a-412f-875b-dec4c83fa27f"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5535),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5537),
                            DisplayName = "کارشناس بازرگانی",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("16bc3b4b-e653-41ae-8c04-62ecba0ec9f6"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5538),
                            Name = "BusinessSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5540),
                            DisplayName = "کارشناس فروش",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("a36cc658-8e66-47b0-95f7-195104a95432"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5540),
                            Name = "SalesSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5544),
                            DisplayName = "مدیریت مرکز توزیع",
                            EnableRecord = true,
                            FixedRole = false,
                            GuidRecord = new Guid("fb88fe24-2c18-4a24-abfb-1cfd06e9b1d3"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5545),
                            Name = "DistributionCenterManager",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5547),
                            DisplayName = "درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("54df8179-acfd-4b83-b916-88f8c2e57d62"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5547),
                            Name = "Requestor",
                            SortIndex = 100L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5550),
                            DisplayName = "مدیر درخواست کننده",
                            EnableRecord = true,
                            FixedRole = true,
                            GuidRecord = new Guid("c4d629f8-7ebc-4751-8595-7e99280f1a2a"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5550),
                            Name = "RequestorManager",
                            SortIndex = 101L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5388),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            EnableRecord = true,
                            GuidRecord = new Guid("a1e59827-9f00-4a60-b785-30d91103b854"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5389),
                            Name = "OursShare",
                            SortIndex = 100L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5392),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            EnableRecord = true,
                            GuidRecord = new Guid("b26bb487-919f-4dfa-9378-d63fe05e5a2a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5392),
                            Name = "OthersShare",
                            SortIndex = 101L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5395),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            EnableRecord = true,
                            GuidRecord = new Guid("7b79f16f-9e8b-4171-aa0d-fe0e10dda73b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5395),
                            Name = "Price",
                            SortIndex = 103L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5398),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            EnableRecord = true,
                            GuidRecord = new Guid("daa88544-b9f3-4b49-b6c9-4e24009732f3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5398),
                            Name = "Refrigerator",
                            SortIndex = 200L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5400),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("f780ab26-81c9-4de8-8c72-526ca69b2372"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5400),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5402),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            EnableRecord = true,
                            GuidRecord = new Guid("8832d09e-9d12-4057-b00b-4889fd1db2dd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5403),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5468),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            EnableRecord = true,
                            GuidRecord = new Guid("17136118-6ee8-45d0-959f-8782df80b2fd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5469),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5472),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("0789f2e8-fb6a-49b5-9bdb-9aae51dca6b4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5472),
                            Name = "Med",
                            SortIndex = 204L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5478),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("fac6266a-9fbb-4216-b82e-2398aa932f7d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5478),
                            Name = "FMCG",
                            SortIndex = 205L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5480),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            EnableRecord = true,
                            GuidRecord = new Guid("c8080e93-9406-4cea-aa49-a00074344e62"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5481),
                            Name = "General",
                            SortIndex = 206L,
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5357),
                            DisplayName = "عددی",
                            EnableRecord = true,
                            GuidRecord = new Guid("cf667283-822e-49f3-9ab2-5a9be47296cb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5357),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5362),
                            DisplayName = "دودویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("e86eedd7-934d-4104-9dd3-494b792b5e16"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5362),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5365),
                            DisplayName = "تاریخ",
                            EnableRecord = true,
                            GuidRecord = new Guid("2f532c0b-951a-4276-8787-5b0e6754655a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5366),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5369),
                            DisplayName = "حروف",
                            EnableRecord = true,
                            GuidRecord = new Guid("821fd760-164c-4d88-8fd4-d3975770b092"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5369),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5506),
                            DisplayName = "محمد شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("9998a325-12eb-4029-a20c-1a2e5f97a124"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5506),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5509),
                            DisplayName = "امین شریفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("08992f43-84a5-4056-9772-e85d9ccac54c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5510),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_WorkItemState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("D_WorkItemState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5241),
                            DisplayName = "صندوق ورودی",
                            EnableRecord = true,
                            GuidRecord = new Guid("9de1772f-2ae8-43d2-8b44-51d7ffb6e3ca"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5242),
                            Name = "Inbox",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5254),
                            DisplayName = "ارسال شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("7cd81dfa-1b8e-45be-bb7d-a9cabada0330"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5255),
                            Name = "Sent",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5258),
                            DisplayName = "خارج شده",
                            EnableRecord = true,
                            GuidRecord = new Guid("d03a0ccf-9eb5-4439-a036-1db1d462d040"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5258),
                            Name = "Exit",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5260),
                            DisplayName = "آینده",
                            EnableRecord = true,
                            GuidRecord = new Guid("b81ce981-c4f7-422d-96b2-b198b9a80688"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5261),
                            Name = "Future",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CaseStateId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5930),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            EnableRecord = true,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("4f88c3de-46b1-41f9-bc35-eae42bbc624c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5930),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5936),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            EnableRecord = true,
                            GuidRecord = new Guid("4fd549ab-5239-45b1-ba05-e13d8b49965e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5936),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5939),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            EnableRecord = true,
                            GuidRecord = new Guid("9284de01-9659-437a-b4e0-de809d5fae38"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5939),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            SortIndex = 3L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5942),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            EnableRecord = true,
                            GuidRecord = new Guid("0570b6f4-fc43-4e08-8983-390c57e98329"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5942),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            SortIndex = 4L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5945),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            EnableRecord = true,
                            GuidRecord = new Guid("52a053a6-ff0c-410d-afbb-8b55e85c6a64"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5945),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            SortIndex = 5L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5964),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            EnableRecord = true,
                            GuidRecord = new Guid("bbdee1b9-d490-4c8f-bd46-bfbbc7c3aec4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5964),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5968),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            EnableRecord = true,
                            GuidRecord = new Guid("60aa9d69-487f-402e-840c-3ee3d9a825e0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5968),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5973),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("3d8832dc-5ab8-40c1-813c-6fd2dd02e6bd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5973),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5975),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("ae42ea83-2ee5-40f5-a08d-de2fcf121b9c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5976),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5897),
                            DisplayName = "سناریو ستاد",
                            EnableRecord = true,
                            GuidRecord = new Guid("ebac9bfe-93d7-4de6-b67d-07b7c02c99a8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5898),
                            Name = "Head_Scenario3",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5901),
                            DisplayName = "سناریو دارویی",
                            EnableRecord = true,
                            GuidRecord = new Guid("a395f1f4-31c7-4a47-9dfa-97b14b2a143c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5901),
                            Name = "Med_Scenario",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5906),
                            DisplayName = "سناریو مصرفی",
                            EnableRecord = true,
                            GuidRecord = new Guid("fa03212b-fa3b-4f82-b459-f14be37da01b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(5907),
                            Name = "FMCG_Scenario",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("WorkItemStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkItemStateId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6107),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("4eee658f-1a8d-4ee6-a69a-890f69292b7c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6108),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6111),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("edb12baa-b4ef-495f-8de1-6bb7375b93e0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6112),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6114),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("7d77f432-badb-437b-b8b9-c5da40f55ca3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6114),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6119),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("191a0f88-efba-4fb2-847e-f6ba694f426a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6119),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6122),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("5215ddf3-bfc9-4849-883b-638361e4a604"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6122),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L,
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6028),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("b90c4044-5b2f-450f-8e85-66df400da2e5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6029),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6031),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("148e34f7-260d-46f4-935c-02921b0f4a83"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6032),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6037),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("88dedb78-d7f7-4cb1-9fc1-6376690efb81"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6037),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6040),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            EnableRecord = true,
                            FirstId = 3L,
                            GuidRecord = new Guid("a94ea43e-faed-4eaf-96ec-44e0b52d55ca"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6040),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6043),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            EnableRecord = true,
                            FirstId = 4L,
                            GuidRecord = new Guid("3c5eb48b-5794-4fb0-9a30-1bb4a368362d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6043),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L,
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6046),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            EnableRecord = true,
                            FirstId = 4L,
                            GuidRecord = new Guid("6c5c0813-1771-477c-a0f0-b0552f5e5112"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6046),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L,
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6049),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            EnableRecord = true,
                            FirstId = 5L,
                            GuidRecord = new Guid("11e61064-f4f2-43b0-911a-fb52d52c1ee4"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6049),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L,
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6001),
                            DisplayName = "محمد شریفی-تهران",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("0c35c8b2-c10b-48dd-96d1-a9e731fab629"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6002),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6005),
                            DisplayName = "امین شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("1113366b-2492-4efe-89e1-631909e7beca"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6005),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6008),
                            DisplayName = "محمد شریفی-فارس",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("1f228434-4032-42ed-adc6-edabe2967b0c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6008),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6010),
                            DisplayName = "امین شریفی-تهران",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("fb12aa20-254c-4b4a-8a3c-443db70e1451"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6011),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6146),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            EnableRecord = true,
                            FirstId = 1L,
                            GuidRecord = new Guid("e7f5c716-8cf9-42ed-bf4c-6be6499973ae"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6146),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6149),
                            DisplayName = "امین شریفی-معاون غذایی",
                            EnableRecord = true,
                            FirstId = 2L,
                            GuidRecord = new Guid("94b0a4a5-8fe0-437e-becd-63a95b5b31da"),
                            LastUpdatedRecord = new DateTime(2023, 7, 30, 10, 34, 18, 447, DateTimeKind.Local).AddTicks(6149),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("EnableRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("EnableRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_CaseState", "CaseState")
                        .WithMany()
                        .HasForeignKey("CaseStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("CaseState");

                    b.Navigation("Creator");

                    b.Navigation("Process");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_WorkItemState", "WorkItemState")
                        .WithMany()
                        .HasForeignKey("WorkItemStateId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Tag");

                    b.Navigation("User");

                    b.Navigation("WorkItemState");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

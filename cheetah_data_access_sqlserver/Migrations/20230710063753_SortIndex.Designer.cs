// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230710063753_SortIndex")]
    partial class SortIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3059),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("a0823077-613a-4ed1-be70-834f230c2a73"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3059),
                            Name = "D_TagType",
                            SortIndex = 101L
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3110),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("5e1a733e-8a4a-42dd-b241-bf1937e51602"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3111),
                            Name = "D_Location",
                            SortIndex = 102L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3126),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8739f5d7-7302-429a-96ee-786678cc25ec"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3127),
                            Name = "D_Operand",
                            SortIndex = 103L
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3138),
                            Display = false,
                            DisplayName = "تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("eac403f0-7d6e-468d-9c76-a211fe5fb679"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3138),
                            Name = "D_Tag",
                            SortIndex = 104L
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3149),
                            Display = true,
                            DisplayName = "سمت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("94a5245f-d92a-430e-ac1d-d521292a7576"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3150),
                            Name = "D_Position",
                            SortIndex = 105L
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3159),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("f62972bb-21a2-4790-aba9-2a3d27370a93"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3159),
                            Name = "D_ProcessState",
                            SortIndex = 106L
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3168),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0aebc7b3-8da0-465d-a567-013c2b5b4295"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3169),
                            Name = "D_Process",
                            SortIndex = 107L
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3177),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("979710ef-625e-4206-aa2c-e037ad41ceeb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3178),
                            Name = "D_Role",
                            SortIndex = 108L
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3185),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("24487147-5809-4334-be2a-a8f50bf455ab"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3186),
                            Name = "D_User",
                            SortIndex = 109L
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3193),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("33c5ebf5-5c6b-4a8f-8d5e-3b7e90539a48"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3194),
                            Name = "D_UserInformation",
                            SortIndex = 112L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3205),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("c0bb519c-1eb1-4a2f-8499-b4089e891e09"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3206),
                            Name = "F_WorkItem",
                            SortIndex = 200L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3213),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("dac83484-92a6-499b-a18d-fef12198e651"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3214),
                            Name = "F_Attachment",
                            SortIndex = 202L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3221),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("dbf179ba-6675-4a5f-a02f-048e6b1ff1d2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3221),
                            Name = "F_Endorsement",
                            SortIndex = 203L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3305),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("90849b1e-ae30-473a-b516-cd87518d4673"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3306),
                            Name = "F_Condition",
                            SortIndex = 204L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3315),
                            Display = true,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("9216d5bd-c620-46aa-b78e-332045095284"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3315),
                            Name = "F_Case",
                            SortIndex = 205L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3328),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("31019f0e-0341-4092-b098-d3b315dad8d7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3329),
                            Name = "F_Scenario",
                            SortIndex = 206L
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3337),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("0884edba-7d50-49cd-8f31-de01f43d9ecc"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3338),
                            Name = "L_RolePosition",
                            SortIndex = 300L
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3346),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("563bf13c-5def-4318-a9e4-013f0f22e232"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3347),
                            Name = "L_ProcessScenario",
                            SortIndex = 301L
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3358),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("3c04b009-dc90-4c65-92b8-cdd141410daf"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3359),
                            Name = "L_UserLocation",
                            SortIndex = 302L
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3368),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("29e4ba7b-d90d-4ed3-bad9-9e06f1d5b45c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3369),
                            Name = "L_UserPosition",
                            SortIndex = 303L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2455),
                            DisplayName = "تهران",
                            DsblRecord = false,
                            GuidRecord = new Guid("ecc2870b-2d76-466c-aa2b-9bedec01627b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2456),
                            Name = "Tehran",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2460),
                            DisplayName = "فارس",
                            DsblRecord = false,
                            GuidRecord = new Guid("0df8dbc7-13ec-426e-92e3-2175720d5ad5"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2461),
                            Name = "Fars",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2464),
                            DisplayName = "اصفهان",
                            DsblRecord = false,
                            GuidRecord = new Guid("4b74946b-32de-48c6-8cb3-e35e604d8159"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2465),
                            Name = "Esfahan",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2504),
                            DisplayName = "مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("79781119-d0c5-482d-8e5e-174f098c106b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2505),
                            Name = "=",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2509),
                            DisplayName = "مخالف",
                            DsblRecord = false,
                            GuidRecord = new Guid("b6561731-8d5d-4cb9-bb4a-dc2d8417907b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2509),
                            Name = "!=",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2512),
                            DisplayName = "بزگتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("3b3e39fb-a601-4148-9883-003836672c1b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2513),
                            Name = ">",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2516),
                            DisplayName = "بزرگتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("1814fa10-2840-4e8d-bee2-7beac028dc9e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2517),
                            Name = ">=",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2524),
                            DisplayName = " کوچکتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("e26df5da-1edb-4f53-9ee4-e0fecb34bec7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2532),
                            Name = "<",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2557),
                            DisplayName = "کوچکتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("cd9df75f-0381-4319-9033-c051cd61ac35"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2559),
                            Name = "<=",
                            SortIndex = 6L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2916),
                            DisplayName = "معاون دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("a59a6a6c-fbba-4b8c-b1e5-2a8226e1370b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2917),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2924),
                            DisplayName = "معاون غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("80b95f90-b2a6-4ad9-a5a5-7a23167eb8d9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2925),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2929),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("e9c6b603-ca70-4a1b-96e2-34b99826531a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2929),
                            Name = "BusinessSeniorSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2933),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("fdde8764-6b20-4bf4-9359-c380b69be7fe"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2934),
                            Name = "BusinessSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3010),
                            DisplayName = "کارشناس ارشد فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("5ea63a40-ecf7-4849-a1f5-de627d199df3"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3011),
                            Name = "SalesSeniorSpecialist",
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3017),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("a68cec2b-6490-478d-b618-e785889248dd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3017),
                            Name = "SalesSpecialist",
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3021),
                            DisplayName = "مدیر مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("704448e9-dbd6-4129-88d1-59d3d24f255a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3022),
                            Name = "DistributionCenterManager",
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1924),
                            DisplayName = "تعریف/اصلاح مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("aed17960-4985-460d-a557-14f068171425"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1942),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1981),
                            DisplayName = "مجوزهای موردی",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("32585545-0aba-4678-9d2c-3898c9744b77"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1984),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1992),
                            DisplayName = "اعتباردهی مالی مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("185c2d6e-4f25-410f-88b6-f5974769bcdb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(1993),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true,
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2370),
                            DisplayName = "در دست بررسی",
                            DsblRecord = false,
                            GuidRecord = new Guid("6bacb3d9-af0a-45f2-84b6-55f3616d35ad"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2372),
                            Name = "Ongoing",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2381),
                            DisplayName = "منتظر بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("6824f799-b672-47d5-80f7-29fb726f9664"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2382),
                            Name = "Editing",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2386),
                            DisplayName = "کامل شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("e6408ffd-5774-4285-8b38-e96e5176e871"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2386),
                            Name = "Completed",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2403),
                            DisplayName = "ابطال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("c197dbc6-f807-4c4e-805a-82228f77dfcb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2403),
                            Name = "Aborted",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2865),
                            DisplayName = "معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("e3810836-b02b-40d4-944a-b67c5cb2d309"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2865),
                            Name = "PharmaceuticalDeputy",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2871),
                            DisplayName = "معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("8f57295e-a48d-4777-8ee1-4be9597dd894"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2871),
                            Name = "FMCGDeputy",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2875),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("43d7eb8f-6397-45a5-8d1e-7b76d03bd2d7"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2876),
                            Name = "BusinessSpecialist",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2880),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("3fc07dd2-1550-48e4-a2e9-5206706e090b"),
                            Independent = true,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2881),
                            Name = "SalesSpecialist",
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2885),
                            DisplayName = "مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("d223a04b-9c05-4d89-a101-e9fa000ef2db"),
                            Independent = false,
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2886),
                            Name = "DistributionCenterManager",
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2656),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            DsblRecord = false,
                            GuidRecord = new Guid("99dd33b9-48cd-4783-94bb-70016de23b0a"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2657),
                            Name = "OursShare",
                            SortIndex = 100L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2662),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            DsblRecord = false,
                            GuidRecord = new Guid("994d33bf-b08e-4a60-bb10-9aa15c48cfd0"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2663),
                            Name = "OthersShare",
                            SortIndex = 101L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2737),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            DsblRecord = false,
                            GuidRecord = new Guid("60724207-6003-42b7-8092-d81f82601bdb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2738),
                            Name = "Price",
                            SortIndex = 103L,
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2742),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            DsblRecord = false,
                            GuidRecord = new Guid("77d8696f-c40c-4866-a487-c6f345f1d49f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2743),
                            Name = "Refrigerator",
                            SortIndex = 200L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2747),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("06b3d31a-9a3a-4e35-afd8-d1a73461c364"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2747),
                            Name = "Approve",
                            SortIndex = 201L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2751),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("9cfa1f70-469b-44e0-ad62-2e3a26aae40d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2752),
                            Name = "Reject",
                            SortIndex = 202L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2756),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("1e5803fe-cc69-40e8-b16c-0f3fc6507694"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2757),
                            Name = "Revise",
                            SortIndex = 203L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2760),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("3b8938e2-7717-4998-9c12-6f54c66a4334"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2761),
                            Name = "Med",
                            SortIndex = 204L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2765),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("3be4636b-553f-48b3-90ea-3b78537d1a38"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2765),
                            Name = "FMCG",
                            SortIndex = 205L,
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2769),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            DsblRecord = false,
                            GuidRecord = new Guid("1ed6586d-da85-4d6a-adae-5367c489d276"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2770),
                            Name = "General",
                            SortIndex = 206L,
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2610),
                            DisplayName = "عددی",
                            DsblRecord = false,
                            GuidRecord = new Guid("42ea5c2c-abad-4969-b41f-ad07022c1f10"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2611),
                            Name = "Numberic",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2615),
                            DisplayName = "دودویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("748d6c8d-7a75-493d-a0f2-1aea13ccc975"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2616),
                            Name = "Boolean",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2619),
                            DisplayName = "تاریخ",
                            DsblRecord = false,
                            GuidRecord = new Guid("923df248-da80-4452-af4c-c998a358401f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2620),
                            Name = "Date",
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2623),
                            DisplayName = "حروف",
                            DsblRecord = false,
                            GuidRecord = new Guid("bee42bcb-1dab-4e3c-9ef7-dc88e2f586d1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2624),
                            Name = "String",
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2824),
                            DisplayName = "محمد شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("948a1e50-af9e-4e10-93ac-5be4ac58faac"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2825),
                            Name = "m.sharifi",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2830),
                            DisplayName = "امین شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("f0c7b6ef-6a8d-4f6d-9d3a-3eccc8a17bd1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(2831),
                            Name = "a.sharifi",
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProcessStateId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3473),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("12e313ba-cd69-47c9-ba6b-b22e2f3ed992"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3473),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            SortIndex = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3481),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("c7cc8867-00fc-4c27-b09e-25722ab11bff"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3482),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3486),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("1d2330dc-7cea-48d1-b464-9ce750769607"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3487),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            SortIndex = 3L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3494),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("6f7a023f-6ceb-4379-9d41-7c100fcf8f53"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3495),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            SortIndex = 4L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3502),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("516ec6b9-7b26-42cb-8ba5-ce273a522009"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3502),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            SortIndex = 5L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3605),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("bea6a310-9bb8-4d0f-a40a-29daf7dd6bc1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3606),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3613),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("19c103e3-5453-4697-8547-fa47bc64c8f2"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3613),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3617),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("851f58ec-1318-4ad9-88ee-edabb76a08b7"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3618),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3623),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("c10ab6ed-37d9-4084-a83c-a7e63f027c9b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3623),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3432),
                            DisplayName = "سناریو ستاد",
                            DsblRecord = false,
                            GuidRecord = new Guid("6c9df2f2-2caf-4851-9410-c28dd0a042fa"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3433),
                            Name = "Head_Scenario3",
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3438),
                            DisplayName = "سناریو دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("615ef805-9156-40d4-8de0-94e355a2364d"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3438),
                            Name = "Med_Scenario",
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3442),
                            DisplayName = "سناریو مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("3207d1b6-e5c3-46d2-a296-74912e2d8e75"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3442),
                            Name = "FMCG_Scenario",
                            SortIndex = 3L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3809),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("ed2b1cf0-c408-453b-b48c-c6af6c39bc15"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3810),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3814),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("37aa985f-a456-4cb4-bd8d-037216258350"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3815),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3818),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("11ae471b-eb9d-4e54-b6ee-37e128560093"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3819),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3822),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("6d77cb8b-1857-4842-8b78-6460d7a1fafb"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3823),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3826),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("a30915e5-06aa-4c0b-bc04-ddf9f5bd3eea"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3827),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L,
                            SortIndex = 5L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3713),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("9bac53f1-168b-42ff-a5da-c50461413a43"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3713),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3718),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("24f73a06-5374-426e-b3a5-8fdf66763502"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3718),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3722),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("0b95951a-1c6e-47af-a405-f7d3469335f8"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3723),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3727),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("d936cd87-a7ec-43b6-959f-693049e53fc6"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3727),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L,
                            SortIndex = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3732),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("a928a876-0f51-4c9d-933a-1b033de85b1b"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3733),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L,
                            SortIndex = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3737),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("d8a23bec-51c2-4c77-b11a-b95875b3e196"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3737),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L,
                            SortIndex = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3744),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("e0215b71-d7ba-4af9-93b3-c99e9722a8a9"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3744),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L,
                            SortIndex = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3664),
                            DisplayName = "محمد شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("d97f15bd-9466-46a1-87dc-b17c73eb78e1"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3665),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3670),
                            DisplayName = "امین شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("33b131bc-f7ab-4f91-96aa-7f330a6e1b01"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3670),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3678),
                            DisplayName = "محمد شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("60711210-455b-479b-a674-2e32d1c26e8c"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3679),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L,
                            SortIndex = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3682),
                            DisplayName = "امین شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("1b901c06-49e9-48ba-81b6-648076df243e"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3682),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L,
                            SortIndex = 4L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.Property<long?>("SortIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3861),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("6971b8e0-13b0-4878-97a6-ba04318e99cd"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3862),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L,
                            SortIndex = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3867),
                            DisplayName = "امین شریفی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("25b0a662-c2a8-429a-a02e-7f7c12f15a3f"),
                            LastUpdatedRecord = new DateTime(2023, 7, 10, 10, 7, 52, 316, DateTimeKind.Local).AddTicks(3868),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L,
                            SortIndex = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("Parent");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Case", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ProcessState")
                        .WithMany()
                        .HasForeignKey("ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("Creator");

                    b.Navigation("Parent");

                    b.Navigation("Process");

                    b.Navigation("ProcessState");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Parent");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Parent");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_WorkItem", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Parent");

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

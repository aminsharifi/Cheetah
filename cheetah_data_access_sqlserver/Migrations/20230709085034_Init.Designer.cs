// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess_SqlServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230709085034_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<bool?>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9663),
                            Display = false,
                            DisplayName = "نوع تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("b8910922-220b-4d97-bc59-d8e6939dca03"),
                            Index = 101L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9664),
                            Name = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9705),
                            Display = false,
                            DisplayName = "موقعیت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8ec9b1d7-062d-4ccc-8cb1-ddbdace27d49"),
                            Index = 102L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9705),
                            Name = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9713),
                            Display = false,
                            DisplayName = "عملگرها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("381dcf9c-fd0e-41fd-ad77-3d8cac8980b5"),
                            Index = 103L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9713),
                            Name = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9718),
                            Display = false,
                            DisplayName = "تگ‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("3085b02f-edbd-43fc-9fd8-c83cb4837003"),
                            Index = 104L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9718),
                            Name = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9724),
                            Display = true,
                            DisplayName = "سمت‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("902fdcb5-26ee-4a0e-91e3-9c7b64712f11"),
                            Index = 105L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9725),
                            Name = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9729),
                            Display = false,
                            DisplayName = "وضعیت فرآیندها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("c571634d-c071-4415-aca7-79df36e7b075"),
                            Index = 106L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9730),
                            Name = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9735),
                            Display = true,
                            DisplayName = "فرآیند‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("8a76ce11-3130-4b95-ae84-97e51b74e89a"),
                            Index = 107L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9735),
                            Name = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9741),
                            Display = true,
                            DisplayName = "نقش‌ها(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("6e9b30b9-5728-4dde-9c1d-a47619805447"),
                            Index = 108L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9741),
                            Name = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9746),
                            Display = true,
                            DisplayName = "کاربران(Dimentions)",
                            DsblRecord = false,
                            GuidRecord = new Guid("baf73738-181d-4acf-b9a2-0d6777d23e32"),
                            Index = 109L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9746),
                            Name = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9820),
                            Display = false,
                            DisplayName = "اطلاعات کاربرها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("7e884507-01e8-4f7b-9a03-9d75ee117645"),
                            Index = 112L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9820),
                            Name = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9829),
                            Display = false,
                            DisplayName = "تمام تاییدها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("2a96b0cd-bfcc-46a3-88c3-25a6439ae47d"),
                            Index = 200L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9830),
                            Name = "F_WorkItem"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9835),
                            Display = false,
                            DisplayName = "ضمیمه‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("1b95bfe6-b6ca-43c5-bbe5-3fb9b46708a6"),
                            Index = 202L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9836),
                            Name = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9841),
                            Display = false,
                            DisplayName = "لیست تخصیص‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("bd940954-9eb7-4f5b-96e9-893a662fa79e"),
                            Index = 203L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9841),
                            Name = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9847),
                            Display = false,
                            DisplayName = "لیست شرط‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("51403b46-5083-4d79-881b-06c90a04e61e"),
                            Index = 204L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9847),
                            Name = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9852),
                            Display = true,
                            DisplayName = "اطلاعات درخواست‌ها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("2bb30bff-a29c-4b4b-9408-d8fe3ec97063"),
                            Index = 205L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9853),
                            Name = "F_Case"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9858),
                            Display = true,
                            DisplayName = "سناریوها(Facts)",
                            DsblRecord = false,
                            GuidRecord = new Guid("7569fc2b-bae0-4b7a-8336-c230e9476f82"),
                            Index = 206L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9858),
                            Name = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9864),
                            Display = false,
                            DisplayName = "نقش-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("423f4dc9-09d4-4a9e-9f1f-0abe8ee4de85"),
                            Index = 300L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9864),
                            Name = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9869),
                            Display = false,
                            DisplayName = "فرآیند-سناریو(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("d24349bc-ec18-436a-8a4a-245f9e410884"),
                            Index = 301L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9869),
                            Name = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9876),
                            Display = false,
                            DisplayName = "کاربر-موقعیت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("87062b49-0b4e-48c8-af11-3d4a89a298e2"),
                            Index = 302L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9877),
                            Name = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9883),
                            Display = false,
                            DisplayName = "کاربر-سمت(Links)",
                            DsblRecord = false,
                            GuidRecord = new Guid("39d8c7b8-1a17-4f43-afc8-463bc6e87983"),
                            Index = 303L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9883),
                            Name = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9327),
                            DisplayName = "تهران",
                            DsblRecord = false,
                            GuidRecord = new Guid("1bc63788-b515-48ca-9abf-22f4e6e32297"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9328),
                            Name = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9331),
                            DisplayName = "فارس",
                            DsblRecord = false,
                            GuidRecord = new Guid("67aba493-5c7a-42dc-a1bc-fd423a5e85c3"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9331),
                            Name = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9333),
                            DisplayName = "اصفهان",
                            DsblRecord = false,
                            GuidRecord = new Guid("bfd6f1e2-46dc-4529-b271-4ccf8bb818e6"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9333),
                            Name = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9353),
                            DisplayName = "مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("5d0a8494-9582-4dbe-9d62-4195f0f3645f"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9354),
                            Name = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9356),
                            DisplayName = "مخالف",
                            DsblRecord = false,
                            GuidRecord = new Guid("154e7ac3-8dc3-46bc-beb8-46e70d067392"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9357),
                            Name = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9359),
                            DisplayName = "بزگتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("48741a86-e704-4ad3-b7c0-b59b731bb819"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9359),
                            Name = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9361),
                            DisplayName = "بزرگتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("970eec3b-3b8d-47f6-b4df-f4dc7c22386a"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9362),
                            Name = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9367),
                            DisplayName = " کوچکتر از",
                            DsblRecord = false,
                            GuidRecord = new Guid("308e2b47-1d4f-485b-b192-24409e8b3128"),
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9367),
                            Name = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9369),
                            DisplayName = "کوچکتر و مساوی",
                            DsblRecord = false,
                            GuidRecord = new Guid("3541c9a6-cbdd-4774-a56b-8be7e09aa12a"),
                            Index = 6L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9369),
                            Name = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9619),
                            DisplayName = "معاون دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("f2ffaa23-dae1-4cfa-aabe-948b22531989"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9620),
                            Name = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9625),
                            DisplayName = "معاون غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("c3f36fc7-404f-42f9-8637-af1c720672ad"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9625),
                            Name = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9628),
                            DisplayName = "کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("a8e8c549-dce7-4872-954a-e6c41669ccf1"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9628),
                            Name = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9630),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("4f347b32-b16c-429d-a997-e4c6f9c1ef1f"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9631),
                            Name = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9633),
                            DisplayName = "کارشناس ارشد فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("e3f39d0f-464b-4d46-8219-bec3a6fb0d9a"),
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9633),
                            Name = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9636),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("18ecadb7-4f13-4b50-9511-4aab275605da"),
                            Index = 6L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9636),
                            Name = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9638),
                            DisplayName = "مدیر مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("08d5f135-258a-4382-a4c2-4d853b569e1d"),
                            Index = 7L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9639),
                            Name = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<bool?>("ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9047),
                            DisplayName = "تعریف/اصلاح مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("ae566910-6106-48ed-95af-f45a42551a5e"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9065),
                            Name = "CustomerDefinition",
                            RemoveRequestorApproval = true,
                            ShowSupport = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9099),
                            DisplayName = "مجوزهای موردی",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("e4378415-cb88-48e6-b368-6d3777d2025a"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9100),
                            Name = "PolicyCenter",
                            RemoveRequestorApproval = true,
                            ShowSupport = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9103),
                            DisplayName = "اعتباردهی مالی مشتری",
                            DsblRecord = false,
                            ERP = true,
                            GuidRecord = new Guid("a82ca5be-cd40-4b2c-8197-cf2dcbe796bf"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9103),
                            Name = "CustomerCredit",
                            RemoveRequestorApproval = true,
                            ShowSupport = true
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9279),
                            DisplayName = "در دست بررسی",
                            DsblRecord = false,
                            GuidRecord = new Guid("94330afc-fbaa-4664-a006-c956fff4327e"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9280),
                            Name = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9284),
                            DisplayName = "منتظر بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("607bf02b-e8cd-41d0-83e7-5832058129aa"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9284),
                            Name = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9286),
                            DisplayName = "کامل شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("bcd539fa-0f7f-4552-b16b-3924f18a29fd"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9287),
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9300),
                            DisplayName = "ابطال شده",
                            DsblRecord = false,
                            GuidRecord = new Guid("bf95aa44-f93e-4d5f-8f4c-f9b686aff11f"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9300),
                            Name = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool>("Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("Independent")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9554),
                            DisplayName = "معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("19486405-9a1c-4c6c-90b2-bb80b26fe9e0"),
                            Independent = true,
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9555),
                            Name = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9558),
                            DisplayName = "معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("6545650a-2158-4488-89e8-d208d7bc4002"),
                            Independent = true,
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9558),
                            Name = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9561),
                            DisplayName = "کارشناس بازرگانی",
                            DsblRecord = false,
                            GuidRecord = new Guid("e1e11d71-362f-44aa-84b5-7269dcdd55b0"),
                            Independent = true,
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9561),
                            Name = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9563),
                            DisplayName = "کارشناس فروش",
                            DsblRecord = false,
                            GuidRecord = new Guid("a3ca601a-6618-4453-a51f-a4d4ef48e720"),
                            Independent = true,
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9564),
                            Name = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9566),
                            DisplayName = "مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("34b8adb1-b395-4d15-9f81-75b5d0c24597"),
                            Independent = false,
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9567),
                            Name = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9474),
                            Description = "عددی",
                            DisplayName = "سهم شرکت",
                            DsblRecord = false,
                            GuidRecord = new Guid("d2ce5d55-6298-4754-aff9-4282a19f0cc2"),
                            Index = 100L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9475),
                            Name = "OursShare",
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9478),
                            Description = "عددی",
                            DisplayName = "سهم دیگران",
                            DsblRecord = false,
                            GuidRecord = new Guid("05ebc9f0-288f-4cad-ae23-bb0f9d0f1358"),
                            Index = 101L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9479),
                            Name = "OthersShare",
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9484),
                            Description = "عددی",
                            DisplayName = "مبلغ",
                            DsblRecord = false,
                            GuidRecord = new Guid("b4332a39-787e-4d21-8ed6-cb3265dd2d6f"),
                            Index = 103L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9484),
                            Name = "Price",
                            TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9486),
                            Description = "دودویی",
                            DisplayName = "مخدر/ یخچالی",
                            DsblRecord = false,
                            GuidRecord = new Guid("6ae1e9e5-c9e4-4afe-9c8e-7405e082bff0"),
                            Index = 200L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9487),
                            Name = "Refrigerator",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9489),
                            Description = "پارامتریک",
                            DisplayName = "تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("22ef2651-4cc2-4f01-a567-0b7f5bb771da"),
                            Index = 201L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9490),
                            Name = "Approve",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9493),
                            Description = "پارامتریک",
                            DisplayName = "عدم تایید",
                            DsblRecord = false,
                            GuidRecord = new Guid("68d33742-4fb3-44c4-9231-50b5955b39b4"),
                            Index = 202L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9493),
                            Name = "Reject",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9496),
                            Description = "پارامتریک",
                            DisplayName = "بازنگری",
                            DsblRecord = false,
                            GuidRecord = new Guid("9cbff978-0ced-44d2-ab0b-ac9e02d133d6"),
                            Index = 203L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9496),
                            Name = "Revise",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9499),
                            Description = "پارامتریک",
                            DisplayName = "دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0162465f-897b-4ad8-9796-74ef467e8230"),
                            Index = 204L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9499),
                            Name = "Med",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9501),
                            Description = "پارامتریک",
                            DisplayName = "مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("97fdf2b0-841b-463f-a2c7-c2785c718c02"),
                            Index = 205L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9502),
                            Name = "FMCG",
                            TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9504),
                            Description = "پارامتریک",
                            DisplayName = "کل",
                            DsblRecord = false,
                            GuidRecord = new Guid("c6332e3f-f097-4186-8d70-1581f41c1d8d"),
                            Index = 206L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9504),
                            Name = "General",
                            TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9442),
                            DisplayName = "عددی",
                            DsblRecord = false,
                            GuidRecord = new Guid("5de3e563-68da-4d89-8d83-23532ee626ef"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9442),
                            Name = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9445),
                            DisplayName = "دودویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("be11743f-ca08-46cf-a26f-56d65d1a580d"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9445),
                            Name = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9447),
                            DisplayName = "تاریخ",
                            DsblRecord = false,
                            GuidRecord = new Guid("8aa66d48-d13e-4622-898a-b136341b7145"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9448),
                            Name = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9450),
                            DisplayName = "حروف",
                            DsblRecord = false,
                            GuidRecord = new Guid("666bd99b-c91a-4c56-b84a-8374e6745516"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9451),
                            Name = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<string>("Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<bool?>("EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<string>("IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DelegateId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9530),
                            DisplayName = "محمد شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0dabcb92-2080-4ce0-a74b-7246cbf2c2d5"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9531),
                            Name = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9534),
                            DisplayName = "امین شریفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("50f2f381-d289-40f3-900b-e9d2a10fc064"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9534),
                            Name = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<string>("NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<long?>("RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("ProcessStateId");

                    b.HasIndex("RequestorId");

                    b.HasIndex("SelectedScenarioId");

                    b.ToTable("F_Case", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("OperandId");

                    b.HasIndex("Parent_Id");

                    b.HasIndex("ScenarioId");

                    b.HasIndex("TagId");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(4),
                            DisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            EndorsementId = 2L,
                            GuidRecord = new Guid("519d23bc-e542-4293-9895-248ca7a60cce"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(5),
                            Name = "Head_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 1L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(10),
                            DisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("0cdd1027-9cef-45fa-9463-061287a99d05"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(10),
                            Name = "Med_Scenario,Med,=,1",
                            OperandId = 1L,
                            ScenarioId = 2L,
                            TagId = 204L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(13),
                            DisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("3fba6df1-d7e4-47ae-952b-3801385c757a"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(13),
                            Name = "Med_Scenario,OursShare,>,0",
                            OperandId = 3L,
                            ScenarioId = 2L,
                            TagId = 100L,
                            Value = "0"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(18),
                            DisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            DsblRecord = false,
                            GuidRecord = new Guid("7110dc9e-b55e-4313-8255-f1ac255333f3"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(19),
                            Name = "FMCG_Scenario,FMCG,=,1",
                            OperandId = 1L,
                            ScenarioId = 3L,
                            TagId = 205L,
                            Value = "1"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(21),
                            DisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            DsblRecord = false,
                            GuidRecord = new Guid("5f3144dd-5406-4135-9262-7e2a6f7b0dda"),
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(22),
                            Name = "FMCG_Scenario,Price,>,0",
                            OperandId = 3L,
                            ScenarioId = 3L,
                            TagId = 103L,
                            Value = "0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RoleId");

                    b.HasIndex("ScenarioId");

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(48),
                            DisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            DsblRecord = false,
                            GuidRecord = new Guid("d170193e-d197-45ea-bb63-41b275fb7d4b"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(48),
                            Name = "Med_Scenario,DistributionCenterManager",
                            RoleId = 5L,
                            ScenarioId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(52),
                            DisplayName = "سناریو سه,معاونت غذایی",
                            DsblRecord = false,
                            GuidRecord = new Guid("43cb972c-6d7b-4401-a05a-1983852f6300"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(52),
                            Name = "Strategy3,FMCGDeputy",
                            RoleId = 2L,
                            ScenarioId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(55),
                            DisplayName = "سناریو دو,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("2b3aaf51-7ac7-4aa4-81be-84ae484dd0e3"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(55),
                            Name = "Strategy2,PharmaceuticalDeputy",
                            RoleId = 1L,
                            ScenarioId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(59),
                            DisplayName = "سناریو دارویی,معاونت دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("9842bcd6-11e9-45c4-be81-7af4da9f3b22"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(59),
                            Name = "Med_Scenario,PharmaceuticalDeputy",
                            RoleId = 2L,
                            ScenarioId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9919),
                            DisplayName = "سناریو ستاد",
                            DsblRecord = false,
                            GuidRecord = new Guid("7353dff8-ef99-443b-91ee-d06a35aaa4da"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9920),
                            Name = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9923),
                            DisplayName = "سناریو دارویی",
                            DsblRecord = false,
                            GuidRecord = new Guid("ec871abb-c12d-432b-a160-7da532f55e08"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9924),
                            Name = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9926),
                            DisplayName = "سناریو مصرفی",
                            DsblRecord = false,
                            GuidRecord = new Guid("0046d7fc-864a-4e29-ad60-197f052dd4b7"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 489, DateTimeKind.Local).AddTicks(9926),
                            Name = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CaseId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TagId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CaseId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("EndorsementId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("F_WorkItem", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(157),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("aa090c70-b950-4653-804b-43d2af78cfcd"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(158),
                            Name = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(160),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("b41ea0e8-e728-441a-aaa7-0c347e624e7a"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(161),
                            Name = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(163),
                            DisplayName = "مجوزهای موردی-سناریو یک",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("1f6eded9-11ff-45e1-817a-10d6ce933f8c"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(163),
                            Name = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(165),
                            DisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("7958d2b9-9688-49f0-92cf-871607d19471"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(166),
                            Name = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(168),
                            DisplayName = "مجوزهای موردی-سناریو دو",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("c9832f47-b4eb-444f-92ae-5268f71507f3"),
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(168),
                            Name = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(117),
                            DisplayName = "معاونت دارویی-معاون دارویی",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("3e1d007a-4bbd-4290-83ab-68e6f53a9432"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(117),
                            Name = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(120),
                            DisplayName = "معاونت غذایی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("d8d9872d-dd37-41eb-b613-3e6e92bec199"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(120),
                            Name = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(122),
                            DisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("cb9048e6-dcdc-45c7-918b-55b6e92dbc4d"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(123),
                            Name = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(125),
                            DisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("caf22c12-47db-4dfd-8415-6bf4031601ff"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(125),
                            Name = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(128),
                            DisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("f510d51e-fc2f-4e75-a61a-f11dbed98fc0"),
                            Index = 5L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(128),
                            Name = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(130),
                            DisplayName = "کارشناس فروش-کارشناس فروش",
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("79c88483-2d8e-4a17-a2c8-56f04d071c3f"),
                            Index = 6L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(130),
                            Name = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(135),
                            DisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("93ecfbf5-cd07-4ab6-9ba4-8354a0f80c88"),
                            Index = 7L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(135),
                            Name = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(86),
                            DisplayName = "محمد شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("a0b454ee-dfe6-4d22-822e-a848255bee23"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(86),
                            Name = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(89),
                            DisplayName = "امین شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("cd91d78c-d824-4cf6-a543-01a90f3e3615"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(89),
                            Name = "a.sharifi-Fars",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(94),
                            DisplayName = "محمد شریفی-فارس",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("aab51036-c72c-42b6-b7ef-581c82a0708e"),
                            Index = 3L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(94),
                            Name = "m.sharifi-Fars",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(96),
                            DisplayName = "امین شریفی-تهران",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("4c3e29cd-64c8-4895-85a5-72ab21214bbc"),
                            Index = 4L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(97),
                            Name = "a.sharifi-Tehran",
                            SecondId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("DisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<long?>("Index")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ERPCode")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(222),
                            DisplayName = "محمد شریفی-مدیر مرکز",
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("76f921c0-108e-4338-9c88-68c1c2034f81"),
                            Index = 1L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(223),
                            Name = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(226),
                            DisplayName = "امین شریفی-معاون غذایی",
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("3536d9a0-6b94-4b0e-ab89-acf6a25ece38"),
                            Index = 2L,
                            LastUpdatedRecord = new DateTime(2023, 7, 9, 12, 20, 34, 490, DateTimeKind.Local).AddTicks(226),
                            Name = "a.sharifi-FMCGDeputy",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Location", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Location", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_Position", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnOrder(102);

                    b.HasKey("PERPCode");

                    b.ToTable("V_Position", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_User", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(103);

                    b.Property<string>("PName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(102);

                    b.Property<string>("User_BossName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(104);

                    b.HasKey("PERPCode");

                    b.ToTable("V_User", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserLocation", "Virtuals");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.Property<long?>("PERPCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("PERPCode"));

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("PERPCode");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("V_UserPosition", "Virtuals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<long?>("IU_UserId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.HasIndex("IU_UserId");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TagType")
                        .WithMany()
                        .HasForeignKey("TagTypeId");

                    b.Navigation("Parent");

                    b.Navigation("TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Delegate")
                        .WithMany()
                        .HasForeignKey("DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId");

                    b.Navigation("Delegate");

                    b.Navigation("Parent");

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Case", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ProcessState")
                        .WithMany()
                        .HasForeignKey("ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "Requestor")
                        .WithMany()
                        .HasForeignKey("RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "SelectedScenario")
                        .WithMany()
                        .HasForeignKey("SelectedScenarioId");

                    b.Navigation("Creator");

                    b.Navigation("Parent");

                    b.Navigation("Process");

                    b.Navigation("ProcessState");

                    b.Navigation("Requestor");

                    b.Navigation("SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("Conditions")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany("Conditions")
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "Operand")
                        .WithMany()
                        .HasForeignKey("OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Conditions")
                        .HasForeignKey("ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Operand");

                    b.Navigation("Parent");

                    b.Navigation("Scenario");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "Role")
                        .WithMany("EndorsementPosition")
                        .HasForeignKey("RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("Endorsements")
                        .HasForeignKey("ScenarioId");

                    b.Navigation("Parent");

                    b.Navigation("Role");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Case", "Case")
                        .WithMany("WorkItems")
                        .HasForeignKey("CaseId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "Endorsement")
                        .WithMany()
                        .HasForeignKey("EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_WorkItem", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Case");

                    b.Navigation("Endorsement");

                    b.Navigation("Parent");

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "Process")
                        .WithMany("ProcessScenario")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "Scenario")
                        .WithMany("ProcessScenarios")
                        .HasForeignKey("SecondId");

                    b.Navigation("Process");

                    b.Navigation("Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "D_Role")
                        .WithMany("RolePositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("RolePositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("D_Role");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserLocations")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "Location")
                        .WithMany("UserLocations")
                        .HasForeignKey("SecondId");

                    b.Navigation("Location");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User")
                        .WithMany("UserPositions")
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "Position")
                        .WithMany("UserPositions")
                        .HasForeignKey("SecondId");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UL_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Location", "UL_Location")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Virtuals.V_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Virtuals.V_User", "UP_User")
                        .WithMany()
                        .HasForeignKey("FirstId");

                    b.HasOne("Cheetah_Business.Virtuals.V_Position", "UP_Position")
                        .WithMany()
                        .HasForeignKey("SecondId");

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Data.ApplicationUser", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "IU_User")
                        .WithMany()
                        .HasForeignKey("IU_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IU_User");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RolePositions");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EndorsementPosition");

                    b.Navigation("RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("UserLocations");

                    b.Navigation("UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Case", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("WorkItems");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Conditions");

                    b.Navigation("Endorsements");

                    b.Navigation("ProcessScenarios");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_WorkItem", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

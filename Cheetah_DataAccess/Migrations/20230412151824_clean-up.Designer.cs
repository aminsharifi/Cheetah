// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230412151824_clean-up")]
    partial class cleanup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Area", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(476),
                            DsblRecord = false,
                            GuidRecord = new Guid("b971fd1a-1c0f-443c-8898-5eb184458f45"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(562),
                            PCode = 1L,
                            PDisplayName = "فروش دارویی",
                            PIndex = 1L,
                            PName = "DrugSale"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(631),
                            DsblRecord = false,
                            GuidRecord = new Guid("84f7befc-bb38-4b18-995f-1f0aaa102d2c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(634),
                            PCode = 2L,
                            PDisplayName = "فروش مصرفی",
                            PIndex = 2L,
                            PName = "FMCGSale"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(641),
                            DsblRecord = false,
                            GuidRecord = new Guid("c0c3b5fd-2647-40b3-bf7e-78307492699d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(659),
                            PCode = 3L,
                            PDisplayName = "حسابداری خرید",
                            PIndex = 3L,
                            PName = "PurchaseAccounting"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(672),
                            DsblRecord = false,
                            GuidRecord = new Guid("7b94ecd7-12e7-46e4-8ac2-98b6070fb284"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(675),
                            PCode = 4L,
                            PDisplayName = "حسابداری فروش",
                            PIndex = 4L,
                            PName = "SaleAccounting"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_EndorsementPattern", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1647),
                            DsblRecord = false,
                            GuidRecord = new Guid("0160dd1b-63f1-4dd7-b2eb-da7d8e72b5f2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1665),
                            PCode = 1L,
                            PDisplayName = "الگوی یک",
                            PIndex = 1L,
                            PName = "Pattern1"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1693),
                            DsblRecord = false,
                            GuidRecord = new Guid("2eb68ffd-05ab-40c8-9f86-62b1ab7ca0fb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1696),
                            PCode = 2L,
                            PDisplayName = "الگوی دو",
                            PIndex = 2L,
                            PName = "Pattern2"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1701),
                            DsblRecord = false,
                            GuidRecord = new Guid("9710be75-a3e8-4788-bcef-38a4c8c4e39c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(1703),
                            PCode = 3L,
                            PDisplayName = "الگوی سه",
                            PIndex = 3L,
                            PName = "Pattern3"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5587),
                            DsblRecord = false,
                            GuidRecord = new Guid("4148eb9a-3405-4cdd-b867-4660e08b0a77"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5591),
                            PCode = 100L,
                            PDisplayName = "واحدها(Dimentions)",
                            PIndex = 100L,
                            PName = "D_Area"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6757),
                            DsblRecord = false,
                            GuidRecord = new Guid("1b9fbefb-469e-43e3-99b0-69768899ca9f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6769),
                            PCode = 101L,
                            PDisplayName = "نوع فیلدها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_FieldType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6799),
                            DsblRecord = false,
                            GuidRecord = new Guid("b949eca3-3438-4e9c-b536-62a4fc763110"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6801),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6811),
                            DsblRecord = false,
                            GuidRecord = new Guid("d9e5295b-82eb-4317-9083-baa2dd390ba7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6814),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6824),
                            DsblRecord = false,
                            GuidRecord = new Guid("ca3fbdf2-88d3-4131-bc15-996a0510f8d4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6827),
                            PCode = 104L,
                            PDisplayName = "لیست پارامترها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_ParameterList"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6837),
                            DsblRecord = false,
                            GuidRecord = new Guid("fe2b4494-4a75-4504-b535-3bd36a06940f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6840),
                            PCode = 105L,
                            PDisplayName = "نوع‌های پارامتر(Dimentions)",
                            PIndex = 105L,
                            PName = "D_ParameterType"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6855),
                            DsblRecord = false,
                            GuidRecord = new Guid("01aaedbb-6077-4d2f-b637-351927944356"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6858),
                            PCode = 106L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6870),
                            DsblRecord = false,
                            GuidRecord = new Guid("ed00aa8c-16ba-4cca-8416-c5df4a9dc96b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6872),
                            PCode = 107L,
                            PDisplayName = "تاییدهای فرآیندی(Dimentions)",
                            PIndex = 107L,
                            PName = "D_ProcessEndorsement"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6882),
                            DsblRecord = false,
                            GuidRecord = new Guid("2da76755-5e54-415a-a785-1acf6e9751ea"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6885),
                            PCode = 108L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6894),
                            DsblRecord = false,
                            GuidRecord = new Guid("8cedac3e-4c06-4642-9fdc-923b4ff06afd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6897),
                            PCode = 109L,
                            PDisplayName = "عنوان درخواست‌ها(Dimentions)",
                            PIndex = 109L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 110L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6907),
                            DsblRecord = false,
                            GuidRecord = new Guid("3ca3ac5d-b856-4b32-80af-65973875fab5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6910),
                            PCode = 110L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 110L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 111L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(6920),
                            DsblRecord = false,
                            GuidRecord = new Guid("6fdb3f4a-caa4-47bc-a9f9-a870e8c45185"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7282),
                            PCode = 111L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 111L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7370),
                            DsblRecord = false,
                            GuidRecord = new Guid("8ec8456e-1f94-4dea-bec2-f86efe0e1441"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7373),
                            PCode = 112L,
                            PDisplayName = "الگوهای تایید(Dimentions)",
                            PIndex = 112L,
                            PName = "D_EndorsementPattern"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7384),
                            DsblRecord = false,
                            GuidRecord = new Guid("f468a5b2-5b8c-4d4b-a44a-72eb2b0f0a57"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7386),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7401),
                            DsblRecord = false,
                            GuidRecord = new Guid("964e936e-f049-4b25-97d3-bb98efcc5ac7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7404),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7433),
                            DsblRecord = false,
                            GuidRecord = new Guid("93d81ab0-21fe-4638-9e22-efd98b854569"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7435),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7445),
                            DsblRecord = false,
                            GuidRecord = new Guid("f3b26d22-32b8-48af-aef8-b12406f0c95c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7448),
                            PCode = 203L,
                            PDisplayName = "اختصاص نقش‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7457),
                            DsblRecord = false,
                            GuidRecord = new Guid("aac2ae47-e7ef-4eb7-926d-339d56ca7cff"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7460),
                            PCode = 204L,
                            PDisplayName = "لیست پارامترها(Facts)",
                            PIndex = 204L,
                            PName = "F_ListOfParameter"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7469),
                            DsblRecord = false,
                            GuidRecord = new Guid("1a381155-3dfe-4cde-99f3-fe235fbf54bf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7472),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7482),
                            DsblRecord = false,
                            GuidRecord = new Guid("a9eb423d-9def-4dbf-9f89-df7679579801"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7484),
                            PCode = 206L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 206L,
                            PName = "F_UserInformation"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7494),
                            DsblRecord = false,
                            GuidRecord = new Guid("730604b9-d8a6-4f4c-89dd-7f4f34b2ef4e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7497),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7506),
                            DsblRecord = false,
                            GuidRecord = new Guid("2ead8dce-a022-45e9-8e58-0b1124509aee"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7508),
                            PCode = 301L,
                            PDisplayName = "کاربر-واحد(Links)",
                            PIndex = 301L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7522),
                            DsblRecord = false,
                            GuidRecord = new Guid("2e759462-7345-4412-b7a8-a3d91fa4f4ea"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7524),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7536),
                            DsblRecord = false,
                            GuidRecord = new Guid("8a98ddde-087c-458c-8ffb-b522c0d58513"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7539),
                            PCode = 303L,
                            PDisplayName = "کاربر-موقعیت مرتبط(Links)",
                            PIndex = 303L,
                            PName = "L_UserRelatedLocation"
                        },
                        new
                        {
                            Id = 304L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7923),
                            DsblRecord = false,
                            GuidRecord = new Guid("7e749b35-d6ef-4aaa-8235-df2203ef21bb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(7933),
                            PCode = 304L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 304L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_FieldType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3046),
                            DsblRecord = false,
                            GuidRecord = new Guid("42b3aefe-b015-488a-9b90-ef6ddb43a021"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3049),
                            PCode = 1L,
                            PDisplayName = "پارامتریک",
                            PIndex = 1L,
                            PName = "Parametric"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3056),
                            DsblRecord = false,
                            GuidRecord = new Guid("478f6a3c-ce7e-4dc7-93da-f78d4aa48dc9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3058),
                            PCode = 2L,
                            PDisplayName = "عددی",
                            PIndex = 2L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3064),
                            DsblRecord = false,
                            GuidRecord = new Guid("65864d0c-4677-4eab-82e5-4afb01e37d9c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3318),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3474),
                            DsblRecord = false,
                            GuidRecord = new Guid("3f50e9bc-79f7-4ffb-a3d5-6052e5cdc7c4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3476),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3481),
                            DsblRecord = false,
                            GuidRecord = new Guid("bfd310de-12e6-4c2c-89d8-4e627a95f3d2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3484),
                            PCode = 5L,
                            PDisplayName = "دودویی",
                            PIndex = 5L,
                            PName = "Boolean"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2420),
                            DsblRecord = false,
                            GuidRecord = new Guid("59ca667a-a8b0-493d-9a68-832f176b8622"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2822),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2932),
                            DsblRecord = false,
                            GuidRecord = new Guid("8bbdb6a7-b997-43f1-be2d-b0602ca9f7a6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2935),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2948),
                            DsblRecord = false,
                            GuidRecord = new Guid("1567478a-1ce3-4547-b61e-5adf2dbd75ab"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2950),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3573),
                            DsblRecord = false,
                            GuidRecord = new Guid("29616e0d-de3c-4837-a00d-ba4de6601dce"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3576),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3583),
                            DsblRecord = false,
                            GuidRecord = new Guid("ed4825c3-e02a-42c3-bb46-0d48a19d9eb3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3586),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3597),
                            DsblRecord = false,
                            GuidRecord = new Guid("e552bdb4-173e-40df-8cb2-d55f4b64a4fc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3600),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3605),
                            DsblRecord = false,
                            GuidRecord = new Guid("379e2de3-cb38-4139-b065-d05aa16eec0e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3608),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3614),
                            DsblRecord = false,
                            GuidRecord = new Guid("fdc5cf1b-c4bd-4031-8e92-bd82ba5491db"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3616),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3621),
                            DsblRecord = false,
                            GuidRecord = new Guid("a4d128b8-bf87-4ddb-bfa5-d417f56828a8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3624),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("PL_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PL_ParameterTypeId");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterList", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4235),
                            DsblRecord = false,
                            GuidRecord = new Guid("48754ea2-e738-4232-849e-1797debb0c7f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4238),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PL_ParameterTypeId = 1L,
                            PName = "OursShare"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4245),
                            DsblRecord = false,
                            GuidRecord = new Guid("bb8b8527-05d5-4416-a7f9-d80e289ae9d5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4248),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PL_ParameterTypeId = 1L,
                            PName = "OthersShare"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4253),
                            DsblRecord = false,
                            GuidRecord = new Guid("20396eec-7f9b-4d4c-9871-b3669cd258b9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4255),
                            PCode = 102L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 102L,
                            PL_ParameterTypeId = 4L,
                            PName = "Refrigerator"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4261),
                            DsblRecord = false,
                            GuidRecord = new Guid("029ba36f-e818-469a-9d91-e429f7814c95"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4263),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PL_ParameterTypeId = 1L,
                            PName = "Price"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4292),
                            DsblRecord = false,
                            GuidRecord = new Guid("0ceea65a-9821-40d4-b6ce-ae4a2eb51ef2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4294),
                            PCode = 200L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 200L,
                            PL_ParameterTypeId = 5L,
                            PName = "Approve"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4300),
                            DsblRecord = false,
                            GuidRecord = new Guid("8ab282de-cf84-451f-b591-fb7b9c2e5fad"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4303),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 201L,
                            PL_ParameterTypeId = 5L,
                            PName = "Reject"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4312),
                            DsblRecord = false,
                            GuidRecord = new Guid("0d72dd76-751c-4279-9dc1-35bbe928c7ba"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4314),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 202L,
                            PL_ParameterTypeId = 5L,
                            PName = "Revise"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4319),
                            DsblRecord = false,
                            GuidRecord = new Guid("fb9b607f-453b-4a0c-9e69-5ce933837705"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4322),
                            PCode = 301L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 301L,
                            PL_ParameterTypeId = 6L,
                            PName = "Med"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4330),
                            DsblRecord = false,
                            GuidRecord = new Guid("9d176d61-dfcc-43c3-909c-c51c0acbe2da"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4332),
                            PCode = 302L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 302L,
                            PL_ParameterTypeId = 6L,
                            PName = "FMCG"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4591),
                            DsblRecord = false,
                            GuidRecord = new Guid("548127a5-d8f8-4bf4-94ef-dfc2a1020067"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4726),
                            PCode = 303L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 303L,
                            PL_ParameterTypeId = 6L,
                            PName = "General"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("PT_P_FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_P_FieldTypeId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3660),
                            DsblRecord = false,
                            GuidRecord = new Guid("b733c479-fc73-419b-9e25-1c74104ac143"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3663),
                            PCode = 1L,
                            PDisplayName = "متغیرهای عددی",
                            PIndex = 1L,
                            PName = "NumbericProcessVar",
                            PT_P_FieldTypeId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3672),
                            DsblRecord = false,
                            GuidRecord = new Guid("b0c9d397-e72c-4411-92f9-7fe7ebd81d08"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(3674),
                            PCode = 2L,
                            PDisplayName = "متغیرهای تاریخی",
                            PIndex = 2L,
                            PName = "DateProcessVar",
                            PT_P_FieldTypeId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4107),
                            DsblRecord = false,
                            GuidRecord = new Guid("46ce2559-7fcd-4d08-b41f-760304bb8265"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4117),
                            PCode = 3L,
                            PDisplayName = "متغیرهای حروفی",
                            PIndex = 3L,
                            PName = "StringProcessVar",
                            PT_P_FieldTypeId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4128),
                            DsblRecord = false,
                            GuidRecord = new Guid("727360ad-107d-46fc-8723-b43162e2e1e7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4131),
                            PCode = 4L,
                            PDisplayName = "متغیرهای دودویی",
                            PIndex = 4L,
                            PName = "BooleanProcessVar",
                            PT_P_FieldTypeId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4141),
                            DsblRecord = false,
                            GuidRecord = new Guid("bd7f7cf5-a5aa-4e7e-a169-9442bb7d7660"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4144),
                            PCode = 5L,
                            PDisplayName = "اقدام‌های فرآیندی",
                            PIndex = 5L,
                            PName = "ProcessAction",
                            PT_P_FieldTypeId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4149),
                            DsblRecord = false,
                            GuidRecord = new Guid("6283390a-4384-418d-bd17-f11452ce36a4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4152),
                            PCode = 6L,
                            PDisplayName = "نوع‌های واحد",
                            PIndex = 6L,
                            PName = "UnitType",
                            PT_P_FieldTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5430),
                            DsblRecord = false,
                            GuidRecord = new Guid("8a51a37f-4a23-46f4-a83e-e765360d10fb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5444),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5460),
                            DsblRecord = false,
                            GuidRecord = new Guid("e705afd1-6227-4447-b429-871036cbc882"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5462),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5467),
                            DsblRecord = false,
                            GuidRecord = new Guid("36c42b8d-b8cd-43bf-b994-237e741b9048"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5470),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5475),
                            DsblRecord = false,
                            GuidRecord = new Guid("34251473-c87e-4fbd-b338-59ae4190ff28"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5478),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5485),
                            DsblRecord = false,
                            GuidRecord = new Guid("ba43fc0b-3ca4-48b0-bbdc-7e2343ff9aac"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5487),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5520),
                            DsblRecord = false,
                            GuidRecord = new Guid("48b0bf3e-0e1e-4695-a00a-6f8047482f47"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5523),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5528),
                            DsblRecord = false,
                            GuidRecord = new Guid("a4e50d97-f47f-41c5-8144-4aa13775d136"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(5531),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("PSE_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSE_EndorsementPatternId");

                    b.HasIndex("PSE_ExpertUserId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessEndorsement", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2353),
                            DsblRecord = false,
                            GuidRecord = new Guid("c844e688-9335-4197-8715-6e4ab609d64f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2356),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2363),
                            DsblRecord = false,
                            GuidRecord = new Guid("a5acad43-b760-4629-a48c-7ca6034b8812"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2365),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2370),
                            DsblRecord = false,
                            GuidRecord = new Guid("dde31ba3-1cc6-45be-937b-c4cdc4a62802"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2373),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2378),
                            DsblRecord = false,
                            GuidRecord = new Guid("2a80ecca-314d-4b51-9afe-75c08e304273"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2380),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long>("RT_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RT_EndorsementPatternId");

                    b.ToTable("D_RequestTitle", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2179),
                            DsblRecord = false,
                            GuidRecord = new Guid("a73fcf53-de29-4638-9333-fd5e7ca87377"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2224),
                            PCode = 1L,
                            PDescription = "الگوی یک",
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 1L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2264),
                            DsblRecord = false,
                            GuidRecord = new Guid("5a6a28fd-07f7-425e-baa2-80fe31bbebee"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2267),
                            PCode = 2L,
                            PDescription = "الگوی دو",
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 2L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2273),
                            DsblRecord = false,
                            GuidRecord = new Guid("e8f62109-a358-400c-9bb7-adcb6b687487"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(2275),
                            PCode = 3L,
                            PDescription = "الگوی دو",
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 2L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4896),
                            DsblRecord = false,
                            GuidRecord = new Guid("52459a70-1ad7-4095-bce3-bfa71cd14e3a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4900),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4906),
                            DsblRecord = false,
                            GuidRecord = new Guid("2e51a1f3-3489-4cf7-9451-cc49fac032bd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4909),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4920),
                            DsblRecord = false,
                            GuidRecord = new Guid("918c73ae-23dd-432b-a620-bf6d04393d88"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4923),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4929),
                            DsblRecord = false,
                            GuidRecord = new Guid("4531c36f-bd0b-4b12-b82a-ea68d1bc7c2f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4931),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4937),
                            DsblRecord = false,
                            GuidRecord = new Guid("78a03552-6974-4084-8017-65126ff79cf2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4940),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4852),
                            DsblRecord = false,
                            GuidRecord = new Guid("159475a1-bd33-487c-94a9-f5f6331de4b3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4855),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4862),
                            DsblRecord = false,
                            GuidRecord = new Guid("3acf8bf2-8d12-4c60-936f-f321ea25edba"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(4864),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_ProcessEndorsementId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UP_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UP_ProcessEndorsementId");

                    b.HasIndex("UP_RoleId");

                    b.ToTable("F_EndorsementPosition", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("LOP_BooleanValue")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<float?>("LOP_FloatValue")
                        .HasColumnType("real")
                        .HasColumnOrder(100);

                    b.Property<long?>("LOP_ParameterListId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOP_StringValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_OperandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_ProcessEndorsementId");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LOP_ParameterListId");

                    b.HasIndex("LOP_ParameterTypeId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_OperandId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_ListOfParameter", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("RI_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ExpertUserId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_UserInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8586),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("597d4df4-6c08-4581-96e1-389c11462e92"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8597),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8614),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("a88225c8-b710-4aa5-8cb8-c60835f74b8b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8616),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8621),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("bd39e75b-28d6-4e83-9612-8f827bc77563"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8624),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8635),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("a32bf1bd-aa89-491c-b9d1-592852984f3b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8637),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8642),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("2048acc4-943d-4da1-81ef-8a85673e1260"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8644),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8650),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("d0a0f0c1-d2ab-4f37-8dfc-edfd23377aa1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8652),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8660),
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("52939735-ceb2-40e8-805c-f97c55c3f768"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8662),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserArea", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8754),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("506122ce-4955-441d-8544-47c86a2b81e3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8758),
                            PCode = 1L,
                            PDisplayName = "امین شریفی-فروش دارویی",
                            PIndex = 1L,
                            PName = "a.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8764),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("7ee7cb3a-b034-423a-bbda-1f676ce9e8eb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8766),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فروش مصرفی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGSale",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8771),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("40c02aea-5569-45f1-b17f-bb940a261d2e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8774),
                            PCode = 3L,
                            PDisplayName = "محمد شریفی-فروش دارویی",
                            PIndex = 3L,
                            PName = "m.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8779),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("940e7e41-6d27-4de7-8033-17a70bcb59cc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8781),
                            PCode = 4L,
                            PDisplayName = "محمد شریفی-فروش مصرفی",
                            PIndex = 4L,
                            PName = "m.sharifi-FMCGSale",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8103),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("cc659400-5c7d-47f1-86ea-1264415c616a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8106),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8136),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("0cc538f3-d626-47c8-b9e3-8c617c054959"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 19, 48, 22, 730, DateTimeKind.Local).AddTicks(8138),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_PositionId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRole", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRelatedLocation", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "PL_ParameterType")
                        .WithMany("PT_ParameterList")
                        .HasForeignKey("PL_ParameterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PL_ParameterType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PT_P_FieldType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "PSE_EndorsementPattern")
                        .WithMany("EP_ProcessEndorsement")
                        .HasForeignKey("PSE_EndorsementPatternId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSE_EndorsementPattern");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "RT_EndorsementPattern")
                        .WithMany()
                        .HasForeignKey("RT_EndorsementPatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentId");

                    b.Navigation("RT_EndorsementPattern");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "APV_ProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("APV_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_ProcessEndorsement");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "UP_ProcessEndorsement")
                        .WithMany("PSE_EndorsementPosition")
                        .HasForeignKey("UP_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("UP_RoleId");

                    b.Navigation("ParentId");

                    b.Navigation("UP_ProcessEndorsement");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", null)
                        .WithMany("PSE_ListOfParameter")
                        .HasForeignKey("D_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", null)
                        .WithMany("User_ListOfParameters")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", null)
                        .WithMany("RI_ListOfParameters")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "LOP_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterListId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "LOP_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "PT_Operand")
                        .WithMany()
                        .HasForeignKey("PT_OperandId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_ListOfParameter", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("LOP_ParameterList");

                    b.Navigation("LOP_ParameterType");

                    b.Navigation("PT_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAreas")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "UA_Area")
                        .WithMany("Area_UserAreas")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Area");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", null)
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("D_PositionId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Role");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_Related_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_RelatedLocation")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_RelatedLocation");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Navigation("Area_UserAreas");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_ProcessEndorsement");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PT_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSE_EndorsementPosition");

                    b.Navigation("PSE_ListOfParameter");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_ListOfParameters");

                    b.Navigation("User_Related_UserLocations");

                    b.Navigation("User_UserAreas");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

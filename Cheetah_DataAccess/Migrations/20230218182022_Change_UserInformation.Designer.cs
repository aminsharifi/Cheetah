// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheetahDataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230218182022_Change_UserInformation")]
    partial class ChangeUserInformation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_AllApprove", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<long?>("Current_M_ApproveIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("Last_M_ApproveIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("Current_M_ApproveIdRecord");

                    b.HasIndex("Last_M_ApproveIdRecord");

                    b.ToTable("M_AllApprove", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("APV_UserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_UserInChargeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_AllApproveIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("APV_UserActionIdRecord");

                    b.HasIndex("APV_UserInChargeIdRecord");

                    b.HasIndex("M_AllApproveIdRecord");

                    b.ToTable("M_Approve", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Attachment", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_ApproveIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("M_ApproveIdRecord");

                    b.ToTable("M_Attachment", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CurrentPE", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<bool?>("CPE_Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CPE_ProcessEndorsementsIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("CPE_UserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("CPE_UserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_RequestInformationIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("CPE_ProcessEndorsementsIdRecord");

                    b.HasIndex("CPE_UserActionIdRecord");

                    b.HasIndex("CPE_UserIdRecord");

                    b.HasIndex("M_RequestInformationIdRecord");

                    b.ToTable("M_CurrentPE", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_ListOfParameter", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<bool?>("BooleanValue")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<float?>("FloatValue")
                        .HasColumnType("real");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("LOP_P_ParameterListIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_P_ParameterTypeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_RequestInformationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PT_P_OperandIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("P_ProcessEndorsementIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("S_UserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("StringValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecord");

                    b.HasIndex("LOP_P_ParameterListIdRecord");

                    b.HasIndex("LOP_P_ParameterTypeIdRecord");

                    b.HasIndex("M_RequestInformationIdRecord");

                    b.HasIndex("PT_P_OperandIdRecord");

                    b.HasIndex("P_ProcessEndorsementIdRecord");

                    b.HasIndex("S_UserIdRecord");

                    b.ToTable("M_ListOfParameter", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_AllApproveIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ExpertUserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RI_LastTimeModify")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_M_CurrentPEIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_NewDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RI_OldDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint");

                    b.Property<long?>("RI_ProcessStateIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestTypeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_SubRequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("RI_AllApproveIdRecord");

                    b.HasIndex("RI_CreatorIdRecord");

                    b.HasIndex("RI_ExpertUserIdRecord");

                    b.HasIndex("RI_M_CurrentPEIdRecord");

                    b.HasIndex("RI_ProcessStateIdRecord");

                    b.HasIndex("RI_RequestTitleIdRecord");

                    b.HasIndex("RI_RequestTypeIdRecord");

                    b.HasIndex("RI_RequestorIdRecord");

                    b.HasIndex("RI_SubRequestTitleIdRecord");

                    b.ToTable("M_RequestInformation", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_FieldType", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_FieldType", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_Operand", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_Operand", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterList", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<long?>("PL_P_ParameterTypeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("PL_P_ParameterTypeIdRecord");

                    b.ToTable("P_ParameterList", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterType", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PT_P_FieldTypeIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("PT_P_FieldTypeIdRecord");

                    b.ToTable("P_ParameterType", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_PositionOrg", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PSO_Default_LocationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSO_Independent_Location")
                        .HasColumnType("bit");

                    b.Property<long?>("P_ProcessEndorsementIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("PSO_Default_LocationIdRecord");

                    b.HasIndex("P_ProcessEndorsementIdRecord");

                    b.ToTable("P_PositionOrg", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Bool_P_FieldType")
                        .HasColumnType("bit");

                    b.Property<long?>("PSE_ExpertUserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_Int_P_FieldType")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit");

                    b.Property<long?>("PSE_ProcessStateIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit");

                    b.Property<string>("PSE_SubRequestTitles")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PSE_TaskName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit");

                    b.Property<string>("PSE_ValidOutput")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PSE_ValidUserAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("PSE_ExpertUserIdRecord");

                    b.HasIndex("PSE_ProcessStateIdRecord");

                    b.HasIndex("PSE_RequestTitleIdRecord");

                    b.ToTable("P_ProcessEndorsement", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessState", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_ProcessState", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestTitle", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit");

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit");

                    b.Property<string>("RT_ConditionOccur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit");

                    b.Property<string>("RT_OutputVar1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit");

                    b.HasKey("IdRecord");

                    b.ToTable("P_RequestTitle", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestType", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("SBT_RequestTitlesIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("SBT_RequestTitlesIdRecord");

                    b.ToTable("P_RequestType", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RolePosition", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UP_PositionOrgIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_RoleIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("UP_PositionOrgIdRecord");

                    b.HasIndex("UP_RoleIdRecord");

                    b.ToTable("P_RolePosition", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_SubRequestTitle", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("P_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("P_RequestTitleIdRecord");

                    b.ToTable("P_SubRequestTitle", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserAction", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UA_UserActionGroupIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("UA_UserActionGroupIdRecord");

                    b.ToTable("P_UserAction", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserActionGroup", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_UserActionGroup", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Area", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Area", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Location", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Location", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Role", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Role", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Skill", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Skill", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_User", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("User_Bool_P_FieldType")
                        .HasColumnType("bit");

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit");

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit");

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_Domain")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit");

                    b.Property<string>("User_FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("User_Int_P_FieldType")
                        .HasColumnType("bigint");

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("User_P_FieldTypeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("User_P_OperandIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("User_S_UserInformationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("User_UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("identityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRecord");

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_P_FieldTypeIdRecord");

                    b.HasIndex("User_P_OperandIdRecord");

                    b.HasIndex("User_S_UserInformationIdRecord");

                    b.HasIndex("identityUserId");

                    b.ToTable("S_User", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserArea", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UR_AreaIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UR_UserIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("UR_AreaIdRecord");

                    b.HasIndex("UR_UserIdRecord");

                    b.ToTable("S_UserArea", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserInformation", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit");

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit");

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)");

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_UserInformation", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserLocation", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("S_LocationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UL_RelatedUserLocationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UL_UserLocationIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("S_LocationIdRecord");

                    b.HasIndex("UL_RelatedUserLocationIdRecord");

                    b.HasIndex("UL_UserLocationIdRecord");

                    b.ToTable("S_UserLocation", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserRole", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UR_RoleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UR_UserIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("UR_RoleIdRecord");

                    b.HasIndex("UR_UserIdRecord");

                    b.ToTable("S_UserRole", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserSkill", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("P_PositionOrgIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("US_SkillIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("US_UserIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("P_PositionOrgIdRecord");

                    b.HasIndex("US_SkillIdRecord");

                    b.HasIndex("US_UserIdRecord");

                    b.ToTable("S_UserSkill", "Systems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.M_Approve", "Current_M_Approve")
                        .WithMany()
                        .HasForeignKey("Current_M_ApproveIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_Approve", "Last_M_Approve")
                        .WithMany()
                        .HasForeignKey("Last_M_ApproveIdRecord");

                    b.Navigation("Current_M_Approve");

                    b.Navigation("Last_M_Approve");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "APV_UserAction")
                        .WithMany()
                        .HasForeignKey("APV_UserActionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_AllApprove", null)
                        .WithMany("M_Approves")
                        .HasForeignKey("M_AllApproveIdRecord");

                    b.Navigation("APV_UserAction");

                    b.Navigation("APV_UserInCharge");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.M_Approve", null)
                        .WithMany("APV_M_Attachment")
                        .HasForeignKey("M_ApproveIdRecord");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CurrentPE", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", "CPE_ProcessEndorsements")
                        .WithMany()
                        .HasForeignKey("CPE_ProcessEndorsementsIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "CPE_UserAction")
                        .WithMany()
                        .HasForeignKey("CPE_UserActionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "CPE_User")
                        .WithMany()
                        .HasForeignKey("CPE_UserIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_RequestInformation", null)
                        .WithMany("RI_M_CurrentPEs")
                        .HasForeignKey("M_RequestInformationIdRecord");

                    b.Navigation("CPE_ProcessEndorsements");

                    b.Navigation("CPE_User");

                    b.Navigation("CPE_UserAction");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterList", "LOP_P_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_P_ParameterListIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterType", "LOP_P_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_P_ParameterTypeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_RequestInformation", null)
                        .WithMany("RI_M_ListOfParameters")
                        .HasForeignKey("M_RequestInformationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_Operand", "PT_P_Operand")
                        .WithMany()
                        .HasForeignKey("PT_P_OperandIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", null)
                        .WithMany("PSE_M_ListOfParameter")
                        .HasForeignKey("P_ProcessEndorsementIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", null)
                        .WithMany("User_M_ListOfParameter")
                        .HasForeignKey("S_UserIdRecord");

                    b.Navigation("LOP_P_ParameterList");

                    b.Navigation("LOP_P_ParameterType");

                    b.Navigation("PT_P_Operand");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.M_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_CurrentPE", "RI_M_CurrentPE")
                        .WithMany()
                        .HasForeignKey("RI_M_CurrentPEIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestType", "RI_RequestType")
                        .WithMany()
                        .HasForeignKey("RI_RequestTypeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_SubRequestTitle", "RI_SubRequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_SubRequestTitleIdRecord");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_M_CurrentPE");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_RequestType");

                    b.Navigation("RI_Requestor");

                    b.Navigation("RI_SubRequestTitle");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterType", "PL_P_ParameterType")
                        .WithMany("PT_P_ParameterList")
                        .HasForeignKey("PL_P_ParameterTypeIdRecord");

                    b.Navigation("PL_P_ParameterType");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeIdRecord");

                    b.Navigation("PT_P_FieldType");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_PositionOrg", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Location", "PSO_Default_Location")
                        .WithMany()
                        .HasForeignKey("PSO_Default_LocationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", null)
                        .WithMany("PSE_PON")
                        .HasForeignKey("P_ProcessEndorsementIdRecord");

                    b.Navigation("PSO_Default_Location");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessState", "PSE_ProcessState")
                        .WithMany()
                        .HasForeignKey("PSE_ProcessStateIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "PSE_RequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_RequestTitleIdRecord");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("PSE_ProcessState");

                    b.Navigation("PSE_RequestTitle");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "SBT_RequestTitles")
                        .WithMany()
                        .HasForeignKey("SBT_RequestTitlesIdRecord");

                    b.Navigation("SBT_RequestTitles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_PositionOrg", "UP_PositionOrg")
                        .WithMany("PSO_P_RolePositions")
                        .HasForeignKey("UP_PositionOrgIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("UP_RoleIdRecord");

                    b.Navigation("UP_PositionOrg");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_SubRequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", null)
                        .WithMany("RT_P_SubRequestTitle")
                        .HasForeignKey("P_RequestTitleIdRecord");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserAction", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserActionGroup", "UA_UserActionGroup")
                        .WithMany()
                        .HasForeignKey("UA_UserActionGroupIdRecord");

                    b.Navigation("UA_UserActionGroup");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_FieldType", "User_P_FieldType")
                        .WithMany()
                        .HasForeignKey("User_P_FieldTypeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_Operand", "User_P_Operand")
                        .WithMany()
                        .HasForeignKey("User_P_OperandIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_UserInformation", "User_S_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_S_UserInformationIdRecord");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "identityUser")
                        .WithMany()
                        .HasForeignKey("identityUserId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_P_FieldType");

                    b.Navigation("User_P_Operand");

                    b.Navigation("User_S_UserInformation");

                    b.Navigation("identityUser");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Area", "UR_Area")
                        .WithMany("Area_S_UserAreas")
                        .HasForeignKey("UR_AreaIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "UR_User")
                        .WithMany("User_S_UserAreas")
                        .HasForeignKey("UR_UserIdRecord");

                    b.Navigation("UR_Area");

                    b.Navigation("UR_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Location", "S_Location")
                        .WithMany("S_UserLocation")
                        .HasForeignKey("S_LocationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "UL_RelatedUserLocation")
                        .WithMany("User_Related_S_UserLocations")
                        .HasForeignKey("UL_RelatedUserLocationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "UL_UserLocation")
                        .WithMany("S_UserLocations")
                        .HasForeignKey("UL_UserLocationIdRecord");

                    b.Navigation("S_Location");

                    b.Navigation("UL_RelatedUserLocation");

                    b.Navigation("UL_UserLocation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserRole", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Role", "UR_Role")
                        .WithMany("S_UserRoles")
                        .HasForeignKey("UR_RoleIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "UR_User")
                        .WithMany("User_S_UserRoles")
                        .HasForeignKey("UR_UserIdRecord");

                    b.Navigation("UR_Role");

                    b.Navigation("UR_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_UserSkill", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_PositionOrg", null)
                        .WithMany("PSO_S_UserSkills")
                        .HasForeignKey("P_PositionOrgIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Skill", "US_Skill")
                        .WithMany("S_UserSkills")
                        .HasForeignKey("US_SkillIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "US_User")
                        .WithMany()
                        .HasForeignKey("US_UserIdRecord");

                    b.Navigation("US_Skill");

                    b.Navigation("US_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_AllApprove", b =>
                {
                    b.Navigation("M_Approves");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.Navigation("APV_M_Attachment");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.Navigation("RI_M_CurrentPEs");

                    b.Navigation("RI_M_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterType", b =>
                {
                    b.Navigation("PT_P_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_PositionOrg", b =>
                {
                    b.Navigation("PSO_P_RolePositions");

                    b.Navigation("PSO_S_UserSkills");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", b =>
                {
                    b.Navigation("PSE_M_ListOfParameter");

                    b.Navigation("PSE_PON");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestTitle", b =>
                {
                    b.Navigation("RT_P_SubRequestTitle");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Area", b =>
                {
                    b.Navigation("Area_S_UserAreas");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Location", b =>
                {
                    b.Navigation("S_UserLocation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Role", b =>
                {
                    b.Navigation("S_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Skill", b =>
                {
                    b.Navigation("S_UserSkills");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_User", b =>
                {
                    b.Navigation("S_UserLocations");

                    b.Navigation("User_M_ListOfParameter");

                    b.Navigation("User_Related_S_UserLocations");

                    b.Navigation("User_S_UserAreas");

                    b.Navigation("User_S_UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230408111037_Change_DB")]
    partial class Change_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Area_UnitTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("Area_UnitTypeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Area", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Area_UnitTypeId = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4904),
                            DsblRecord = false,
                            GuidRecord = new Guid("24747454-0e71-4233-b1fd-33fb9bc684fe"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4911),
                            PCode = 1L,
                            PDisplayName = "فروش دارویی",
                            PIndex = 1L,
                            PName = "DrugSale"
                        },
                        new
                        {
                            Id = 2L,
                            Area_UnitTypeId = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4920),
                            DsblRecord = false,
                            GuidRecord = new Guid("420c5667-42e7-4541-9e84-fc2013220e47"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4923),
                            PCode = 2L,
                            PDisplayName = "فروش مصرفی",
                            PIndex = 2L,
                            PName = "FMCGSale"
                        },
                        new
                        {
                            Id = 3L,
                            Area_UnitTypeId = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4952),
                            DsblRecord = false,
                            GuidRecord = new Guid("4762f0a4-6780-4b8c-8970-926a8567634e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4955),
                            PCode = 3L,
                            PDisplayName = "حسابداری خرید",
                            PIndex = 3L,
                            PName = "PurchaseAccounting"
                        },
                        new
                        {
                            Id = 4L,
                            Area_UnitTypeId = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4961),
                            DsblRecord = false,
                            GuidRecord = new Guid("a5d48bf7-7a2b-4ff0-b621-4540a821812d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4963),
                            PCode = 4L,
                            PDisplayName = "حسابداری فروش",
                            PIndex = 4L,
                            PName = "SaleAccounting"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5883),
                            DsblRecord = false,
                            GuidRecord = new Guid("d40cb603-f537-4394-b60a-24a0258691e2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5886),
                            PCode = 1L,
                            PDisplayName = "واحدها(Dimentions)",
                            PIndex = 1L,
                            PName = "D_Area"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6118),
                            DsblRecord = false,
                            GuidRecord = new Guid("18da25be-11dd-4305-9c91-5f901cc69581"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6122),
                            PCode = 2L,
                            PDisplayName = "نوع فیلد(Dimentions)",
                            PIndex = 2L,
                            PName = "D_FieldType"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6137),
                            DsblRecord = false,
                            GuidRecord = new Guid("8419adae-daf5-4c06-9aa2-fb75cfce0377"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6140),
                            PCode = 3L,
                            PDisplayName = "موقعیت ها(Dimentions)",
                            PIndex = 3L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6151),
                            DsblRecord = false,
                            GuidRecord = new Guid("07696eee-7697-421d-8669-f1a9c70d9764"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6153),
                            PCode = 4L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 4L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6163),
                            DsblRecord = false,
                            GuidRecord = new Guid("1263b2e1-723e-4365-9cd5-789bf7cbcb4f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6166),
                            PCode = 5L,
                            PDisplayName = "لیست پارامترها(Dimentions)",
                            PIndex = 5L,
                            PName = "D_ParameterList"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6175),
                            DsblRecord = false,
                            GuidRecord = new Guid("5bb940c4-df22-4b41-8eb9-46cf02b5e044"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6178),
                            PCode = 6L,
                            PDisplayName = "نوع پارامتر(Dimentions)",
                            PIndex = 6L,
                            PName = "D_ParameterType"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6188),
                            DsblRecord = false,
                            GuidRecord = new Guid("810c854d-aae6-4c7f-b60e-52fc82420ceb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6191),
                            PCode = 7L,
                            PDisplayName = "سمت ها(Dimentions)",
                            PIndex = 7L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 8L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6207),
                            DsblRecord = false,
                            GuidRecord = new Guid("61003fcb-3b51-4e24-b7d3-c38965efc5cf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6210),
                            PCode = 8L,
                            PDisplayName = "تاییدات فرآیندی(Dimentions)",
                            PIndex = 8L,
                            PName = "D_ProcessEndorsement"
                        },
                        new
                        {
                            Id = 9L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6220),
                            DsblRecord = false,
                            GuidRecord = new Guid("90f4d122-904d-4d5f-9aef-8ecb1179d122"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6224),
                            PCode = 9L,
                            PDisplayName = "وضعیت فرآیند(Dimentions)",
                            PIndex = 9L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 10L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6233),
                            DsblRecord = false,
                            GuidRecord = new Guid("149e5343-843e-47ba-89ce-caf765275247"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6236),
                            PCode = 10L,
                            PDisplayName = "عنوان درخواست(Dimentions)",
                            PIndex = 10L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 11L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6247),
                            DsblRecord = false,
                            GuidRecord = new Guid("629c47e6-d74a-4d33-9e5d-1f6f0b41c0a2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6250),
                            PCode = 11L,
                            PDisplayName = "نقش ها(Dimentions)",
                            PIndex = 11L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 12L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6259),
                            DsblRecord = false,
                            GuidRecord = new Guid("cc50808d-75e9-490a-b134-3fc8dae0b85e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6262),
                            PCode = 12L,
                            PDisplayName = "حرفه ها(Dimentions)",
                            PIndex = 12L,
                            PName = "D_Skill"
                        },
                        new
                        {
                            Id = 13L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6271),
                            DsblRecord = false,
                            GuidRecord = new Guid("c2d1135d-de75-457c-a7bf-2758210b82ca"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6274),
                            PCode = 13L,
                            PDisplayName = "زیرعنوان(Dimentions)",
                            PIndex = 13L,
                            PName = "D_SubRequestTitle"
                        },
                        new
                        {
                            Id = 14L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6283),
                            DsblRecord = false,
                            GuidRecord = new Guid("48b34b08-61a2-4429-9026-221c82d94966"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6286),
                            PCode = 14L,
                            PDisplayName = "نوع واحد(Dimentions)",
                            PIndex = 14L,
                            PName = "D_UnitType"
                        },
                        new
                        {
                            Id = 15L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6304),
                            DsblRecord = false,
                            GuidRecord = new Guid("731a3df7-c850-41a1-b8b4-bfc41ee7a663"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6307),
                            PCode = 15L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 15L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 16L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6329),
                            DsblRecord = false,
                            GuidRecord = new Guid("0cf045b9-a26b-45e3-acb4-87d76818f887"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6332),
                            PCode = 16L,
                            PDisplayName = "تاییدها(Facts)",
                            PIndex = 16L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 17L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6341),
                            DsblRecord = false,
                            GuidRecord = new Guid("9aed5c42-dda6-47b7-8d53-3317dd551df8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6344),
                            PCode = 17L,
                            PDisplayName = "تایید(Facts)",
                            PIndex = 17L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 18L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6352),
                            DsblRecord = false,
                            GuidRecord = new Guid("b32c53b3-dfdc-41a9-a256-f2ccf48aca79"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6355),
                            PCode = 18L,
                            PDisplayName = "ضمیمه ها(Facts)",
                            PIndex = 18L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 19L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6364),
                            DsblRecord = false,
                            GuidRecord = new Guid("39b54d15-2585-4baf-bbb5-333113e0c3cf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6367),
                            PCode = 19L,
                            PDisplayName = "لیست سمت ها(Facts)",
                            PIndex = 19L,
                            PName = "F_EndorsementPosition"
                        },
                        new
                        {
                            Id = 20L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6376),
                            DsblRecord = false,
                            GuidRecord = new Guid("5cce1d45-7423-4b44-8d01-c3a61badc6cb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6379),
                            PCode = 20L,
                            PDisplayName = "لیست پارامترها(Facts)",
                            PIndex = 20L,
                            PName = "F_ListOfParameter"
                        },
                        new
                        {
                            Id = 21L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6388),
                            DsblRecord = false,
                            GuidRecord = new Guid("baec47e8-1368-4882-9d5b-24d6b30fdf5d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6391),
                            PCode = 21L,
                            PDisplayName = "اطلاعات درخواست ها(Facts)",
                            PIndex = 21L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 22L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6630),
                            DsblRecord = false,
                            GuidRecord = new Guid("39a62427-c95d-4af2-a67d-4491746fe210"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6641),
                            PCode = 22L,
                            PDisplayName = "اطلاعات کاربران(Facts)",
                            PIndex = 22L,
                            PName = "F_UserInformation"
                        },
                        new
                        {
                            Id = 23L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6657),
                            DsblRecord = false,
                            GuidRecord = new Guid("9715d98a-4959-4f6d-92d5-450b6e366af1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6660),
                            PCode = 23L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 23L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 24L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6675),
                            DsblRecord = false,
                            GuidRecord = new Guid("865b0e40-08e6-4e9f-9747-cc6944b7ab89"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6678),
                            PCode = 24L,
                            PDisplayName = "کاربر-واحدها(Links)",
                            PIndex = 24L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 25L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6687),
                            DsblRecord = false,
                            GuidRecord = new Guid("8a9020d2-a627-456e-9dae-cc2c9ad12afe"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6690),
                            PCode = 25L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 25L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 26L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6700),
                            DsblRecord = false,
                            GuidRecord = new Guid("bf515837-309b-41a5-ab47-22f648d5c9da"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6703),
                            PCode = 26L,
                            PDisplayName = "کاربر-موقعیت‌های مرتبط(Links)",
                            PIndex = 26L,
                            PName = "L_UserRelatedLocation"
                        },
                        new
                        {
                            Id = 27L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6713),
                            DsblRecord = false,
                            GuidRecord = new Guid("d7fef6dc-bf8b-4ab1-a298-83513ed14f0f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6715),
                            PCode = 27L,
                            PDisplayName = "کاربر-نقش(Links)",
                            PIndex = 27L,
                            PName = "L_UserRole"
                        },
                        new
                        {
                            Id = 28L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6724),
                            DsblRecord = false,
                            GuidRecord = new Guid("f82cebdf-dc2b-4fdf-bd57-64d436610b1d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(6727),
                            PCode = 28L,
                            PDisplayName = "کاربر-حرفه(Links)",
                            PIndex = 28L,
                            PName = "L_UserSkill"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_FieldType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5099),
                            DsblRecord = false,
                            GuidRecord = new Guid("6175ecf9-d56d-4045-888f-d16a01284e21"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5102),
                            PCode = 1L,
                            PDisplayName = "پارامتریک",
                            PIndex = 1L,
                            PName = "Parameter"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5108),
                            DsblRecord = false,
                            GuidRecord = new Guid("670240d5-e66d-43b8-8bf3-35c1875940e2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5110),
                            PCode = 2L,
                            PDisplayName = "عددی",
                            PIndex = 2L,
                            PName = "Number"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5115),
                            DsblRecord = false,
                            GuidRecord = new Guid("cd2c5e07-4a6e-41a2-82ea-38643309abdd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5118),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5127),
                            DsblRecord = false,
                            GuidRecord = new Guid("32cba0e9-9df2-48a8-b761-de0ff81e7154"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5129),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5012),
                            DsblRecord = false,
                            GuidRecord = new Guid("d0f0d642-41ae-4de2-af92-568aee45dbe1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5044),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5052),
                            DsblRecord = false,
                            GuidRecord = new Guid("934cecec-edf3-48eb-9b5d-3d24a9f8016b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5054),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5059),
                            DsblRecord = false,
                            GuidRecord = new Guid("149a0613-140a-4427-b7f1-69c1fa2788c0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5062),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5164),
                            DsblRecord = false,
                            GuidRecord = new Guid("dc940afb-7c02-4cf5-a73e-dc4b911541c2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5180),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5284),
                            DsblRecord = false,
                            GuidRecord = new Guid("6f8776fd-c52f-49f2-b5e2-472fbab3f8e4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5287),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5293),
                            DsblRecord = false,
                            GuidRecord = new Guid("d5ee53af-17d2-4d9a-8c93-4dbd2c22fc2b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5296),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5301),
                            DsblRecord = false,
                            GuidRecord = new Guid("30c9a08e-09b9-4040-9af9-f8ee63fc13fe"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5303),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5308),
                            DsblRecord = false,
                            GuidRecord = new Guid("a30472b5-3edd-4bd2-bdec-cce0a45d1dc1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5311),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5316),
                            DsblRecord = false,
                            GuidRecord = new Guid("5e729bca-fabe-4a13-b325-65dc2a8c9871"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5318),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("PL_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PL_ParameterTypeId");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterList", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_P_FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_P_FieldTypeId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5361),
                            DsblRecord = false,
                            GuidRecord = new Guid("ee5e9374-11e0-4cde-bc1b-c6f18d8b03b1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5364),
                            PCode = 1L,
                            PDisplayName = "سهم دیگران",
                            PIndex = 1L,
                            PName = "OthersShare"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5374),
                            DsblRecord = false,
                            GuidRecord = new Guid("73876be5-0006-4ca4-83ba-bad23d50c7e3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5377),
                            PCode = 2L,
                            PDisplayName = "سهم شرکت",
                            PIndex = 2L,
                            PName = "OursShare"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5382),
                            DsblRecord = false,
                            GuidRecord = new Guid("1d104f77-bee6-4b33-9592-5f6174f46ec8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5384),
                            PCode = 3L,
                            PDisplayName = "نوع واحد مرتبط",
                            PIndex = 3L,
                            PName = "AreaType"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5389),
                            DsblRecord = false,
                            GuidRecord = new Guid("0a795761-b3f0-43df-a71f-0b6ae4494caf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5392),
                            PCode = 4L,
                            PDisplayName = "ستاد",
                            PIndex = 4L,
                            PName = "Staff"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5397),
                            DsblRecord = false,
                            GuidRecord = new Guid("e6037e40-ee4e-437a-82f4-72a083429ee4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5399),
                            PCode = 5L,
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 5L,
                            PName = "Refrigerator"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5404),
                            DsblRecord = false,
                            GuidRecord = new Guid("d2f9ae1c-f5a0-49d5-91df-92b855458c93"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5407),
                            PCode = 6L,
                            PDisplayName = "مبلغ",
                            PIndex = 6L,
                            PName = "Price"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5412),
                            DsblRecord = false,
                            GuidRecord = new Guid("37dcf670-a3b8-4345-afdb-ae063d60d8e6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5415),
                            PCode = 7L,
                            PDisplayName = "متغیر فرآیندی",
                            PIndex = 7L,
                            PName = "ProcessVar"
                        },
                        new
                        {
                            Id = 8L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5420),
                            DsblRecord = false,
                            GuidRecord = new Guid("3e92c48a-f017-4cc1-a083-19e743707519"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5423),
                            PCode = 8L,
                            PDisplayName = "متغییر ورودی",
                            PIndex = 8L,
                            PName = "InputVar"
                        },
                        new
                        {
                            Id = 9L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5428),
                            DsblRecord = false,
                            GuidRecord = new Guid("31ee6e0b-cc54-4c21-aafe-e1c555badb7b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5430),
                            PCode = 9L,
                            PDisplayName = "متغییر خروجی",
                            PIndex = 9L,
                            PName = "OutputVar"
                        },
                        new
                        {
                            Id = 10L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5439),
                            DsblRecord = false,
                            GuidRecord = new Guid("4a76e5b5-0ad3-4b0f-b271-5311b3441802"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5442),
                            PCode = 10L,
                            PDisplayName = "اقدام های فرآیندی",
                            PIndex = 10L,
                            PName = "ProcessAction"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool>("PSO_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSO_Independent")
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5780),
                            DsblRecord = false,
                            GuidRecord = new Guid("7299df42-6de0-4a43-a23c-7305ae8af2c1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5783),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5791),
                            DsblRecord = false,
                            GuidRecord = new Guid("c0503a9b-8e1c-43dd-b117-399e0af71185"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5793),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5799),
                            DsblRecord = false,
                            GuidRecord = new Guid("4ecb09a4-95d4-4129-89ad-d6d27c688db0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5801),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5807),
                            DsblRecord = false,
                            GuidRecord = new Guid("8ac21161-7da6-405e-bd61-a6b1cac87e6f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5809),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5815),
                            DsblRecord = false,
                            GuidRecord = new Guid("2c510408-b190-434a-8007-12dd9b664d01"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5817),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5824),
                            DsblRecord = false,
                            GuidRecord = new Guid("da5f2f53-3b4e-451c-9193-b0e841890b32"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5827),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist",
                            PSO_Independent = true
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5836),
                            DsblRecord = false,
                            GuidRecord = new Guid("f4662974-ce84-45eb-a196-05a42ba25429"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5838),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager",
                            PSO_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("PSE_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("PSE_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<long?>("PSE_SubRequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSE_ExpertUserId");

                    b.HasIndex("PSE_ProcessStateId");

                    b.HasIndex("PSE_RequestTitleId");

                    b.HasIndex("PSE_SubRequestTitleId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessEndorsement", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_RequestTitle", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5685),
                            DsblRecord = false,
                            GuidRecord = new Guid("5ea3540d-8f70-437e-8854-e0bbd8a0e52d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5688),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5694),
                            DsblRecord = false,
                            GuidRecord = new Guid("16fe2d82-541b-4c25-b80f-fe27f4fed95f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5696),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5702),
                            DsblRecord = false,
                            GuidRecord = new Guid("80a53490-d670-4c39-850d-389a393d98be"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5704),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5713),
                            DsblRecord = false,
                            GuidRecord = new Guid("4d8a4db5-12ff-482e-b3fe-f80ea7253f07"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5715),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5721),
                            DsblRecord = false,
                            GuidRecord = new Guid("01e92d75-b372-4403-8103-6d70f2b615be"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5723),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Skill", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UnitType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4331),
                            DsblRecord = false,
                            GuidRecord = new Guid("27ae765d-98c8-41ca-9a45-20cbde0c7691"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4413),
                            PCode = 1L,
                            PDisplayName = "دارویی",
                            PIndex = 1L,
                            PName = "Med"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4479),
                            DsblRecord = false,
                            GuidRecord = new Guid("2babc751-ab36-497f-b8e1-50b61b6b4af2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4482),
                            PCode = 2L,
                            PDisplayName = "مصرفی",
                            PIndex = 2L,
                            PName = "FMCG"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4488),
                            DsblRecord = false,
                            GuidRecord = new Guid("c318e76f-4bee-4e56-858a-2927284b18be"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(4497),
                            PCode = 3L,
                            PDisplayName = "کل",
                            PIndex = 3L,
                            PName = "General"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5568),
                            DsblRecord = false,
                            GuidRecord = new Guid("3851c92f-10d4-4314-a584-5f7bdc846459"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5571),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5580),
                            DsblRecord = false,
                            GuidRecord = new Guid("922eb61e-dea4-48e6-bf77-1394190d3dd8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5582),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UP_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UP_ProcessEndorsementId");

                    b.HasIndex("UP_RoleId");

                    b.ToTable("F_EndorsementPosition", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_UserInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserArea", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5634),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("95507873-47d6-4b81-85e3-6398e1d3b73b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5637),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5644),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("7fe82c02-b566-4fce-9d9a-fb3b02824912"),
                            LastUpdatedRecord = new DateTime(2023, 4, 8, 15, 40, 36, 554, DateTimeKind.Local).AddTicks(5646),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_PositionId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRole", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRelatedLocation", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserSkill", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_ProcessEndorsementId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("LOP_BooleanValue")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<float?>("LOP_FloatValue")
                        .HasColumnType("real")
                        .HasColumnOrder(100);

                    b.Property<long?>("LOP_ParameterListId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOP_StringValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_OperandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_ProcessEndorsementId");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LOP_ParameterListId");

                    b.HasIndex("LOP_ParameterTypeId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_OperandId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_ListOfParameter", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("RI_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ExpertUserId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_RequestTitleId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_SubRequestTitle", "Dimentions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_UnitType", "Area_UnitType")
                        .WithMany("UT_Areas")
                        .HasForeignKey("Area_UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Area_UnitType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "PL_ParameterType")
                        .WithMany("PT_ParameterList")
                        .HasForeignKey("PL_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PL_ParameterType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PT_P_FieldType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "PSE_ProcessState")
                        .WithMany()
                        .HasForeignKey("PSE_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "PSE_RequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Parameters.D_SubRequestTitle", "PSE_SubRequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_SubRequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("PSE_ProcessState");

                    b.Navigation("PSE_RequestTitle");

                    b.Navigation("PSE_SubRequestTitle");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Skill", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_UnitType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "UP_ProcessEndorsement")
                        .WithMany("PSE_EndorsementPosition")
                        .HasForeignKey("UP_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("UP_RoleId");

                    b.Navigation("ParentId");

                    b.Navigation("UP_ProcessEndorsement");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAreas")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "UA_Area")
                        .WithMany("Area_UserAreas")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Area");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", null)
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("D_PositionId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Role");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_Related_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_RelatedLocation")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_RelatedLocation");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserSkill", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "US_User")
                        .WithMany()
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Skill", "US_Skill")
                        .WithMany("SKL_UserSkills")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("US_Skill");

                    b.Navigation("US_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "APV_ProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("APV_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_ProcessEndorsement");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", null)
                        .WithMany("PSE_ListOfParameter")
                        .HasForeignKey("D_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", null)
                        .WithMany("User_ListOfParameters")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_RequestInformation", null)
                        .WithMany("RI_ListOfParameters")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "LOP_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterListId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "LOP_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "PT_Operand")
                        .WithMany()
                        .HasForeignKey("PT_OperandId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_ListOfParameter", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("LOP_ParameterList");

                    b.Navigation("LOP_ParameterType");

                    b.Navigation("PT_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", null)
                        .WithMany("RT_SubRequestTitles")
                        .HasForeignKey("D_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Parameters.D_SubRequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Navigation("Area_UserAreas");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PT_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSE_EndorsementPosition");

                    b.Navigation("PSE_ListOfParameter");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RT_SubRequestTitles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("SKL_UserSkills");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("UT_Areas");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_ListOfParameters");

                    b.Navigation("User_Related_UserLocations");

                    b.Navigation("User_UserAreas");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

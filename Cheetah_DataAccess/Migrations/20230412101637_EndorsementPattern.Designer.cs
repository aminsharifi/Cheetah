// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230412101637_EndorsementPattern")]
    partial class EndorsementPattern
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Area", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(8968),
                            DsblRecord = false,
                            GuidRecord = new Guid("dc347abe-3b35-47be-b540-0f7a1c1d588c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9074),
                            PCode = 1L,
                            PDisplayName = "فروش دارویی",
                            PIndex = 1L,
                            PName = "DrugSale"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9166),
                            DsblRecord = false,
                            GuidRecord = new Guid("0f97e3e1-95f7-46b8-984a-2f651d33fff7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9182),
                            PCode = 2L,
                            PDisplayName = "فروش مصرفی",
                            PIndex = 2L,
                            PName = "FMCGSale"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9198),
                            DsblRecord = false,
                            GuidRecord = new Guid("50c50ea1-12ca-48e0-9374-e8546264c463"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9233),
                            PCode = 3L,
                            PDisplayName = "حسابداری خرید",
                            PIndex = 3L,
                            PName = "PurchaseAccounting"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9256),
                            DsblRecord = false,
                            GuidRecord = new Guid("506fbe02-4664-4723-b9eb-ec458cfb7a9c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 463, DateTimeKind.Local).AddTicks(9260),
                            PCode = 4L,
                            PDisplayName = "حسابداری فروش",
                            PIndex = 4L,
                            PName = "SaleAccounting"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_EndorsementPattern", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(523),
                            DsblRecord = false,
                            GuidRecord = new Guid("e1001fb9-7b11-4ecd-a7ba-a62bfc427993"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(554),
                            PCode = 1L,
                            PDisplayName = "الگوی یک",
                            PIndex = 1L,
                            PName = "Pattern1"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(609),
                            DsblRecord = false,
                            GuidRecord = new Guid("5849051c-a884-4cf0-8a57-6a9efab921c4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(613),
                            PCode = 2L,
                            PDisplayName = "الگوی دو",
                            PIndex = 2L,
                            PName = "Pattern2"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(621),
                            DsblRecord = false,
                            GuidRecord = new Guid("797bff19-7c53-4b56-b4d2-d3b15c123d22"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(625),
                            PCode = 3L,
                            PDisplayName = "الگوی سه",
                            PIndex = 3L,
                            PName = "Pattern3"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2195),
                            DsblRecord = false,
                            GuidRecord = new Guid("e12a78a3-8d71-4d5c-9219-129a02f60d00"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2198),
                            PCode = 100L,
                            PDisplayName = "واحدها(Dimentions)",
                            PIndex = 100L,
                            PName = "D_Area"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2584),
                            DsblRecord = false,
                            GuidRecord = new Guid("0dce6928-57a4-48e5-b398-a89af9076c36"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2590),
                            PCode = 101L,
                            PDisplayName = "نوع فیلدها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_FieldType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2614),
                            DsblRecord = false,
                            GuidRecord = new Guid("3f3df689-8946-4f92-9cc4-d619e6adf8b0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2616),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2626),
                            DsblRecord = false,
                            GuidRecord = new Guid("7c9d698b-c532-45b2-a9c3-1abb64e869f7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2629),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2641),
                            DsblRecord = false,
                            GuidRecord = new Guid("c852963a-db86-44f6-a7dc-c7f11238892e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2643),
                            PCode = 104L,
                            PDisplayName = "لیست پارامترها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_ParameterList"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2653),
                            DsblRecord = false,
                            GuidRecord = new Guid("0327c4b6-b3ef-425f-8354-845fbf70bccf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2656),
                            PCode = 105L,
                            PDisplayName = "نوع‌های پارامتر(Dimentions)",
                            PIndex = 105L,
                            PName = "D_ParameterType"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2677),
                            DsblRecord = false,
                            GuidRecord = new Guid("5c8639d6-3346-478c-9f14-53a2bd78a0f0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2680),
                            PCode = 106L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2690),
                            DsblRecord = false,
                            GuidRecord = new Guid("8922e7c6-4cda-4f0f-bb02-61ae6ad9bcce"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2692),
                            PCode = 107L,
                            PDisplayName = "تاییدهای فرآیندی(Dimentions)",
                            PIndex = 107L,
                            PName = "D_ProcessEndorsement"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2702),
                            DsblRecord = false,
                            GuidRecord = new Guid("76370b08-64c6-41d6-a285-ea6e5082670f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2705),
                            PCode = 108L,
                            PDisplayName = "وضعیت فرآیند(Dimentions)",
                            PIndex = 108L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2714),
                            DsblRecord = false,
                            GuidRecord = new Guid("8b377ff7-eea0-455d-abfa-a7dd03b4d9d0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2717),
                            PCode = 109L,
                            PDisplayName = "عنوان درخواست(Dimentions)",
                            PIndex = 109L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 110L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2729),
                            DsblRecord = false,
                            GuidRecord = new Guid("ceea188c-2db9-44bd-b67b-a190f8fbe0bb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2732),
                            PCode = 110L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 110L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 111L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2742),
                            DsblRecord = false,
                            GuidRecord = new Guid("a8d91327-d708-49f1-b31a-aeae3d338745"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2745),
                            PCode = 111L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 111L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2757),
                            DsblRecord = false,
                            GuidRecord = new Guid("b65aaafd-33eb-45ad-8689-ec9ead8c2240"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2759),
                            PCode = 112L,
                            PDisplayName = "الگوهای تایید(Dimentions)",
                            PIndex = 112L,
                            PName = "D_EndorsementPattern"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2769),
                            DsblRecord = false,
                            GuidRecord = new Guid("4a78a4d7-e2f1-49ff-92c7-41538e73d055"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2772),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2782),
                            DsblRecord = false,
                            GuidRecord = new Guid("32a33e1f-bb8e-4bdc-9a10-b89f15ca381f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2785),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2806),
                            DsblRecord = false,
                            GuidRecord = new Guid("936eca65-adad-4cf6-ad08-48e5916049f2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2809),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2819),
                            DsblRecord = false,
                            GuidRecord = new Guid("fec22c56-05cf-4f54-94ae-4d9bd6f918ab"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2822),
                            PCode = 203L,
                            PDisplayName = "اختصاص نقش‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2832),
                            DsblRecord = false,
                            GuidRecord = new Guid("95d86378-4710-4c46-8ecc-4e24205937bd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2834),
                            PCode = 204L,
                            PDisplayName = "لیست پارامترها(Facts)",
                            PIndex = 204L,
                            PName = "F_ListOfParameter"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2847),
                            DsblRecord = false,
                            GuidRecord = new Guid("c4f57b84-5a59-48f4-9eb8-4c68f8548fdc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2850),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2860),
                            DsblRecord = false,
                            GuidRecord = new Guid("23f124f3-22df-4b14-a0a5-6b7965cf0267"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2863),
                            PCode = 206L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 206L,
                            PName = "F_UserInformation"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2874),
                            DsblRecord = false,
                            GuidRecord = new Guid("e59870cf-a12a-40f0-bfff-c8a26f0dc676"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2877),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2896),
                            DsblRecord = false,
                            GuidRecord = new Guid("781016fa-ebfd-4b75-8bcb-90cf020a5f9d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2899),
                            PCode = 301L,
                            PDisplayName = "کاربر-واحد(Links)",
                            PIndex = 301L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2910),
                            DsblRecord = false,
                            GuidRecord = new Guid("48b6d65a-6e5c-4424-902f-11aab67842eb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2913),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2923),
                            DsblRecord = false,
                            GuidRecord = new Guid("ed3fcefe-0bda-4512-952d-8be6f6732468"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2925),
                            PCode = 303L,
                            PDisplayName = "کاربر-موقعیت مرتبط(Links)",
                            PIndex = 303L,
                            PName = "L_UserRelatedLocation"
                        },
                        new
                        {
                            Id = 304L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2935),
                            DsblRecord = false,
                            GuidRecord = new Guid("eb4087f2-70ba-48d3-b522-112522b10d6a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2937),
                            PCode = 304L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 304L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_FieldType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1260),
                            DsblRecord = false,
                            GuidRecord = new Guid("3c28f1a9-fb73-4ff3-9d2b-afda1f85c037"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1266),
                            PCode = 1L,
                            PDisplayName = "پارامتریک",
                            PIndex = 1L,
                            PName = "Parametric"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1274),
                            DsblRecord = false,
                            GuidRecord = new Guid("5bcd8044-beb9-49db-bc0e-43d369bc20b6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1277),
                            PCode = 2L,
                            PDisplayName = "عددی",
                            PIndex = 2L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1284),
                            DsblRecord = false,
                            GuidRecord = new Guid("2c0df146-79cd-4797-ab71-ef04548b660c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1287),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1300),
                            DsblRecord = false,
                            GuidRecord = new Guid("0b2eb987-7d0f-4d05-b890-18a004f22cb4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1304),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1311),
                            DsblRecord = false,
                            GuidRecord = new Guid("a9b215f2-9674-47b3-a301-6dcb2634bfa2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1314),
                            PCode = 5L,
                            PDisplayName = "دودویی",
                            PIndex = 5L,
                            PName = "Boolean"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1024),
                            DsblRecord = false,
                            GuidRecord = new Guid("09c71890-dc74-432f-897a-e49cad68fd45"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1035),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1191),
                            DsblRecord = false,
                            GuidRecord = new Guid("f6768a92-3e14-4863-a627-e22659a2a598"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1196),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1204),
                            DsblRecord = false,
                            GuidRecord = new Guid("a372215b-4de1-434c-bc01-6a9e61a7d5b4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1209),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1372),
                            DsblRecord = false,
                            GuidRecord = new Guid("add87c31-7a8b-4af6-8208-19bb0f8b6959"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1376),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1385),
                            DsblRecord = false,
                            GuidRecord = new Guid("8f2cc5bd-3a03-430b-8add-860476401a80"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1389),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1395),
                            DsblRecord = false,
                            GuidRecord = new Guid("194a5415-db67-4649-a331-540c9af9d5d4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1399),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1410),
                            DsblRecord = false,
                            GuidRecord = new Guid("c46aefe7-48d4-4a33-bee4-a4e64af2c0ac"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1414),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1423),
                            DsblRecord = false,
                            GuidRecord = new Guid("2e0535f6-6fab-449d-b61e-f4254e4c5a33"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1428),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1436),
                            DsblRecord = false,
                            GuidRecord = new Guid("349987c9-d917-41f5-acd1-0475667b38a4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1439),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("PL_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PL_ParameterTypeId");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterList", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1765),
                            DsblRecord = false,
                            GuidRecord = new Guid("8bd43df2-535f-4bc2-b98b-e6a85f506507"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1787),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PL_ParameterTypeId = 1L,
                            PName = "OursShare"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1805),
                            DsblRecord = false,
                            GuidRecord = new Guid("9e30895c-7882-4df6-8af0-f68edf19e6f2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1807),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PL_ParameterTypeId = 1L,
                            PName = "OthersShare"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1818),
                            DsblRecord = false,
                            GuidRecord = new Guid("b0b9f080-3a2c-4820-8134-1d6cd65fbbd3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1821),
                            PCode = 102L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 102L,
                            PL_ParameterTypeId = 4L,
                            PName = "Refrigerator"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1826),
                            DsblRecord = false,
                            GuidRecord = new Guid("96382338-8e5f-449b-8ea7-4836d9b239bb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1828),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PL_ParameterTypeId = 1L,
                            PName = "Price"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1835),
                            DsblRecord = false,
                            GuidRecord = new Guid("3bb98a07-8f84-4bca-8ba7-39bdd2ecccf3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1837),
                            PCode = 200L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 200L,
                            PL_ParameterTypeId = 5L,
                            PName = "Approve"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1843),
                            DsblRecord = false,
                            GuidRecord = new Guid("90bf739a-c459-4add-b7d4-dd779ae42f4b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1845),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 201L,
                            PL_ParameterTypeId = 5L,
                            PName = "Reject"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1851),
                            DsblRecord = false,
                            GuidRecord = new Guid("c239e71b-029a-4911-991d-f7fedda87454"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1853),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 202L,
                            PL_ParameterTypeId = 5L,
                            PName = "Revise"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1859),
                            DsblRecord = false,
                            GuidRecord = new Guid("be9e0023-ed99-4fe1-9c3f-c4a1bad77381"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1862),
                            PCode = 301L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 301L,
                            PL_ParameterTypeId = 6L,
                            PName = "Med"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1867),
                            DsblRecord = false,
                            GuidRecord = new Guid("8dd70bb2-3f82-4faa-b92c-c626beae99d1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1870),
                            PCode = 302L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 302L,
                            PL_ParameterTypeId = 6L,
                            PName = "FMCG"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1875),
                            DsblRecord = false,
                            GuidRecord = new Guid("54961313-180b-481e-ba4d-f834506fcb66"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1877),
                            PCode = 303L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 303L,
                            PL_ParameterTypeId = 6L,
                            PName = "General"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("PT_P_FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_P_FieldTypeId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1496),
                            DsblRecord = false,
                            GuidRecord = new Guid("b3205890-08c2-4827-a6db-1ea32c2499ed"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1501),
                            PCode = 1L,
                            PDisplayName = "متغیرهای عددی",
                            PIndex = 1L,
                            PName = "NumbericProcessVar",
                            PT_P_FieldTypeId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1536),
                            DsblRecord = false,
                            GuidRecord = new Guid("9735cd2b-92c9-48bf-938b-57777393d264"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1540),
                            PCode = 2L,
                            PDisplayName = "متغیرهای تاریخی",
                            PIndex = 2L,
                            PName = "DateProcessVar",
                            PT_P_FieldTypeId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1568),
                            DsblRecord = false,
                            GuidRecord = new Guid("39d10ef7-706d-47b5-9b92-f658377f2ac0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1571),
                            PCode = 3L,
                            PDisplayName = "متغیرهای حروفی",
                            PIndex = 3L,
                            PName = "StringProcessVar",
                            PT_P_FieldTypeId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1579),
                            DsblRecord = false,
                            GuidRecord = new Guid("1158b417-7bb3-42a8-ab15-859c3bedbcbb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1582),
                            PCode = 4L,
                            PDisplayName = "متغیرهای دودویی",
                            PIndex = 4L,
                            PName = "BooleanProcessVar",
                            PT_P_FieldTypeId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1589),
                            DsblRecord = false,
                            GuidRecord = new Guid("f89b5a7b-afc7-448a-a2fb-1cb5b1138b08"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1593),
                            PCode = 5L,
                            PDisplayName = "اقدام‌های فرآیندی",
                            PIndex = 5L,
                            PName = "ProcessAction",
                            PT_P_FieldTypeId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1605),
                            DsblRecord = false,
                            GuidRecord = new Guid("ddfa493f-81e8-4363-98a2-1217d14b9fec"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1624),
                            PCode = 6L,
                            PDisplayName = "نوع‌های واحد",
                            PIndex = 6L,
                            PName = "UnitType",
                            PT_P_FieldTypeId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2105),
                            DsblRecord = false,
                            GuidRecord = new Guid("587244b1-5a14-49e2-b771-d8f6b8a96d45"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2108),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2118),
                            DsblRecord = false,
                            GuidRecord = new Guid("91f1469a-7154-49ea-8789-01c4b3dc441b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2121),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2126),
                            DsblRecord = false,
                            GuidRecord = new Guid("f32b4b23-e535-47db-a148-04621caa5948"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2128),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2134),
                            DsblRecord = false,
                            GuidRecord = new Guid("930c170d-4206-4214-ba3a-61a15e8f0235"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2136),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2141),
                            DsblRecord = false,
                            GuidRecord = new Guid("abc86d08-b97e-4480-90af-f3d863ffe915"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2144),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2149),
                            DsblRecord = false,
                            GuidRecord = new Guid("9096407f-0ff5-4921-a230-208d663281da"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2151),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2157),
                            DsblRecord = false,
                            GuidRecord = new Guid("743b4669-3a2d-4391-955d-1a37f8201746"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2159),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("PSE_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSE_EndorsementPatternId");

                    b.HasIndex("PSE_ExpertUserId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessEndorsement", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(902),
                            DsblRecord = false,
                            GuidRecord = new Guid("109a7c9f-99eb-452c-a279-c46d333db4ed"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(907),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(918),
                            DsblRecord = false,
                            GuidRecord = new Guid("86b6e09e-2a8f-4aab-8d41-e20818c19626"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(922),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(941),
                            DsblRecord = false,
                            GuidRecord = new Guid("13a116c1-c11f-409e-902b-a4b915f698b0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(945),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(961),
                            DsblRecord = false,
                            GuidRecord = new Guid("d8b72325-8ae8-4f83-90e3-7d4a61783051"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(966),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long>("RT_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RT_EndorsementPatternId");

                    b.ToTable("D_RequestTitle", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(753),
                            DsblRecord = false,
                            GuidRecord = new Guid("1de7d765-12b6-4d7b-bc7f-d7b2cbface1e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(814),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition",
                            RT_EndorsementPatternId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(826),
                            DsblRecord = false,
                            GuidRecord = new Guid("f610aecd-dd76-4f0c-bfd9-34c00869c736"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(831),
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter",
                            RT_EndorsementPatternId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(839),
                            DsblRecord = false,
                            GuidRecord = new Guid("fbab72ae-baae-4173-9111-e650adcf7d96"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(843),
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit",
                            RT_EndorsementPatternId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2011),
                            DsblRecord = false,
                            GuidRecord = new Guid("38655bf9-c8b9-41fe-a243-3dd214a41487"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2014),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2021),
                            DsblRecord = false,
                            GuidRecord = new Guid("a5356e44-4651-4af0-b770-a98edd850405"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2024),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2045),
                            DsblRecord = false,
                            GuidRecord = new Guid("9fccb0be-b954-4171-860c-e97ad83c3cb0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2047),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2054),
                            DsblRecord = false,
                            GuidRecord = new Guid("89094149-6277-4d70-b563-83017afdf65d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2056),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2062),
                            DsblRecord = false,
                            GuidRecord = new Guid("4813f801-0cb3-4989-81fc-8eca89ce5d5c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(2064),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1968),
                            DsblRecord = false,
                            GuidRecord = new Guid("58330b31-26d0-49f2-8c7b-61ad359db3ec"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1972),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1979),
                            DsblRecord = false,
                            GuidRecord = new Guid("de21821f-5067-4ff0-8341-00320f730913"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(1982),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_ProcessEndorsementId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UP_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UP_ProcessEndorsementId");

                    b.HasIndex("UP_RoleId");

                    b.ToTable("F_EndorsementPosition", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("LOP_BooleanValue")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<float?>("LOP_FloatValue")
                        .HasColumnType("real")
                        .HasColumnOrder(100);

                    b.Property<long?>("LOP_ParameterListId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOP_StringValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_OperandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_ProcessEndorsementId");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LOP_ParameterListId");

                    b.HasIndex("LOP_ParameterTypeId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_OperandId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_ListOfParameter", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("RI_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ExpertUserId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_UserInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3074),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("4bd675c8-e335-4d04-b4f2-63482a2ce649"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3078),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3084),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("b3e61af7-543b-44ad-adff-0966f961a7e5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3086),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3092),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("5766bc20-52f0-403a-860c-86e54308a2b5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3094),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3099),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("811f348e-c12c-41b4-b8e4-9c7d06315068"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3102),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3107),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("4399b964-b3b5-4fcb-adce-02055a9f498e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3110),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3115),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("a1969e30-7c89-4bdf-9dac-1d3e46a36733"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3118),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3123),
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("e86b9d71-3070-44cd-ab9a-7b8b84ae5cf3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3126),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserArea", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3536),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("1d39aa70-6a03-42d1-8153-16bd8551114c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3570),
                            PCode = 1L,
                            PDisplayName = "امین شریفی-فروش دارویی",
                            PIndex = 1L,
                            PName = "a.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3610),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("9d7a7e51-33db-437e-9019-3ccbdc7cf672"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3618),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فروش مصرفی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGSale",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3627),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("2dedf1a7-4df3-4a49-b8d3-d7b50b4cad4d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3630),
                            PCode = 3L,
                            PDisplayName = "محمد شریفی-فروش دارویی",
                            PIndex = 3L,
                            PName = "m.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3640),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("179301fe-e2d3-494c-9a63-340a90eb737d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3659),
                            PCode = 4L,
                            PDisplayName = "محمد شریفی-فروش مصرفی",
                            PIndex = 4L,
                            PName = "m.sharifi-FMCGSale",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3018),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("bf6a1b7b-e35d-42c8-8901-9129bf923472"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3022),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3032),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("b4dcbdce-49f4-4a82-b072-042eceba1969"),
                            LastUpdatedRecord = new DateTime(2023, 4, 12, 14, 46, 32, 464, DateTimeKind.Local).AddTicks(3035),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_PositionId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRole", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRelatedLocation", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "PL_ParameterType")
                        .WithMany("PT_ParameterList")
                        .HasForeignKey("PL_ParameterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PL_ParameterType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PT_P_FieldType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "PSE_EndorsementPattern")
                        .WithMany("EP_ProcessEndorsement")
                        .HasForeignKey("PSE_EndorsementPatternId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSE_EndorsementPattern");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "RT_EndorsementPattern")
                        .WithMany()
                        .HasForeignKey("RT_EndorsementPatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentId");

                    b.Navigation("RT_EndorsementPattern");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "APV_ProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("APV_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_ProcessEndorsement");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "UP_ProcessEndorsement")
                        .WithMany("PSE_EndorsementPosition")
                        .HasForeignKey("UP_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("UP_RoleId");

                    b.Navigation("ParentId");

                    b.Navigation("UP_ProcessEndorsement");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", null)
                        .WithMany("PSE_ListOfParameter")
                        .HasForeignKey("D_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", null)
                        .WithMany("User_ListOfParameters")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", null)
                        .WithMany("RI_ListOfParameters")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "LOP_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterListId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "LOP_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "PT_Operand")
                        .WithMany()
                        .HasForeignKey("PT_OperandId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_ListOfParameter", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("LOP_ParameterList");

                    b.Navigation("LOP_ParameterType");

                    b.Navigation("PT_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAreas")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "UA_Area")
                        .WithMany("Area_UserAreas")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Area");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", null)
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("D_PositionId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Role");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_Related_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_RelatedLocation")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_RelatedLocation");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Navigation("Area_UserAreas");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_ProcessEndorsement");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PT_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSE_EndorsementPosition");

                    b.Navigation("PSE_ListOfParameter");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_ListOfParameters");

                    b.Navigation("User_Related_UserLocations");

                    b.Navigation("User_UserAreas");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230517101143_delete_condidates")]
    partial class delete_condidates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9543),
                            Display = false,
                            GuidRecord = new Guid("340bb41d-8660-4fc5-beb8-57d30e533407"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9545),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9699),
                            Display = true,
                            GuidRecord = new Guid("d6745d2f-7a25-4121-bdeb-98a64fc48de9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9701),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9724),
                            Display = false,
                            GuidRecord = new Guid("dc5065fb-32f5-419e-b48b-ccb2e305919b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9725),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9734),
                            Display = true,
                            GuidRecord = new Guid("2c7463d5-1df2-4552-9c8e-c28a1e63d39a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9736),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9743),
                            Display = true,
                            GuidRecord = new Guid("0ec09bd4-aad0-4957-a777-d909e02b4cbd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9913),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9952),
                            Display = false,
                            GuidRecord = new Guid("15505db4-2762-4e10-a2b8-73cc03bdd611"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9954),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9961),
                            Display = true,
                            GuidRecord = new Guid("f64bca87-28c2-4990-8f1d-075dd2a947a5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9963),
                            PCode = 107L,
                            PDisplayName = "فرآیند‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9971),
                            Display = true,
                            GuidRecord = new Guid("5b26d318-2efe-4a23-a1ff-224227cac25e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9972),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9979),
                            Display = true,
                            GuidRecord = new Guid("ea3540b6-1f58-45a0-86c2-6395682bc0ad"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9981),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9988),
                            Display = false,
                            GuidRecord = new Guid("fc2b2fed-b615-4b5b-9708-8b467709ed39"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9989),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9996),
                            Display = false,
                            GuidRecord = new Guid("b7b05d3d-d578-4f21-b4ae-dc284e89f2ee"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9997),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_Assignment"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(7),
                            Display = false,
                            GuidRecord = new Guid("9d6631f5-a735-465b-9d7f-6a4223cb3e71"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(9),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Review"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(15),
                            Display = false,
                            GuidRecord = new Guid("0ddb95b8-5d9b-4817-9fdd-7a116ea044a2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(17),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(24),
                            Display = false,
                            GuidRecord = new Guid("0a5b5a70-c41a-48ae-bbc5-dcf68094dd9a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(26),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(32),
                            Display = false,
                            GuidRecord = new Guid("44f02015-b565-4c56-8ed0-25525cd57d83"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(34),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(41),
                            Display = true,
                            GuidRecord = new Guid("b2563cf6-d51c-4ad7-86cc-e74dc5039903"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(42),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_Request"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(50),
                            Display = true,
                            GuidRecord = new Guid("e703d569-47ce-4d5f-96c8-5a03b41e81bb"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(51),
                            PCode = 206L,
                            PDisplayName = "سناریوها(Facts)",
                            PIndex = 206L,
                            PName = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(73),
                            Display = false,
                            GuidRecord = new Guid("af77b81e-3baa-4806-99cb-dcda0c8cb71a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(75),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(82),
                            Display = false,
                            GuidRecord = new Guid("12297d03-2239-4485-a7e2-3a39acf349c7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(83),
                            PCode = 301L,
                            PDisplayName = "فرآیند-سناریو(Links)",
                            PIndex = 301L,
                            PName = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(93),
                            Display = false,
                            GuidRecord = new Guid("f75ee6c6-6afd-4380-bcc7-e8101cc73683"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(95),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(101),
                            Display = false,
                            GuidRecord = new Guid("e0f28276-4f02-46b6-a962-3bc2ccbdd0e1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(103),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9171),
                            GuidRecord = new Guid("224bc97c-7939-4758-ab4f-df3eeeee1574"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9172),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9186),
                            GuidRecord = new Guid("d6610b67-3286-42cb-a911-46ca55386b44"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9187),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9191),
                            GuidRecord = new Guid("6230f6d2-7ca8-4f61-84c8-bec156d0c695"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9192),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9216),
                            GuidRecord = new Guid("32317caf-9e6e-48dd-8172-fb769acbb4a0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9218),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9222),
                            GuidRecord = new Guid("ba500f37-f464-44dc-ab44-2c4dd13c2e69"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9223),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9226),
                            GuidRecord = new Guid("5d491f9e-1e7a-46a4-8e98-4d61328c3332"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9228),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9231),
                            GuidRecord = new Guid("a570c4e6-9719-4f0f-91ca-3e997475dab6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9232),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9236),
                            GuidRecord = new Guid("aa5d0936-4bd4-4471-a3db-887df0cf20a7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9237),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9243),
                            GuidRecord = new Guid("70425704-aa6b-4d81-97f0-b211ddf62614"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9244),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9484),
                            GuidRecord = new Guid("fc563e7c-0c2c-42c0-b794-df16684c6a11"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9486),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9490),
                            GuidRecord = new Guid("5ced93ef-3734-43c7-9db9-aa2bcdea4ef5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9491),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9496),
                            GuidRecord = new Guid("ed20d510-d613-43ec-a56c-34fb51e07053"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9498),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9501),
                            GuidRecord = new Guid("5f676e16-cc50-4669-8839-06964e3746c5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9503),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9506),
                            GuidRecord = new Guid("d74b3441-4b8d-4ccb-b17d-7183a9d43887"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9508),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9511),
                            GuidRecord = new Guid("348aedb3-8fdb-4cf8-b292-afc7ede04c70"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9512),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9516),
                            GuidRecord = new Guid("4fe8c23c-efff-4767-abb7-326f613f6145"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9517),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<bool?>("PC_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("PC_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PC_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8738),
                            GuidRecord = new Guid("dfe7ed00-e5ff-4680-a3cd-af373ade1e85"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8797),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8846),
                            GuidRecord = new Guid("0ead6b37-9274-45b5-a453-163c82f7ac7b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8847),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8852),
                            GuidRecord = new Guid("e3c49255-6ae2-45a6-84c1-56bafa08c021"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(8854),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9105),
                            GuidRecord = new Guid("8a042d20-3f67-4ea3-9e3c-ee9493638bee"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9108),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9112),
                            GuidRecord = new Guid("9f2e23c5-4038-4ffb-8bfe-7bf9b79a7f6a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9114),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9118),
                            GuidRecord = new Guid("d99295dd-6015-4406-9457-3ac3af2f51e1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9119),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9123),
                            GuidRecord = new Guid("7b05f2fc-e840-49f5-9e45-3c314adf7dda"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9124),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9436),
                            GuidRecord = new Guid("286dde8c-145c-4f33-9f65-a7c9f51f0d02"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9438),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9442),
                            GuidRecord = new Guid("04ee8744-8364-4e05-aa3a-786071683cdc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9443),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9449),
                            GuidRecord = new Guid("6db64eab-4e5c-426b-a6a5-67b6232e9cf2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9450),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9453),
                            GuidRecord = new Guid("77b04aae-b7f2-4c39-b949-5437b802496c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9455),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9459),
                            GuidRecord = new Guid("d821c918-fc5c-48f0-b4dc-0d10ba12b78d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9460),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9316),
                            GuidRecord = new Guid("dbd26723-4161-40ef-8038-e1bc28cf91ae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9317),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9321),
                            GuidRecord = new Guid("f16d4589-16aa-4d40-adc5-d759c9065678"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9323),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9326),
                            GuidRecord = new Guid("afc430f0-ca64-400f-9c48-87e00c4a9f9b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9328),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9333),
                            GuidRecord = new Guid("b10d5f72-bbf2-4c85-b117-5b6ca02360bc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9335),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9338),
                            GuidRecord = new Guid("673f3c34-9cf8-49f8-92e7-99a803c4798b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9340),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9343),
                            GuidRecord = new Guid("46abebc8-c99f-4c24-9acd-3855a75195ca"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9344),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9350),
                            GuidRecord = new Guid("246e0295-90d2-43cd-8c7a-679effe80fd2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9352),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9355),
                            GuidRecord = new Guid("ce6eab60-05fe-4100-914f-2753b4323191"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9356),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9360),
                            GuidRecord = new Guid("c628ceca-7eb4-4ae9-88da-5cf6df181b35"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9362),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9365),
                            GuidRecord = new Guid("35f53640-4fa5-4544-9815-0e322fb6fd25"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9366),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9277),
                            GuidRecord = new Guid("8716c345-f2e0-4b82-b9d3-224fff6c0575"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9278),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9283),
                            GuidRecord = new Guid("e95f7c05-5e3d-4e4d-ae02-17a5d9a95e2e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9284),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9287),
                            GuidRecord = new Guid("a66bfe33-2fc6-4202-94ce-d13aba62e679"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9289),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9292),
                            GuidRecord = new Guid("8cc2913e-665c-4e14-9e74-2f0204d37fa7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9293),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9395),
                            GuidRecord = new Guid("cec5d728-2521-42e3-894d-2af6bf4c6d55"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9397),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9414),
                            GuidRecord = new Guid("fe70954f-5687-49f8-b7b9-83d80616ecbb"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 206, DateTimeKind.Local).AddTicks(9415),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PRM_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("PRM_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("PRM_EndorsementId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Assignment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ReviewId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ReviewId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CD_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("CD_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<long?>("CD_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("CD_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_EndorsementId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CD_RequestId");

                    b.HasIndex("CD_ScenarioId");

                    b.HasIndex("CD_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CD_EndorsementId = 2L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(221),
                            GuidRecord = new Guid("438915c2-7a59-444c-a196-97b6d0800529"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(223),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            PIndex = 1L,
                            PName = "Head_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 2L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 204L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(231),
                            GuidRecord = new Guid("04d85de4-8aee-4393-9dd2-2776a75fea3d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(232),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            PIndex = 2L,
                            PName = "Med_Scenario,Med,=,1"
                        },
                        new
                        {
                            Id = 3L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(238),
                            GuidRecord = new Guid("fb6a71f1-48e3-4fab-95f9-16d315866735"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(239),
                            PCode = 3L,
                            PDisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            PIndex = 3L,
                            PName = "Med_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 4L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 205L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(245),
                            GuidRecord = new Guid("f68e96d5-84b4-4f6e-8f59-55a043977edf"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(247),
                            PCode = 4L,
                            PDisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            PIndex = 4L,
                            PName = "FMCG_Scenario,FMCG,=,1"
                        },
                        new
                        {
                            Id = 5L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 103L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(251),
                            GuidRecord = new Guid("7a479107-fb69-4008-af27-e32229dfc94b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(252),
                            PCode = 5L,
                            PDisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            PIndex = 5L,
                            PName = "FMCG_Scenario,Price,>,0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ED_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("ED_ScenarioId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(276),
                            ED_RoleId = 5L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("1678c4db-4712-40f4-b9ba-73bb5af63f41"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(278),
                            PCode = 1L,
                            PDisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            PIndex = 1L,
                            PName = "Med_Scenario,DistributionCenterManager"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(284),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("41bb6e43-8c84-4bee-bb67-2943ddb6a36d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(285),
                            PCode = 2L,
                            PDisplayName = "سناریو سه,معاونت غذایی",
                            PIndex = 2L,
                            PName = "Strategy3,FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(297),
                            ED_RoleId = 1L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("07073b84-2da2-4b34-90ec-0d04e70e1de8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(299),
                            PCode = 3L,
                            PDisplayName = "سناریو دو,معاونت دارویی",
                            PIndex = 3L,
                            PName = "Strategy2,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(306),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("ac682558-0819-420e-83bf-2c20eb33fa4c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(307),
                            PCode = 4L,
                            PDisplayName = "سناریو دارویی,معاونت دارویی",
                            PIndex = 4L,
                            PName = "Med_Scenario,PharmaceuticalDeputy"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RQT_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RQT_CurrentAssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(114);

                    b.Property<long?>("RQT_Current_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(112);

                    b.Property<long?>("RQT_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RQT_IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long?>("RQT_ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RQT_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("RQT_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<long?>("RQT_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("RQT_SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("RQT_CreatorId");

                    b.HasIndex("RQT_CurrentAssignmentId");

                    b.HasIndex("RQT_Current_ReviewId");

                    b.HasIndex("RQT_ProcessId");

                    b.HasIndex("RQT_ProcessStateId");

                    b.HasIndex("RQT_RequestorId");

                    b.HasIndex("RQT_SelectedScenarioId");

                    b.ToTable("F_Request", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("APV_AssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_PerformerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_AssignmentId")
                        .IsUnique()
                        .HasFilter("[APV_AssignmentId] IS NOT NULL");

                    b.HasIndex("APV_PerformerId");

                    b.HasIndex("APV_RequestId");

                    b.HasIndex("APV_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Review", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(182),
                            GuidRecord = new Guid("b616b0cd-0a01-48c2-a110-02d91a6bd8a0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(184),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد",
                            PIndex = 1L,
                            PName = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(189),
                            GuidRecord = new Guid("3fc9c67f-aca3-4db2-ac69-3fcfbcccedc9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(190),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(194),
                            GuidRecord = new Guid("8c260d26-e710-4ed4-ad37-b6a30d24e9ff"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(195),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی",
                            PIndex = 3L,
                            PName = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(430),
                            FirstId = 1L,
                            GuidRecord = new Guid("042d8c37-6719-4457-86d3-8fe70f2e8703"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(431),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            PIndex = 1L,
                            PName = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(438),
                            FirstId = 1L,
                            GuidRecord = new Guid("4f959080-163d-4645-88e2-e6da4db7dbf1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(439),
                            PCode = 2L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            PIndex = 2L,
                            PName = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(442),
                            FirstId = 2L,
                            GuidRecord = new Guid("b752c7d6-ed97-48e2-8923-dda6ae32c808"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(444),
                            PCode = 3L,
                            PDisplayName = "مجوزهای موردی-سناریو یک",
                            PIndex = 3L,
                            PName = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(447),
                            FirstId = 1L,
                            GuidRecord = new Guid("5113ccbc-c38f-4a1a-8332-480f1d116267"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(449),
                            PCode = 4L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            PIndex = 4L,
                            PName = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(452),
                            FirstId = 2L,
                            GuidRecord = new Guid("f4514a6a-3fe1-4c6b-b075-7e69f04647f5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(454),
                            PCode = 5L,
                            PDisplayName = "مجوزهای موردی-سناریو دو",
                            PIndex = 5L,
                            PName = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(367),
                            FirstId = 1L,
                            GuidRecord = new Guid("b6ba4e7d-0c42-44fd-8c76-269d54f0eede"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(368),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(373),
                            FirstId = 2L,
                            GuidRecord = new Guid("4b6df5c5-a6d5-4c9b-8592-8167b69c3cfb"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(374),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(378),
                            FirstId = 3L,
                            GuidRecord = new Guid("a8543314-bec6-4e82-80ba-d2035a45e26b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(379),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(382),
                            FirstId = 3L,
                            GuidRecord = new Guid("26647a60-400a-420f-b0e4-15f522b1b75d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(384),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(389),
                            FirstId = 4L,
                            GuidRecord = new Guid("a814c069-f35f-4cb8-97bc-b96b16646387"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(391),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(394),
                            FirstId = 4L,
                            GuidRecord = new Guid("e0386d43-9d8c-4959-af78-744de0938f07"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(396),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(399),
                            FirstId = 5L,
                            GuidRecord = new Guid("d622c065-57bc-4ebc-bd72-6a4246c2db07"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(401),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserAssignment", "Links");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(335),
                            FirstId = 1L,
                            GuidRecord = new Guid("82d1c9aa-4bc7-42ab-89da-cbb0ef4b4a07"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(337),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(342),
                            FirstId = 2L,
                            GuidRecord = new Guid("d95e8273-b480-4d6e-85f9-0919689269a4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(343),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(474),
                            FirstId = 1L,
                            GuidRecord = new Guid("79c2779c-fce8-4b77-a5df-fd1f6a3cc346"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(476),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-مدیر مرکز",
                            PIndex = 1L,
                            PName = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(480),
                            FirstId = 2L,
                            GuidRecord = new Guid("e4649dd7-ae6c-450a-8195-2f6ed4250f89"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 14, 41, 42, 207, DateTimeKind.Local).AddTicks(481),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-معاون غذایی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGDeputy",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId");

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", null)
                        .WithMany("RQT_Assignments")
                        .HasForeignKey("F_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "PRM_Endorsement")
                        .WithMany()
                        .HasForeignKey("PRM_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PRM_Endorsement");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Review", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "CD_Endorsement")
                        .WithMany("ED_Conditions")
                        .HasForeignKey("CD_EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "CD_Request")
                        .WithMany("RQT_Conditions")
                        .HasForeignKey("CD_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "CD_Scenario")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_Tag")
                        .WithMany()
                        .HasForeignKey("CD_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_Endorsement");

                    b.Navigation("CD_Operand");

                    b.Navigation("CD_Request");

                    b.Navigation("CD_Scenario");

                    b.Navigation("CD_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ED_Scenario")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_ScenarioId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_Role");

                    b.Navigation("ED_Scenario");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Creator")
                        .WithMany()
                        .HasForeignKey("RQT_CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "RQT_CurrentAssignment")
                        .WithMany()
                        .HasForeignKey("RQT_CurrentAssignmentId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "RQT_Current_Review")
                        .WithMany()
                        .HasForeignKey("RQT_Current_ReviewId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "RQT_Process")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RQT_ProcessState")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Requestor")
                        .WithMany()
                        .HasForeignKey("RQT_RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "RQT_SelectedScenario")
                        .WithMany()
                        .HasForeignKey("RQT_SelectedScenarioId");

                    b.Navigation("ParentId");

                    b.Navigation("RQT_Creator");

                    b.Navigation("RQT_CurrentAssignment");

                    b.Navigation("RQT_Current_Review");

                    b.Navigation("RQT_Process");

                    b.Navigation("RQT_ProcessState");

                    b.Navigation("RQT_Requestor");

                    b.Navigation("RQT_SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "APV_Assignment")
                        .WithOne("PRM_Review")
                        .HasForeignKey("Cheetah_Business.Facts.F_Review", "APV_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_Performer")
                        .WithMany()
                        .HasForeignKey("APV_PerformerId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "APV_Request")
                        .WithMany("RQT_Reviews")
                        .HasForeignKey("APV_RequestId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "APV_Tag")
                        .WithMany()
                        .HasForeignKey("APV_TagId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Assignment");

                    b.Navigation("APV_Performer");

                    b.Navigation("APV_Request");

                    b.Navigation("APV_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "PS_Process")
                        .WithMany("PC_ProcessScenario")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "PS_Scenario")
                        .WithMany("EP_ProcessScenarios")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PS_Process");

                    b.Navigation("PS_Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UA_User")
                        .WithMany()
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "UA_Assignment")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Assignment");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserPositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PC_ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PRM_Review");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ED_Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RQT_Assignments");

                    b.Navigation("RQT_Conditions");

                    b.Navigation("RQT_Reviews");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");

                    b.Navigation("EP_ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230520150605_RQT_Finished")]
    partial class RQT_Finished
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5982),
                            Display = false,
                            GuidRecord = new Guid("2fbd4038-1007-4bd9-9679-27be68a13e4a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5985),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6050),
                            Display = true,
                            GuidRecord = new Guid("a2fdab31-6fb6-4bf9-9415-2a6b74f280a4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6052),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6059),
                            Display = false,
                            GuidRecord = new Guid("61a53560-d6ab-4ebc-be87-c53434b340b6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6061),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6070),
                            Display = true,
                            GuidRecord = new Guid("591cf5b8-ed46-47d2-ab7c-2c6fa6f694be"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6071),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6078),
                            Display = true,
                            GuidRecord = new Guid("c27acdcd-0650-41c0-a07c-20e636cafa12"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6080),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6091),
                            Display = false,
                            GuidRecord = new Guid("e6ffd74b-3723-4af1-8194-69c83e95d90b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6092),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6099),
                            Display = true,
                            GuidRecord = new Guid("d52f95cb-f8eb-42fe-97e7-b899663010c2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6101),
                            PCode = 107L,
                            PDisplayName = "فرآیند‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6108),
                            Display = true,
                            GuidRecord = new Guid("2c23152b-c518-44fd-974d-75e9547499e4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6110),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6116),
                            Display = true,
                            GuidRecord = new Guid("a41fb451-e705-4429-90e8-91be31ccfeae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6118),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6129),
                            Display = false,
                            GuidRecord = new Guid("75b973be-18c7-4071-aa5d-5ab248e19099"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6131),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6138),
                            Display = false,
                            GuidRecord = new Guid("05b5d5e4-78af-4bb2-bfe9-9cbea13d535e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6140),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_Assignment"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6147),
                            Display = false,
                            GuidRecord = new Guid("7fd47e25-48d0-4d78-8b67-6ac08c1962a3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6149),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Review"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6155),
                            Display = false,
                            GuidRecord = new Guid("b3d469a7-f009-4f8b-a8e2-3402c8b7f9c9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6157),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6165),
                            Display = false,
                            GuidRecord = new Guid("65120f57-6f1e-43b1-8e6e-fe38c5b382c1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6167),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6232),
                            Display = false,
                            GuidRecord = new Guid("1c9863f2-2b97-4367-b050-34ddf6601623"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6234),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6251),
                            Display = true,
                            GuidRecord = new Guid("3a30487a-6b83-4f27-bef2-50f8f3158b63"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6253),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_Request"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6260),
                            Display = true,
                            GuidRecord = new Guid("15a12751-18dd-44dd-91fa-2c9d9bc49bae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6261),
                            PCode = 206L,
                            PDisplayName = "سناریوها(Facts)",
                            PIndex = 206L,
                            PName = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6268),
                            Display = false,
                            GuidRecord = new Guid("174a76f5-d857-45f9-bb8d-4382f9b317b5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6269),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6276),
                            Display = false,
                            GuidRecord = new Guid("df546648-64a2-4a8d-878e-ed7e94197eb4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6278),
                            PCode = 301L,
                            PDisplayName = "فرآیند-سناریو(Links)",
                            PIndex = 301L,
                            PName = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6285),
                            Display = false,
                            GuidRecord = new Guid("6b7fbb90-e1ca-4bad-8fdb-e66bb935789d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6286),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6293),
                            Display = false,
                            GuidRecord = new Guid("ac1ab4be-5976-4983-891a-cd474b9f6a9f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6294),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5410),
                            GuidRecord = new Guid("1c0c024d-c53b-4553-a3ca-4efc247bd128"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5436),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5440),
                            GuidRecord = new Guid("e395ffac-48ef-4842-a39b-26097ea4a181"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5441),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5448),
                            GuidRecord = new Guid("13bc64ac-b3e1-4cbd-ae3d-f40bbdabcfb0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5450),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5491),
                            GuidRecord = new Guid("a4727336-f1eb-466f-8847-33b2491ec0c4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5493),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5498),
                            GuidRecord = new Guid("9f657584-4779-4bc8-b6cf-244ec71fff02"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5499),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5504),
                            GuidRecord = new Guid("6aaada82-a09f-4dab-abba-454c415cff7e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5506),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5510),
                            GuidRecord = new Guid("417f491f-1cdb-4725-8ce1-29419a59636f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5511),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5515),
                            GuidRecord = new Guid("20ed3ac8-418b-4f99-98a7-d3ac8a1b19a0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5527),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5570),
                            GuidRecord = new Guid("5fcbc303-e787-41ce-9406-d4ed82aed127"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5572),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5886),
                            GuidRecord = new Guid("9a50e363-08b3-48ec-b5cb-cfb1b04cd0a9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5888),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5893),
                            GuidRecord = new Guid("216d46c8-71d8-4c2e-8765-0468f708a9be"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5895),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5900),
                            GuidRecord = new Guid("190a0746-0297-4615-b493-8c52a2ce1f81"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5902),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5906),
                            GuidRecord = new Guid("c5142423-6858-4396-a69b-a292837f9e7f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5907),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5913),
                            GuidRecord = new Guid("12ea1441-d448-42e6-ba89-2390013453ff"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5915),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5918),
                            GuidRecord = new Guid("5db51a26-8624-489e-b283-590efb07978a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5920),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5924),
                            GuidRecord = new Guid("05aed38c-d1cc-46d9-8667-7fce0c1583d8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5925),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<bool?>("PC_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("PC_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PC_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4737),
                            GuidRecord = new Guid("8b21af07-c32c-4b52-ab10-69ae05a4fe84"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4810),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4872),
                            GuidRecord = new Guid("73109a94-95ab-4393-8e78-d614203b3394"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4874),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4879),
                            GuidRecord = new Guid("379c20c8-e9c5-4cd1-9fea-63785c8b2e2a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(4891),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5307),
                            GuidRecord = new Guid("befb93cf-6b49-4fbf-b891-964b13e9d5c8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5313),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5354),
                            GuidRecord = new Guid("80c5cced-670d-4d16-baa7-676c2a070f2d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5356),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5367),
                            GuidRecord = new Guid("457c5474-9388-43ea-a29d-b79871138739"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5368),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5372),
                            GuidRecord = new Guid("999c9b10-b867-42c8-993a-387e80822c42"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5374),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5833),
                            GuidRecord = new Guid("565c66f7-f4ac-4010-a75e-36bb0faf9d66"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5835),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5842),
                            GuidRecord = new Guid("4668a17c-934f-4e88-b4c9-16245e0aff33"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5844),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5847),
                            GuidRecord = new Guid("baead5c4-612c-4252-9d20-edc19a1938f1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5849),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5853),
                            GuidRecord = new Guid("7a4217f5-455a-4a7e-b675-b6db2e52bbf2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5855),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5858),
                            GuidRecord = new Guid("e9a1ad2e-a0d1-4556-9665-6172728ea379"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5860),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5662),
                            GuidRecord = new Guid("ab54fdfc-9702-4c14-a7a8-2c25165ed33e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5664),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5671),
                            GuidRecord = new Guid("a3fe2b87-ae4c-4948-ab29-d8118bdf9a5c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5673),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5676),
                            GuidRecord = new Guid("e0e19cc0-4baa-4292-b2c0-e2976c4ae023"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5678),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5682),
                            GuidRecord = new Guid("df9d82d0-2514-4358-b1d4-c5e630d9ee2f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5683),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5687),
                            GuidRecord = new Guid("da91040e-062f-40a5-bb19-a37048aea21f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5688),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5694),
                            GuidRecord = new Guid("9525a796-4a28-41ca-8632-e745a4819b43"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5696),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5700),
                            GuidRecord = new Guid("0082aed7-318d-4e4a-87e5-a222d31f66d4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5701),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5705),
                            GuidRecord = new Guid("2891d4aa-6b2f-41ec-9186-9b3b6b620a4b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5707),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5739),
                            GuidRecord = new Guid("c0ddec99-e03a-4a72-ae24-965c21861b6f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5741),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5746),
                            GuidRecord = new Guid("3c6e423c-1dae-40ab-995e-c37052e31f9d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5748),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5614),
                            GuidRecord = new Guid("96b28d22-2c52-447b-980c-584dcb6fbc8f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5616),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5623),
                            GuidRecord = new Guid("cdb1272b-6627-4be4-981b-cb00ff5a61c4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5624),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5628),
                            GuidRecord = new Guid("fb414441-cdab-4314-ab2c-aab5943c9802"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5629),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5633),
                            GuidRecord = new Guid("a1734676-dcd5-47b4-b063-5996c866c96c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5634),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5796),
                            GuidRecord = new Guid("01d5d452-364a-47f8-88e3-86483fb31595"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5798),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5803),
                            GuidRecord = new Guid("3229161d-fe09-4a0a-89c2-3967ec5ae765"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(5805),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PRM_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("PRM_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("PRM_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("PRM_EndorsementId");

                    b.HasIndex("PRM_RequestId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Assignment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ReviewId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ReviewId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CD_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("CD_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<long?>("CD_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("CD_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_EndorsementId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CD_RequestId");

                    b.HasIndex("CD_ScenarioId");

                    b.HasIndex("CD_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CD_EndorsementId = 2L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6377),
                            GuidRecord = new Guid("44e418dd-13f9-4203-ae36-b4f1e23628bf"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6380),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            PIndex = 1L,
                            PName = "Head_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 2L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 204L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6387),
                            GuidRecord = new Guid("bfb534d1-f372-47cf-a6f7-ccf40c9d3d59"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6389),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            PIndex = 2L,
                            PName = "Med_Scenario,Med,=,1"
                        },
                        new
                        {
                            Id = 3L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6393),
                            GuidRecord = new Guid("f1dab07f-8755-4667-8323-00253f7741c3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6395),
                            PCode = 3L,
                            PDisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            PIndex = 3L,
                            PName = "Med_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 4L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 205L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6399),
                            GuidRecord = new Guid("c47bb503-9760-43d0-9ed4-25395e5aa5fd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6401),
                            PCode = 4L,
                            PDisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            PIndex = 4L,
                            PName = "FMCG_Scenario,FMCG,=,1"
                        },
                        new
                        {
                            Id = 5L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 103L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6405),
                            GuidRecord = new Guid("3d38f39e-9fe9-42b2-8cfb-354fe52053b3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6407),
                            PCode = 5L,
                            PDisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            PIndex = 5L,
                            PName = "FMCG_Scenario,Price,>,0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ED_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("ED_ScenarioId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6468),
                            ED_RoleId = 5L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("85fe37cd-2afd-4b5e-8114-389a1190cf7d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6471),
                            PCode = 1L,
                            PDisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            PIndex = 1L,
                            PName = "Med_Scenario,DistributionCenterManager"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6477),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("d8f9fb95-36b6-497b-a2fa-c0bfe5b18efc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6478),
                            PCode = 2L,
                            PDisplayName = "سناریو سه,معاونت غذایی",
                            PIndex = 2L,
                            PName = "Strategy3,FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6482),
                            ED_RoleId = 1L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("71865b17-ccf6-49d7-a688-c92f9d816896"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6484),
                            PCode = 3L,
                            PDisplayName = "سناریو دو,معاونت دارویی",
                            PIndex = 3L,
                            PName = "Strategy2,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6488),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("4e735279-e10c-4822-a971-64b24f6f1406"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6489),
                            PCode = 4L,
                            PDisplayName = "سناریو دارویی,معاونت دارویی",
                            PIndex = 4L,
                            PName = "Med_Scenario,PharmaceuticalDeputy"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RQT_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RQT_CurrentAssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(114);

                    b.Property<long?>("RQT_Current_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(112);

                    b.Property<long?>("RQT_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RQT_Finished")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<bool?>("RQT_IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long?>("RQT_ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RQT_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<long?>("RQT_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("RQT_SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("RQT_CreatorId");

                    b.HasIndex("RQT_CurrentAssignmentId");

                    b.HasIndex("RQT_Current_ReviewId");

                    b.HasIndex("RQT_ProcessId");

                    b.HasIndex("RQT_ProcessStateId");

                    b.HasIndex("RQT_RequestorId");

                    b.HasIndex("RQT_SelectedScenarioId");

                    b.ToTable("F_Request", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("APV_AssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_PerformerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_AssignmentId")
                        .IsUnique()
                        .HasFilter("[APV_AssignmentId] IS NOT NULL");

                    b.HasIndex("APV_PerformerId");

                    b.HasIndex("APV_RequestId");

                    b.HasIndex("APV_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Review", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6339),
                            GuidRecord = new Guid("09aab6a4-fbdd-4b94-bb49-509335fc0224"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6341),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد",
                            PIndex = 1L,
                            PName = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6347),
                            GuidRecord = new Guid("5174f084-c8e4-485b-ae61-4e7da3c221e9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6349),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6353),
                            GuidRecord = new Guid("6c11161a-73c8-49c7-a5a0-6d81787a845c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6355),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی",
                            PIndex = 3L,
                            PName = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6644),
                            FirstId = 1L,
                            GuidRecord = new Guid("46f25f8d-c7f0-40cf-8955-da4f27d6b7dd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6646),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            PIndex = 1L,
                            PName = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6653),
                            FirstId = 1L,
                            GuidRecord = new Guid("1da5e3a6-6daf-41ee-b553-f293db3cf960"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6655),
                            PCode = 2L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            PIndex = 2L,
                            PName = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6658),
                            FirstId = 2L,
                            GuidRecord = new Guid("0aa46bfe-ae3f-408f-b459-8c2052642b2f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6660),
                            PCode = 3L,
                            PDisplayName = "مجوزهای موردی-سناریو یک",
                            PIndex = 3L,
                            PName = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6664),
                            FirstId = 1L,
                            GuidRecord = new Guid("dfffe424-da59-477d-a4ba-4e265bf0dc63"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6665),
                            PCode = 4L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            PIndex = 4L,
                            PName = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6669),
                            FirstId = 2L,
                            GuidRecord = new Guid("664f5ec3-2597-4805-9a0a-58e99adb2a55"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6671),
                            PCode = 5L,
                            PDisplayName = "مجوزهای موردی-سناریو دو",
                            PIndex = 5L,
                            PName = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6573),
                            FirstId = 1L,
                            GuidRecord = new Guid("d717770e-7632-4c51-972e-98a9b9657a6d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6575),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6579),
                            FirstId = 2L,
                            GuidRecord = new Guid("a859b9db-f3b2-4cf3-8fee-94ba2eb02173"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6581),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6585),
                            FirstId = 3L,
                            GuidRecord = new Guid("c6d8ac89-9265-49b6-8105-e9408dbed433"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6586),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6590),
                            FirstId = 3L,
                            GuidRecord = new Guid("7f604510-7f1c-4a5d-b85a-1d9715eb0057"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6592),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6595),
                            FirstId = 4L,
                            GuidRecord = new Guid("2d15d8bc-f2a5-4d4f-8e4b-e44a4fe4999c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6597),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6601),
                            FirstId = 4L,
                            GuidRecord = new Guid("0bacfb30-7be8-4120-bf2f-36bf125fa77e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6602),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6607),
                            FirstId = 5L,
                            GuidRecord = new Guid("b6c0fbda-644b-4be7-9009-62ba6695d145"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6609),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserAssignment", "Links");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6522),
                            FirstId = 1L,
                            GuidRecord = new Guid("9bf45dc7-f10b-4dd7-9967-3c19047f1b0f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6524),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6530),
                            FirstId = 2L,
                            GuidRecord = new Guid("60959903-122e-45cd-aec0-ac31a5378a2e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6532),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6537),
                            FirstId = 1L,
                            GuidRecord = new Guid("2f22d979-2d7a-46fc-872e-90074d609b3e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6539),
                            PCode = 3L,
                            PDisplayName = "محمد شریفی-فارس",
                            PIndex = 3L,
                            PName = "m.sharifi-Fars",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6543),
                            FirstId = 2L,
                            GuidRecord = new Guid("ab20452e-b35e-4e51-a7dc-b6f62bb4f8f6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6545),
                            PCode = 4L,
                            PDisplayName = "امین شریفی-تهران",
                            PIndex = 4L,
                            PName = "a.sharifi-Tehran",
                            SecondId = 1L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6691),
                            FirstId = 1L,
                            GuidRecord = new Guid("23356649-8846-4f1b-b9bc-060cf40009d0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6693),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-مدیر مرکز",
                            PIndex = 1L,
                            PName = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6698),
                            FirstId = 2L,
                            GuidRecord = new Guid("6a2b7c1d-706d-4713-aa2c-cbbe5cc6a825"),
                            LastUpdatedRecord = new DateTime(2023, 5, 20, 19, 36, 4, 416, DateTimeKind.Local).AddTicks(6699),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-معاون غذایی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGDeputy",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId");

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "PRM_Endorsement")
                        .WithMany()
                        .HasForeignKey("PRM_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "PRM_Request")
                        .WithMany("RQT_Assignments")
                        .HasForeignKey("PRM_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PRM_Endorsement");

                    b.Navigation("PRM_Request");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Review", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "CD_Endorsement")
                        .WithMany("ED_Conditions")
                        .HasForeignKey("CD_EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "CD_Request")
                        .WithMany("RQT_Conditions")
                        .HasForeignKey("CD_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "CD_Scenario")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_Tag")
                        .WithMany()
                        .HasForeignKey("CD_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_Endorsement");

                    b.Navigation("CD_Operand");

                    b.Navigation("CD_Request");

                    b.Navigation("CD_Scenario");

                    b.Navigation("CD_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ED_Scenario")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_ScenarioId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_Role");

                    b.Navigation("ED_Scenario");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Creator")
                        .WithMany()
                        .HasForeignKey("RQT_CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "RQT_CurrentAssignment")
                        .WithMany()
                        .HasForeignKey("RQT_CurrentAssignmentId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "RQT_Current_Review")
                        .WithMany()
                        .HasForeignKey("RQT_Current_ReviewId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "RQT_Process")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RQT_ProcessState")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Requestor")
                        .WithMany()
                        .HasForeignKey("RQT_RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "RQT_SelectedScenario")
                        .WithMany()
                        .HasForeignKey("RQT_SelectedScenarioId");

                    b.Navigation("ParentId");

                    b.Navigation("RQT_Creator");

                    b.Navigation("RQT_CurrentAssignment");

                    b.Navigation("RQT_Current_Review");

                    b.Navigation("RQT_Process");

                    b.Navigation("RQT_ProcessState");

                    b.Navigation("RQT_Requestor");

                    b.Navigation("RQT_SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "APV_Assignment")
                        .WithOne("PRM_Review")
                        .HasForeignKey("Cheetah_Business.Facts.F_Review", "APV_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_Performer")
                        .WithMany()
                        .HasForeignKey("APV_PerformerId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "APV_Request")
                        .WithMany("RQT_Reviews")
                        .HasForeignKey("APV_RequestId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "APV_Tag")
                        .WithMany()
                        .HasForeignKey("APV_TagId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Assignment");

                    b.Navigation("APV_Performer");

                    b.Navigation("APV_Request");

                    b.Navigation("APV_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "PS_Process")
                        .WithMany("PC_ProcessScenario")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "PS_Scenario")
                        .WithMany("EP_ProcessScenarios")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PS_Process");

                    b.Navigation("PS_Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAssignments")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "UA_Assignment")
                        .WithMany("PRM_UserAssignments")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Assignment");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserPositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PC_ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserAssignments");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PRM_Review");

                    b.Navigation("PRM_UserAssignments");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ED_Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RQT_Assignments");

                    b.Navigation("RQT_Conditions");

                    b.Navigation("RQT_Reviews");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");

                    b.Navigation("EP_ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

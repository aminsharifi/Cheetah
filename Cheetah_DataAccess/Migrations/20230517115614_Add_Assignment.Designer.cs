// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230517115614_Add_Assignment")]
    partial class Add_Assignment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2610),
                            Display = false,
                            GuidRecord = new Guid("af409eee-9486-4cee-8941-0893d27691f9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2612),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2663),
                            Display = true,
                            GuidRecord = new Guid("a90c652f-ff07-46ff-a096-d6a1eb8ed78f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2665),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2673),
                            Display = false,
                            GuidRecord = new Guid("6094db31-4c80-4393-83c0-8997aa96c458"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2674),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2683),
                            Display = true,
                            GuidRecord = new Guid("d789322d-5c5f-4477-b3a6-4f380f6422d6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2685),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2692),
                            Display = true,
                            GuidRecord = new Guid("41de58c7-9b14-4ac6-8899-c27e8313d653"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2694),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2701),
                            Display = false,
                            GuidRecord = new Guid("6cb9923b-51c4-468d-babc-565f15c7aff5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2703),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2710),
                            Display = true,
                            GuidRecord = new Guid("f1e1906f-1347-4db0-8a4b-eafd36802460"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2712),
                            PCode = 107L,
                            PDisplayName = "فرآیند‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2722),
                            Display = true,
                            GuidRecord = new Guid("ebdf7739-32db-41ef-aa97-21d7c321ffaf"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2723),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2730),
                            Display = true,
                            GuidRecord = new Guid("0c4d73d7-0508-401c-92c8-0f13a5cd2343"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2732),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2741),
                            Display = false,
                            GuidRecord = new Guid("946b613f-28aa-41a6-82f0-d3d270ccadea"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2742),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2749),
                            Display = false,
                            GuidRecord = new Guid("ae001913-b446-4227-a12c-dc4adb89038c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2751),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_Assignment"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2786),
                            Display = false,
                            GuidRecord = new Guid("7ecd52c6-d8af-4d51-b4d1-e65b5fe9c2eb"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2787),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Review"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2797),
                            Display = false,
                            GuidRecord = new Guid("6ebed7ca-07aa-44e6-9e0e-c1c9eeaedd5b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2798),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2805),
                            Display = false,
                            GuidRecord = new Guid("b5e738c9-3de3-47ae-a05d-492abe126e03"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2807),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2814),
                            Display = false,
                            GuidRecord = new Guid("ffbca71c-dee9-46f8-b104-9996a88f1fa4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2816),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2830),
                            Display = true,
                            GuidRecord = new Guid("2941d01e-698b-42fc-9019-0352e9788e1d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2832),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_Request"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2841),
                            Display = true,
                            GuidRecord = new Guid("afc16634-dd3e-4b68-ab91-457a02e46e33"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2843),
                            PCode = 206L,
                            PDisplayName = "سناریوها(Facts)",
                            PIndex = 206L,
                            PName = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2850),
                            Display = false,
                            GuidRecord = new Guid("365d7b20-55b4-4fb2-8bce-ecae72df5b55"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2851),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2858),
                            Display = false,
                            GuidRecord = new Guid("c3ff1230-3413-4442-b12c-22f955018185"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2860),
                            PCode = 301L,
                            PDisplayName = "فرآیند-سناریو(Links)",
                            PIndex = 301L,
                            PName = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2867),
                            Display = false,
                            GuidRecord = new Guid("f5dcd872-bfbf-4c51-8d1d-1f2675f84a03"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2868),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2875),
                            Display = false,
                            GuidRecord = new Guid("6957ac4e-15d9-4811-8dd2-d2fbb8f29199"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2877),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1918),
                            GuidRecord = new Guid("069d158f-1aab-4666-b0c5-12e117ec2e6a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1946),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1951),
                            GuidRecord = new Guid("69ba08fe-0c9b-43ad-b188-f8e0f079d588"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1952),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1956),
                            GuidRecord = new Guid("5f5b4bad-1536-40bf-9e2d-0cb583d85bd6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1958),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1990),
                            GuidRecord = new Guid("1c00aec7-a016-433d-bc68-c0a292e8a148"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1992),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2000),
                            GuidRecord = new Guid("d6992426-35f7-414b-82f3-a697dbf501ae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2002),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2007),
                            GuidRecord = new Guid("782cba74-22ad-4c54-b393-c00f931df89a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2008),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2012),
                            GuidRecord = new Guid("3ba2597d-a6f5-43b8-9e61-5d7c1b469390"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2014),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2017),
                            GuidRecord = new Guid("4667e7cb-eb69-44a8-a67e-b2811aa81ea6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2025),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2076),
                            GuidRecord = new Guid("da4187e0-bf84-4612-8ae9-f853fe1a567d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2078),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2428),
                            GuidRecord = new Guid("7255b669-8017-4656-99d9-2a36e3d7c040"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2430),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2435),
                            GuidRecord = new Guid("c65dc74b-e2ae-4436-9f89-1f67dc60661f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2437),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2444),
                            GuidRecord = new Guid("d26b9000-6f38-43da-a346-b4b0f7bafe76"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2446),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2540),
                            GuidRecord = new Guid("48232718-19b8-4aee-946b-d4169efdb767"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2542),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2546),
                            GuidRecord = new Guid("9cc0cd5a-e0f0-4534-82ca-bb059301ab07"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2548),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2552),
                            GuidRecord = new Guid("5b9898d8-7bfb-4247-8f0f-c4406c440bf1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2553),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2559),
                            GuidRecord = new Guid("59248c05-a85e-43ae-bd9a-ab549f6093d0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2561),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<bool?>("PC_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("PC_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PC_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1301),
                            GuidRecord = new Guid("f3b5fb21-d3c1-4545-bf96-529542ee6b96"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1364),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1414),
                            GuidRecord = new Guid("68c4011f-679b-48c0-a058-9bd4fd6cf166"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1415),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1421),
                            GuidRecord = new Guid("db334b0b-b51b-4d86-92e4-591c4bb7e239"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1431),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1850),
                            GuidRecord = new Guid("a3277912-4ac6-4255-a5cb-b845eced1ef1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1859),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1866),
                            GuidRecord = new Guid("4bbd2c81-e02d-4916-b3fe-9c19651585a3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1868),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1875),
                            GuidRecord = new Guid("2f24e0b4-716a-4b38-983f-a66c6ae13ba7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1877),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1881),
                            GuidRecord = new Guid("d9e71864-f8e9-4ff8-ac6a-76d95f5d6257"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(1882),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2370),
                            GuidRecord = new Guid("a623935a-eeec-49c7-a179-64a547e44b4f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2372),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2378),
                            GuidRecord = new Guid("d87d6a6c-c8ff-4652-be9e-0fcabf829890"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2379),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2383),
                            GuidRecord = new Guid("8e79265b-34e7-4f5f-a263-c4b318cba9da"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2385),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2391),
                            GuidRecord = new Guid("1c508da3-ba6d-4111-bdf2-f93218c232c0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2393),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2396),
                            GuidRecord = new Guid("c6c32dc2-8e39-4dc1-bbaa-d0205caa7b5e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2398),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2169),
                            GuidRecord = new Guid("a7a68fed-d019-492e-a118-a9640ee75b6c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2171),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2178),
                            GuidRecord = new Guid("93e06c0e-2d5a-4b41-8de0-b37c92034207"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2179),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2244),
                            GuidRecord = new Guid("4ee2130d-6a05-4b63-8ac5-efb932160115"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2246),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2251),
                            GuidRecord = new Guid("4c6b372d-6522-4fb9-9344-580978b3e614"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2253),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2256),
                            GuidRecord = new Guid("f6c1377b-f299-416a-b2f9-803b13ba4231"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2258),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2262),
                            GuidRecord = new Guid("ccb6c59c-6fd4-4ae1-b34a-876a13ab4566"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2263),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2267),
                            GuidRecord = new Guid("a69e7139-2371-4e90-bbab-997623083f80"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2268),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2275),
                            GuidRecord = new Guid("5dba682e-798f-440c-b5bf-951c95957e4f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2276),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2280),
                            GuidRecord = new Guid("7f7935a3-18f7-4c15-b87d-c7e75d64b110"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2281),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2285),
                            GuidRecord = new Guid("d9c5ba2e-79e2-4205-a619-f208c53a55d7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2287),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2121),
                            GuidRecord = new Guid("be091736-bba1-4aba-928e-d61dfff720d8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2124),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2129),
                            GuidRecord = new Guid("400d11d3-1747-4946-9fa5-83194a6dd7f7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2131),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2134),
                            GuidRecord = new Guid("033f8f14-e1f7-4118-b562-5b9266246375"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2136),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2142),
                            GuidRecord = new Guid("d5e7cf8e-4a04-40d5-86e9-0e5e9d38e167"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2143),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2334),
                            GuidRecord = new Guid("a9b28fdd-2db7-4312-a4f0-d849a8caf0ee"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2336),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2341),
                            GuidRecord = new Guid("74369ae4-8b9e-4e10-b24f-d0146a67eeba"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2343),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PRM_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("PRM_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("PRM_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("PRM_EndorsementId");

                    b.HasIndex("PRM_RequestId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Assignment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ReviewId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ReviewId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CD_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("CD_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<long?>("CD_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("CD_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_EndorsementId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CD_RequestId");

                    b.HasIndex("CD_ScenarioId");

                    b.HasIndex("CD_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CD_EndorsementId = 2L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2971),
                            GuidRecord = new Guid("2b832a43-8d47-43f0-96b6-12ca00e676f6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2974),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            PIndex = 1L,
                            PName = "Head_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 2L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 204L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3043),
                            GuidRecord = new Guid("d02ec4d0-81de-4cc4-b107-560668d00b3a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3045),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            PIndex = 2L,
                            PName = "Med_Scenario,Med,=,1"
                        },
                        new
                        {
                            Id = 3L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3051),
                            GuidRecord = new Guid("3f293ec4-13c1-48fd-be6d-e77cda86b609"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3052),
                            PCode = 3L,
                            PDisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            PIndex = 3L,
                            PName = "Med_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 4L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 205L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3057),
                            GuidRecord = new Guid("ad7dec15-b1de-4de6-9a2c-c2b0d24f669a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3058),
                            PCode = 4L,
                            PDisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            PIndex = 4L,
                            PName = "FMCG_Scenario,FMCG,=,1"
                        },
                        new
                        {
                            Id = 5L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 103L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3063),
                            GuidRecord = new Guid("a97cd7e8-8192-4808-a3fa-017ab6d59407"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3064),
                            PCode = 5L,
                            PDisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            PIndex = 5L,
                            PName = "FMCG_Scenario,Price,>,0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ED_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("ED_ScenarioId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3103),
                            ED_RoleId = 5L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("bdd3bff9-9a90-4bf2-9ebd-5da72e47d7d3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3106),
                            PCode = 1L,
                            PDisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            PIndex = 1L,
                            PName = "Med_Scenario,DistributionCenterManager"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3112),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("a406021f-d785-498a-ae37-3fb8e2b0cc54"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3113),
                            PCode = 2L,
                            PDisplayName = "سناریو سه,معاونت غذایی",
                            PIndex = 2L,
                            PName = "Strategy3,FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3120),
                            ED_RoleId = 1L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("5c1b62a4-2953-47a7-85bb-baab94ad1c67"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3121),
                            PCode = 3L,
                            PDisplayName = "سناریو دو,معاونت دارویی",
                            PIndex = 3L,
                            PName = "Strategy2,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3125),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("d01aecc4-764c-47a5-af09-ac24a924c4c1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3127),
                            PCode = 4L,
                            PDisplayName = "سناریو دارویی,معاونت دارویی",
                            PIndex = 4L,
                            PName = "Med_Scenario,PharmaceuticalDeputy"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RQT_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RQT_CurrentAssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(114);

                    b.Property<long?>("RQT_Current_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(112);

                    b.Property<long?>("RQT_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RQT_IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long?>("RQT_ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RQT_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("RQT_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<long?>("RQT_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.Property<long?>("RQT_SelectedScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(113);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("RQT_CreatorId");

                    b.HasIndex("RQT_CurrentAssignmentId");

                    b.HasIndex("RQT_Current_ReviewId");

                    b.HasIndex("RQT_ProcessId");

                    b.HasIndex("RQT_ProcessStateId");

                    b.HasIndex("RQT_RequestorId");

                    b.HasIndex("RQT_SelectedScenarioId");

                    b.ToTable("F_Request", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("APV_AssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_PerformerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_AssignmentId")
                        .IsUnique()
                        .HasFilter("[APV_AssignmentId] IS NOT NULL");

                    b.HasIndex("APV_PerformerId");

                    b.HasIndex("APV_RequestId");

                    b.HasIndex("APV_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Review", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2924),
                            GuidRecord = new Guid("73d6fcd8-6c9a-4a91-ab20-7a15b24952d6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2927),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد",
                            PIndex = 1L,
                            PName = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2934),
                            GuidRecord = new Guid("354ecfec-0dd0-4870-bb1a-73278e944d6a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2935),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2941),
                            GuidRecord = new Guid("0b9b1e2e-5037-4051-a7e7-7fb35018c96f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(2943),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی",
                            PIndex = 3L,
                            PName = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3514),
                            FirstId = 1L,
                            GuidRecord = new Guid("d76465c1-fb4d-4796-9d1f-82078460a648"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3524),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            PIndex = 1L,
                            PName = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3541),
                            FirstId = 1L,
                            GuidRecord = new Guid("75f7df3c-de2c-4d0e-9091-f72bb6711003"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3542),
                            PCode = 2L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            PIndex = 2L,
                            PName = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3546),
                            FirstId = 2L,
                            GuidRecord = new Guid("18dfb9f9-9920-445c-83a3-5778ef421a34"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3548),
                            PCode = 3L,
                            PDisplayName = "مجوزهای موردی-سناریو یک",
                            PIndex = 3L,
                            PName = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3551),
                            FirstId = 1L,
                            GuidRecord = new Guid("4000ce49-cf8a-4489-873d-e074b6544fd1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3553),
                            PCode = 4L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            PIndex = 4L,
                            PName = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3557),
                            FirstId = 2L,
                            GuidRecord = new Guid("b26d2d23-1df3-4029-b154-679078c8a8c1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3559),
                            PCode = 5L,
                            PDisplayName = "مجوزهای موردی-سناریو دو",
                            PIndex = 5L,
                            PName = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3198),
                            FirstId = 1L,
                            GuidRecord = new Guid("c63e1949-02d5-4547-a767-1d0fb56d7688"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3200),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3205),
                            FirstId = 2L,
                            GuidRecord = new Guid("21122b5a-d62e-4248-a71e-7baad108a025"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3207),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3211),
                            FirstId = 3L,
                            GuidRecord = new Guid("52bebed4-8d79-4736-bbd8-85321bee20fe"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3212),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3216),
                            FirstId = 3L,
                            GuidRecord = new Guid("f0446d11-33ca-4e1f-9fac-8d32891b9118"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3218),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3224),
                            FirstId = 4L,
                            GuidRecord = new Guid("af22e5df-0d13-4d33-88ee-ca5881711a67"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3226),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3229),
                            FirstId = 4L,
                            GuidRecord = new Guid("d85d7664-ef23-4fd6-9286-7a7ab8eea497"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3231),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3235),
                            FirstId = 5L,
                            GuidRecord = new Guid("7a177fce-95dc-4b09-b04d-0542fbee5aa7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3236),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserAssignment", "Links");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3158),
                            FirstId = 1L,
                            GuidRecord = new Guid("7bc35631-f7d1-4312-b9c6-24d3b4311c1b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3160),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3167),
                            FirstId = 2L,
                            GuidRecord = new Guid("94a7fe09-acb5-483e-8ccc-884a8ccbff5b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3169),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3618),
                            FirstId = 1L,
                            GuidRecord = new Guid("b113b8f3-3db8-4f9b-8345-50d52a3a1e12"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3622),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-مدیر مرکز",
                            PIndex = 1L,
                            PName = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3670),
                            FirstId = 2L,
                            GuidRecord = new Guid("9a06e1d0-44c4-45fb-b1af-57b89eef58ca"),
                            LastUpdatedRecord = new DateTime(2023, 5, 17, 16, 26, 13, 65, DateTimeKind.Local).AddTicks(3672),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-معاون غذایی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGDeputy",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId");

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "PRM_Endorsement")
                        .WithMany()
                        .HasForeignKey("PRM_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "PRM_Request")
                        .WithMany("RQT_Assignments")
                        .HasForeignKey("PRM_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PRM_Endorsement");

                    b.Navigation("PRM_Request");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Review", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "CD_Endorsement")
                        .WithMany("ED_Conditions")
                        .HasForeignKey("CD_EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "CD_Request")
                        .WithMany("RQT_Conditions")
                        .HasForeignKey("CD_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "CD_Scenario")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_Tag")
                        .WithMany()
                        .HasForeignKey("CD_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_Endorsement");

                    b.Navigation("CD_Operand");

                    b.Navigation("CD_Request");

                    b.Navigation("CD_Scenario");

                    b.Navigation("CD_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ED_Scenario")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_ScenarioId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_Role");

                    b.Navigation("ED_Scenario");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Creator")
                        .WithMany()
                        .HasForeignKey("RQT_CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "RQT_CurrentAssignment")
                        .WithMany()
                        .HasForeignKey("RQT_CurrentAssignmentId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "RQT_Current_Review")
                        .WithMany()
                        .HasForeignKey("RQT_Current_ReviewId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "RQT_Process")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RQT_ProcessState")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Requestor")
                        .WithMany()
                        .HasForeignKey("RQT_RequestorId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "RQT_SelectedScenario")
                        .WithMany()
                        .HasForeignKey("RQT_SelectedScenarioId");

                    b.Navigation("ParentId");

                    b.Navigation("RQT_Creator");

                    b.Navigation("RQT_CurrentAssignment");

                    b.Navigation("RQT_Current_Review");

                    b.Navigation("RQT_Process");

                    b.Navigation("RQT_ProcessState");

                    b.Navigation("RQT_Requestor");

                    b.Navigation("RQT_SelectedScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "APV_Assignment")
                        .WithOne("PRM_Review")
                        .HasForeignKey("Cheetah_Business.Facts.F_Review", "APV_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_Performer")
                        .WithMany()
                        .HasForeignKey("APV_PerformerId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "APV_Request")
                        .WithMany("RQT_Reviews")
                        .HasForeignKey("APV_RequestId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "APV_Tag")
                        .WithMany()
                        .HasForeignKey("APV_TagId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Assignment");

                    b.Navigation("APV_Performer");

                    b.Navigation("APV_Request");

                    b.Navigation("APV_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "PS_Process")
                        .WithMany("PC_ProcessScenario")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "PS_Scenario")
                        .WithMany("EP_ProcessScenarios")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PS_Process");

                    b.Navigation("PS_Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserAssignment", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UA_User")
                        .WithMany()
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "UA_Assignment")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Assignment");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserPositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PC_ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PRM_Review");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ED_Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RQT_Assignments");

                    b.Navigation("RQT_Conditions");

                    b.Navigation("RQT_Reviews");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");

                    b.Navigation("EP_ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

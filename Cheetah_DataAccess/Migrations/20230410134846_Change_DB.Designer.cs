// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230410134846_Change_DB")]
    partial class Change_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Area", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4609),
                            DsblRecord = false,
                            GuidRecord = new Guid("84aac5a5-1a68-4319-968e-eda5ceb6fc6f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4693),
                            PCode = 1L,
                            PDisplayName = "فروش دارویی",
                            PIndex = 1L,
                            PName = "DrugSale"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4759),
                            DsblRecord = false,
                            GuidRecord = new Guid("7c62a314-9551-409f-b30d-9c8b5e93a166"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4762),
                            PCode = 2L,
                            PDisplayName = "فروش مصرفی",
                            PIndex = 2L,
                            PName = "FMCGSale"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4768),
                            DsblRecord = false,
                            GuidRecord = new Guid("0cdfbaed-7f90-474f-8e54-41ac51074f97"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4782),
                            PCode = 3L,
                            PDisplayName = "حسابداری خرید",
                            PIndex = 3L,
                            PName = "PurchaseAccounting"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4796),
                            DsblRecord = false,
                            GuidRecord = new Guid("af04c50e-77b6-42ff-9303-fa0a35b6a920"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(4799),
                            PCode = 4L,
                            PDisplayName = "حسابداری فروش",
                            PIndex = 4L,
                            PName = "SaleAccounting"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_EndorsementPattern", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7218),
                            DsblRecord = false,
                            GuidRecord = new Guid("ebceeb73-d493-49d2-890a-5f5e1f9f16b9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7221),
                            PCode = 100L,
                            PDisplayName = "واحدها(Dimentions)",
                            PIndex = 100L,
                            PName = "D_Area"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7549),
                            DsblRecord = false,
                            GuidRecord = new Guid("0f8bc68b-7e67-4fb3-a73d-c4a0a563f95e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7554),
                            PCode = 101L,
                            PDisplayName = "نوع فیلد(Dimentions)",
                            PIndex = 101L,
                            PName = "D_FieldType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7573),
                            DsblRecord = false,
                            GuidRecord = new Guid("49728bc8-49f4-4582-9e71-aedb88aef75c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7576),
                            PCode = 102L,
                            PDisplayName = "موقعیت ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7586),
                            DsblRecord = false,
                            GuidRecord = new Guid("437890b5-979d-4096-9932-1ff3fec90570"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7589),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7599),
                            DsblRecord = false,
                            GuidRecord = new Guid("8c3a71c8-06cc-4f00-b028-f1c52cc989b8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7602),
                            PCode = 104L,
                            PDisplayName = "لیست پارامترها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_ParameterList"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7627),
                            DsblRecord = false,
                            GuidRecord = new Guid("169a039d-dbf6-41e0-8510-21802e5368de"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7630),
                            PCode = 105L,
                            PDisplayName = "نوع پارامتر(Dimentions)",
                            PIndex = 105L,
                            PName = "D_ParameterType"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7640),
                            DsblRecord = false,
                            GuidRecord = new Guid("2e710d60-fe92-4d2c-82e6-370c6569acb9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7642),
                            PCode = 106L,
                            PDisplayName = "سمت ها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7652),
                            DsblRecord = false,
                            GuidRecord = new Guid("03438534-3302-426a-8242-bb701bc8283c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7655),
                            PCode = 107L,
                            PDisplayName = "تاییدات فرآیندی(Dimentions)",
                            PIndex = 107L,
                            PName = "D_ProcessEndorsement"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7664),
                            DsblRecord = false,
                            GuidRecord = new Guid("793a426f-c9da-43dd-a69d-cf64875dbc8e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7667),
                            PCode = 108L,
                            PDisplayName = "وضعیت فرآیند(Dimentions)",
                            PIndex = 108L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7680),
                            DsblRecord = false,
                            GuidRecord = new Guid("788bfec3-461c-4727-9fce-9c46bfee3f78"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7683),
                            PCode = 109L,
                            PDisplayName = "عنوان درخواست(Dimentions)",
                            PIndex = 109L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 110L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7696),
                            DsblRecord = false,
                            GuidRecord = new Guid("95681f92-fdb8-4241-85fd-5c94845cc491"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7699),
                            PCode = 110L,
                            PDisplayName = "نقش ها(Dimentions)",
                            PIndex = 110L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 113L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7708),
                            DsblRecord = false,
                            GuidRecord = new Guid("5ecd6b84-f962-4ea6-b364-3d1ad87e019a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7711),
                            PCode = 113L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 111L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7720),
                            DsblRecord = false,
                            GuidRecord = new Guid("6fe1d672-3533-4017-9a32-5b3019df040f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7723),
                            PCode = 200L,
                            PDisplayName = "تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7735),
                            DsblRecord = false,
                            GuidRecord = new Guid("ee1a8bca-1e7d-4389-b55f-0ec0ad38b757"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7737),
                            PCode = 201L,
                            PDisplayName = "تایید(Facts)",
                            PIndex = 201L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7747),
                            DsblRecord = false,
                            GuidRecord = new Guid("d50c2db6-748a-477c-bcd5-4b0b0f7dc164"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7750),
                            PCode = 202L,
                            PDisplayName = "ضمیمه ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7834),
                            DsblRecord = false,
                            GuidRecord = new Guid("f4d76f4b-e107-4735-b6e6-c0c330d1fdc7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7837),
                            PCode = 203L,
                            PDisplayName = "اختصاص نقش‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7846),
                            DsblRecord = false,
                            GuidRecord = new Guid("081b7b67-c17c-4662-8164-955f799aa718"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7849),
                            PCode = 204L,
                            PDisplayName = "لیست پارامترها(Facts)",
                            PIndex = 204L,
                            PName = "F_ListOfParameter"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7860),
                            DsblRecord = false,
                            GuidRecord = new Guid("31d6da21-a603-4b79-a77a-ff6902a895ab"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7863),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست ها(Facts)",
                            PIndex = 205L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7876),
                            DsblRecord = false,
                            GuidRecord = new Guid("ad1bcc35-1dae-4e1f-8fb0-24d04a90a3d8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7879),
                            PCode = 206L,
                            PDisplayName = "اطلاعات کاربران(Facts)",
                            PIndex = 206L,
                            PName = "F_UserInformation"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7888),
                            DsblRecord = false,
                            GuidRecord = new Guid("92154240-1105-46cf-8294-7fba80a2998f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7891),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7900),
                            DsblRecord = false,
                            GuidRecord = new Guid("eba4defe-4178-4e46-8f13-2ddfe663d75e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7903),
                            PCode = 301L,
                            PDisplayName = "کاربر-واحدها(Links)",
                            PIndex = 301L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7923),
                            DsblRecord = false,
                            GuidRecord = new Guid("71996130-f7e4-4852-9fab-c1cf88e8ecce"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7926),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7937),
                            DsblRecord = false,
                            GuidRecord = new Guid("6086f4fa-7f01-4d47-9069-da9a76d87d3f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7940),
                            PCode = 303L,
                            PDisplayName = "کاربر-موقعیت‌های مرتبط(Links)",
                            PIndex = 303L,
                            PName = "L_UserRelatedLocation"
                        },
                        new
                        {
                            Id = 304L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7952),
                            DsblRecord = false,
                            GuidRecord = new Guid("bb8b8cfd-befe-46a3-afe1-631af9d5e202"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7955),
                            PCode = 304L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 304L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_FieldType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6349),
                            DsblRecord = false,
                            GuidRecord = new Guid("b688524d-0796-41f1-95bf-a69d4c5d17de"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6385),
                            PCode = 1L,
                            PDisplayName = "پارامتریک",
                            PIndex = 1L,
                            PName = "Parameter"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6516),
                            DsblRecord = false,
                            GuidRecord = new Guid("1b1e8395-226d-43d9-8bff-1de44d700534"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6524),
                            PCode = 2L,
                            PDisplayName = "عددی",
                            PIndex = 2L,
                            PName = "Number"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6530),
                            DsblRecord = false,
                            GuidRecord = new Guid("cd42a99e-a6f5-447a-b7a1-424f855245ac"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6533),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6538),
                            DsblRecord = false,
                            GuidRecord = new Guid("41c62130-d6ff-4cc5-af63-ff3a01fc3d5b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6541),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6546),
                            DsblRecord = false,
                            GuidRecord = new Guid("f5d6d1bc-0ef5-4613-911d-dabc3bca41ca"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6549),
                            PCode = 5L,
                            PDisplayName = "دودویی",
                            PIndex = 5L,
                            PName = "Boolean"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6217),
                            DsblRecord = false,
                            GuidRecord = new Guid("ab4de927-b892-4abd-8e9e-6e5b4b718840"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6229),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6244),
                            DsblRecord = false,
                            GuidRecord = new Guid("94c0fa87-d4aa-469c-ae37-13fccaf3b5e5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6261),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6271),
                            DsblRecord = false,
                            GuidRecord = new Guid("4e152900-dc11-4bb1-9b97-8246cfea40b6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6275),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6663),
                            DsblRecord = false,
                            GuidRecord = new Guid("ce74054c-9b9d-439d-b7ae-43a836b0ad6a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6666),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6672),
                            DsblRecord = false,
                            GuidRecord = new Guid("0a87339e-f4ae-46a7-946c-d172e60203e4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6674),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6704),
                            DsblRecord = false,
                            GuidRecord = new Guid("60e04166-027d-4bc8-8ed1-fca11573dd41"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6707),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6718),
                            DsblRecord = false,
                            GuidRecord = new Guid("53a35ad7-6f2d-4ed0-a5a8-fc818ebaa4d7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6721),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6726),
                            DsblRecord = false,
                            GuidRecord = new Guid("32ef0b93-cd7b-4c69-9f0e-9fb491b61b98"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6728),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6733),
                            DsblRecord = false,
                            GuidRecord = new Guid("d4ec1fe0-fbbe-4f00-a2b1-af51784ab721"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6736),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("PL_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PL_ParameterTypeId");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterList", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6829),
                            DsblRecord = false,
                            GuidRecord = new Guid("41573ff2-dfd0-4d14-9f93-f0bdd6d837ce"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6832),
                            PCode = 100L,
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PL_ParameterTypeId = 1L,
                            PName = "OursShare"
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6840),
                            DsblRecord = false,
                            GuidRecord = new Guid("c4ceda89-7f98-489c-b067-dd7f13285541"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6843),
                            PCode = 101L,
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PL_ParameterTypeId = 1L,
                            PName = "OthersShare"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6869),
                            DsblRecord = false,
                            GuidRecord = new Guid("2928ae73-b1d1-49c8-a38c-a95fcf456fdc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6871),
                            PCode = 102L,
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 102L,
                            PL_ParameterTypeId = 1L,
                            PName = "Refrigerator"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6881),
                            DsblRecord = false,
                            GuidRecord = new Guid("7cece7bd-490e-4ac8-be01-0ed7e4fa0160"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6884),
                            PCode = 103L,
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PL_ParameterTypeId = 1L,
                            PName = "Price"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6889),
                            DsblRecord = false,
                            GuidRecord = new Guid("43fe23f4-9051-41fd-b485-a7ff09b8374f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6892),
                            PCode = 200L,
                            PDisplayName = "تایید",
                            PIndex = 200L,
                            PL_ParameterTypeId = 2L,
                            PName = "Approve"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6898),
                            DsblRecord = false,
                            GuidRecord = new Guid("bf33651a-ae16-4780-9797-e2699fb76a67"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6901),
                            PCode = 201L,
                            PDisplayName = "عدم تایید",
                            PIndex = 201L,
                            PL_ParameterTypeId = 2L,
                            PName = "Reject"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6906),
                            DsblRecord = false,
                            GuidRecord = new Guid("76d4ed52-bf3c-4559-b672-d8f4d83ffeb0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6909),
                            PCode = 202L,
                            PDisplayName = "بازنگری",
                            PIndex = 202L,
                            PL_ParameterTypeId = 2L,
                            PName = "Revise"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6914),
                            DsblRecord = false,
                            GuidRecord = new Guid("da21c91d-cb8b-4e85-8373-106b0958389d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6916),
                            PCode = 301L,
                            PDisplayName = "دارویی",
                            PIndex = 301L,
                            PL_ParameterTypeId = 3L,
                            PName = "Med"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6922),
                            DsblRecord = false,
                            GuidRecord = new Guid("1e772993-209c-495a-a5fc-aa67803b444b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6924),
                            PCode = 302L,
                            PDisplayName = "مصرفی",
                            PIndex = 302L,
                            PL_ParameterTypeId = 3L,
                            PName = "FMCG"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6929),
                            DsblRecord = false,
                            GuidRecord = new Guid("58c6cc30-715c-4412-833e-fcae275619fd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6932),
                            PCode = 303L,
                            PDisplayName = "کل",
                            PIndex = 303L,
                            PL_ParameterTypeId = 3L,
                            PName = "General"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_P_FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_P_FieldTypeId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6775),
                            DsblRecord = false,
                            GuidRecord = new Guid("ceb348cd-aaf7-4f33-a0ec-1d10954c81c3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6778),
                            PCode = 1L,
                            PDisplayName = "متغیر فرآیندی",
                            PIndex = 1L,
                            PName = "ProcessVar"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6785),
                            DsblRecord = false,
                            GuidRecord = new Guid("fa673966-0be3-485c-90a7-1a79d02f2ccf"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6787),
                            PCode = 2L,
                            PDisplayName = "اقدام‌های فرآیندی",
                            PIndex = 2L,
                            PName = "ProcessAction"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6792),
                            DsblRecord = false,
                            GuidRecord = new Guid("cd3239d3-5b0d-4587-8f2f-b0459212d5af"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6795),
                            PCode = 3L,
                            PDisplayName = "نوع واحد",
                            PIndex = 3L,
                            PName = "UnitType"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7118),
                            DsblRecord = false,
                            GuidRecord = new Guid("fd3d47d8-44c8-4c71-bef1-d2f7e139ea2c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7121),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7131),
                            DsblRecord = false,
                            GuidRecord = new Guid("d6b93e75-7241-49b6-a171-ab25e2da0582"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7133),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7139),
                            DsblRecord = false,
                            GuidRecord = new Guid("056fb997-0584-4569-8020-17ec4637ac0c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7141),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7147),
                            DsblRecord = false,
                            GuidRecord = new Guid("2e616e66-3088-465e-a218-99297ac1c929"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7149),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7154),
                            DsblRecord = false,
                            GuidRecord = new Guid("4eb633bb-ff3a-4143-b86c-7d3ebe7b5b75"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7157),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7163),
                            DsblRecord = false,
                            GuidRecord = new Guid("85b28c0b-2b66-4bc3-98d9-61b225bd741b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7165),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7171),
                            DsblRecord = false,
                            GuidRecord = new Guid("e09623fa-5c2f-434a-9904-6d9242ff3712"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7173),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("PSE_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSE_EndorsementPatternId");

                    b.HasIndex("PSE_ExpertUserId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessEndorsement", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6077),
                            DsblRecord = false,
                            GuidRecord = new Guid("5e7a2d9e-f0a5-4465-b7ff-fe6fd05e9e0e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6123),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6133),
                            DsblRecord = false,
                            GuidRecord = new Guid("bd197d5a-0d79-424f-a577-97823530d838"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6136),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6142),
                            DsblRecord = false,
                            GuidRecord = new Guid("34f16fb2-cc00-47ec-809c-c4671d5bfd73"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6145),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6153),
                            DsblRecord = false,
                            GuidRecord = new Guid("e5c52e28-418c-4cc9-b7f9-f5e9e7851014"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6156),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_RequestTitle", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5794),
                            DsblRecord = false,
                            GuidRecord = new Guid("36abbb97-f682-4bb3-a987-024db5d751f4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5846),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5926),
                            DsblRecord = false,
                            GuidRecord = new Guid("73d393df-17a4-4b02-8700-c88a8e46ae8c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5947),
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5994),
                            DsblRecord = false,
                            GuidRecord = new Guid("0f046dad-894e-4bb2-b2de-ab93aff03541"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(5997),
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7032),
                            DsblRecord = false,
                            GuidRecord = new Guid("d090f76b-fcc3-49ed-9d06-5a0b643aa03b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7035),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7052),
                            DsblRecord = false,
                            GuidRecord = new Guid("20976d46-3ada-43fc-aadc-f97f03485bde"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7054),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7060),
                            DsblRecord = false,
                            GuidRecord = new Guid("ad00f5cc-7e20-421d-be18-d95b112f5d1e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7062),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7068),
                            DsblRecord = false,
                            GuidRecord = new Guid("fd305e20-362d-4137-b2cb-e44490d9ad93"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7070),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7076),
                            DsblRecord = false,
                            GuidRecord = new Guid("26d4a90d-da63-4694-9fb1-b6b89172d7ba"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7078),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6986),
                            DsblRecord = false,
                            GuidRecord = new Guid("b2a1c977-906b-4706-8f98-708f1d97ee5a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6989),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(6998),
                            DsblRecord = false,
                            GuidRecord = new Guid("cea53a7e-6933-4830-af65-0b76a6e68510"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(7000),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_ProcessEndorsementId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UP_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UP_ProcessEndorsementId");

                    b.HasIndex("UP_RoleId");

                    b.ToTable("F_EndorsementPosition", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("LOP_BooleanValue")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<float?>("LOP_FloatValue")
                        .HasColumnType("real")
                        .HasColumnOrder(100);

                    b.Property<long?>("LOP_ParameterListId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOP_StringValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_OperandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_ProcessEndorsementId");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LOP_ParameterListId");

                    b.HasIndex("LOP_ParameterTypeId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_OperandId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_ListOfParameter", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("RI_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ExpertUserId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_UserInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8083),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("7f762638-0d66-4c88-a947-6f35c42fc22b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8086),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8092),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("187e0520-a9ec-4d0d-8747-87c90273fc62"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8094),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8100),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("5457540a-f813-4f8a-841f-87df4d273a0e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8102),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8107),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("7da82863-76ee-4cce-aab3-d4f7163c8ee2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8110),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8115),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("06a85239-7f9d-40e7-858c-eb49cb5e6119"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8118),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8123),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("38ff5261-bd78-4ea0-876a-20ad07a250a3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8125),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8131),
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("793b2968-cfc7-4ffa-a2c8-995738324a6b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8133),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserArea", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8161),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("47e19958-8a04-4ea6-a46f-9a5c2078dff2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8164),
                            PCode = 1L,
                            PDisplayName = "امین شریفی-فروش دارویی",
                            PIndex = 1L,
                            PName = "a.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8173),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("bdf90df8-ac35-4bc6-9c1c-099a546029a2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8176),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فروش مصرفی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGSale",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8181),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("3bd0c897-fb0a-4038-bc07-053b31b0e2f9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8184),
                            PCode = 3L,
                            PDisplayName = "محمد شریفی-فروش دارویی",
                            PIndex = 3L,
                            PName = "m.sharifi-DrugSale",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8189),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("7bfed4c7-7cb1-48a1-aa48-0a7b4011c7a5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8191),
                            PCode = 4L,
                            PDisplayName = "محمد شریفی-فروش مصرفی",
                            PIndex = 4L,
                            PName = "m.sharifi-FMCGSale",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8032),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("d15ef75e-426c-496a-b098-2135a39d44cd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8036),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8045),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("33c1b128-117d-45bd-9d87-09fdc9050247"),
                            LastUpdatedRecord = new DateTime(2023, 4, 10, 18, 18, 45, 54, DateTimeKind.Local).AddTicks(8047),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_PositionId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRole", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRelatedLocation", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "PL_ParameterType")
                        .WithMany("PT_ParameterList")
                        .HasForeignKey("PL_ParameterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PL_ParameterType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PT_P_FieldType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", "PSE_EndorsementPattern")
                        .WithMany("EP_ProcessEndorsement")
                        .HasForeignKey("PSE_EndorsementPatternId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSE_EndorsementPattern");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "APV_ProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("APV_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_ProcessEndorsement");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "UP_ProcessEndorsement")
                        .WithMany("PSE_EndorsementPosition")
                        .HasForeignKey("UP_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("UP_RoleId");

                    b.Navigation("ParentId");

                    b.Navigation("UP_ProcessEndorsement");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", null)
                        .WithMany("PSE_ListOfParameter")
                        .HasForeignKey("D_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", null)
                        .WithMany("User_ListOfParameters")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", null)
                        .WithMany("RI_ListOfParameters")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "LOP_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterListId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "LOP_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "PT_Operand")
                        .WithMany()
                        .HasForeignKey("PT_OperandId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_ListOfParameter", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("LOP_ParameterList");

                    b.Navigation("LOP_ParameterType");

                    b.Navigation("PT_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Facts.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAreas")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "UA_Area")
                        .WithMany("Area_UserAreas")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Area");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", null)
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("D_PositionId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Role");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_Related_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_RelatedLocation")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_RelatedLocation");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Navigation("Area_UserAreas");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_ProcessEndorsement");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PT_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSE_EndorsementPosition");

                    b.Navigation("PSE_ListOfParameter");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_ListOfParameters");

                    b.Navigation("User_Related_UserLocations");

                    b.Navigation("User_UserAreas");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_ListOfParameter", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

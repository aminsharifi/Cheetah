// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230515110742_Add_F_Condition")]
    partial class Add_F_Condition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4822),
                            Display = false,
                            GuidRecord = new Guid("0184faae-42e4-49fd-bf26-b8b14e3b4a38"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4824),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4872),
                            Display = true,
                            GuidRecord = new Guid("7ed5e893-611b-49a8-9db5-6b4fb8193cb2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4874),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4880),
                            Display = false,
                            GuidRecord = new Guid("6b091146-a3b9-4248-b32e-85ae91b8ba66"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4882),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4889),
                            Display = true,
                            GuidRecord = new Guid("2c4b416d-81f1-45e0-a797-dd9e38dffe75"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4890),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4897),
                            Display = true,
                            GuidRecord = new Guid("689c53bd-662f-4eeb-8246-2762db7de059"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4899),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4905),
                            Display = false,
                            GuidRecord = new Guid("b733d130-0637-4a0e-9427-ff17f36f95e0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4906),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4915),
                            Display = true,
                            GuidRecord = new Guid("9f96078d-de82-4901-b50a-f39446badd48"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4916),
                            PCode = 107L,
                            PDisplayName = "فرآیند‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4925),
                            Display = true,
                            GuidRecord = new Guid("4dce9810-4ad7-4e37-8785-a68c3db30a4f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4927),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4934),
                            Display = true,
                            GuidRecord = new Guid("a7a7774f-c2a9-42cc-be27-31fe12a1b532"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4935),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4942),
                            Display = false,
                            GuidRecord = new Guid("d15f6777-4e7b-4591-b1cc-c3a32dda8ce8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4943),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4979),
                            Display = false,
                            GuidRecord = new Guid("7c4e2f69-4f59-47b4-a1f6-445c7b70446b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4981),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_Assignment"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4988),
                            Display = false,
                            GuidRecord = new Guid("313b2826-4c17-470d-8482-63a84ec15eb7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4990),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Review"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4997),
                            Display = false,
                            GuidRecord = new Guid("88e406e4-86dd-46f8-8b0f-0a80c6d1653b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4999),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5005),
                            Display = false,
                            GuidRecord = new Guid("750459ba-cb4d-4931-8ffe-a70344f7c4f4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5006),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5013),
                            Display = false,
                            GuidRecord = new Guid("29175cad-b35e-4c53-a5ef-cdb5ef9aac14"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5015),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5029),
                            Display = true,
                            GuidRecord = new Guid("ea427bf5-2669-4b47-bc52-f767b417105a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5031),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_Request"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5038),
                            Display = true,
                            GuidRecord = new Guid("5214685b-ba59-425e-99d7-7ccdfa9c1d21"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5039),
                            PCode = 206L,
                            PDisplayName = "سناریوها(Facts)",
                            PIndex = 206L,
                            PName = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5045),
                            Display = false,
                            GuidRecord = new Guid("a66f2cda-8209-4f66-88b8-91b9fd2dd032"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5047),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5054),
                            Display = false,
                            GuidRecord = new Guid("9ea3c0a7-5b35-41d3-9680-c0868233a329"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5056),
                            PCode = 301L,
                            PDisplayName = "فرآیند-سناریو(Links)",
                            PIndex = 301L,
                            PName = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5063),
                            Display = false,
                            GuidRecord = new Guid("b886fb08-5574-42fc-9417-00cece2439b3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5064),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5070),
                            Display = false,
                            GuidRecord = new Guid("53e9be66-ebed-4b99-825c-7bf3e9770382"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5072),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4203),
                            GuidRecord = new Guid("d436d6c3-be2f-43bb-bad7-fef1f982fd0d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4228),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4232),
                            GuidRecord = new Guid("b73759ae-ab57-4a24-a072-09991f277648"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4234),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4237),
                            GuidRecord = new Guid("d7e37c7d-706a-44ed-ae8c-8ade0a6c4be4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4239),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4265),
                            GuidRecord = new Guid("a64bd45d-176a-4e55-8ac9-28872c2f503c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4267),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4274),
                            GuidRecord = new Guid("373fe6f6-cff8-4a74-b4d5-3d34d8b9b7ff"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4275),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4279),
                            GuidRecord = new Guid("c1dbe579-b01e-4aa0-8c94-4b2e8ac10762"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4280),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4284),
                            GuidRecord = new Guid("1b283f96-815a-489e-aebd-2e17e76c6ae8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4286),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4289),
                            GuidRecord = new Guid("acc74b6a-0617-47bc-94fc-98c28f52f2f8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4295),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4377),
                            GuidRecord = new Guid("d1f4aa3f-ab51-4b99-beba-d1e645fe9817"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4379),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4688),
                            GuidRecord = new Guid("fb1c07e1-5195-4646-ae81-a3cd548782df"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4690),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4757),
                            GuidRecord = new Guid("9fb921e5-2548-4f1a-8e3b-7e61509db76d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4759),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4763),
                            GuidRecord = new Guid("1646e387-a3bd-4740-8f6f-15a0aea42893"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4764),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4768),
                            GuidRecord = new Guid("aff98783-c151-4b0e-8857-ab498dda03b4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4769),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4773),
                            GuidRecord = new Guid("6dd94ac7-394e-48de-8a52-ec1bcc99b1a4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4775),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4778),
                            GuidRecord = new Guid("5fd437e5-d0e4-4fe5-8fa9-c64c2ef97c62"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4780),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4787),
                            GuidRecord = new Guid("2c6d35bf-deb0-498c-9ef8-98d55f81d545"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4789),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<bool?>("PC_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("PC_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PC_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3693),
                            GuidRecord = new Guid("89ba5902-eb92-4ceb-8330-e8522000d6a8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3761),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3809),
                            GuidRecord = new Guid("6b45e81e-b9b2-410a-afe5-e4f5ff47e2ae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3811),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3815),
                            GuidRecord = new Guid("c64f8c05-eab9-4e89-a659-6353f0fe9ad9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(3828),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4143),
                            GuidRecord = new Guid("280ad962-f626-41bf-a690-b54b4c77de09"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4146),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4152),
                            GuidRecord = new Guid("d5a91214-5a2a-4560-b0ff-a3e158368981"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4154),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4162),
                            GuidRecord = new Guid("addeeb7b-be08-4fee-826c-470b83ab110f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4164),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4168),
                            GuidRecord = new Guid("d9c414cb-6bd4-4bda-800a-7b9921370e6c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4169),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4636),
                            GuidRecord = new Guid("83c1746e-e8ce-4de3-8030-e0c6f4c2c6ac"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4638),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4644),
                            GuidRecord = new Guid("19b8968b-ecd6-46fe-9999-330d6e8929cc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4645),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4650),
                            GuidRecord = new Guid("bf83b0a5-d6ee-43e9-b82f-8b0582065589"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4651),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4657),
                            GuidRecord = new Guid("eee78c6b-d35d-4269-8c39-0044457f59d5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4659),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4662),
                            GuidRecord = new Guid("ddefa40f-c094-47ff-a61d-6cd6d9fc976e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4664),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4511),
                            GuidRecord = new Guid("61772d47-db47-499e-9881-4b5ba035a456"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4513),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4519),
                            GuidRecord = new Guid("f33ec48f-1477-40fb-b3e2-156cdb01a255"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4520),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4524),
                            GuidRecord = new Guid("1fb62636-1e3c-4d48-9112-e6ac5455c1db"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4526),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4529),
                            GuidRecord = new Guid("a8612dde-b396-4d5b-b48c-fd7bd6ede861"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4531),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4535),
                            GuidRecord = new Guid("988aceaa-cb01-4422-85a6-020fd8623960"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4536),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4542),
                            GuidRecord = new Guid("feea0e00-daf9-434e-bc94-4deca84cd149"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4544),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4547),
                            GuidRecord = new Guid("41f30718-5dd9-47c5-9adc-6ab4699abff9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4549),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4555),
                            GuidRecord = new Guid("4831f352-3e5e-4bbc-ab94-4901ba99e612"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4556),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4560),
                            GuidRecord = new Guid("31fa7286-f705-41fb-8189-3d206ffdc211"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4562),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4565),
                            GuidRecord = new Guid("30771f0b-b56a-4589-854e-7b9a7fc3a40d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4567),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4426),
                            GuidRecord = new Guid("f7f04cb4-d658-4032-878b-016f0f5602d1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4428),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4432),
                            GuidRecord = new Guid("03c97b0c-e6ed-4354-a185-956b36b47d19"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4434),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4437),
                            GuidRecord = new Guid("36d25310-dddc-4daa-a8f3-d04549fd079b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4439),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4445),
                            GuidRecord = new Guid("1e575555-04b6-4b47-b639-10a452ced037"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4446),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_AssignmentId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_AssignmentId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4606),
                            GuidRecord = new Guid("a3dfc817-d038-47bc-8f7d-162f5f48a0b0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4608),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4612),
                            GuidRecord = new Guid("0bbf2e9e-bd07-4972-8f8a-eeaf1f66621f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(4613),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PRM_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("PRM_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("PRM_EndorsementId");

                    b.HasIndex("PRM_ReviewId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Assignment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ReviewId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ReviewId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CD_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("CD_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(105);

                    b.Property<long?>("CD_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("CD_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_EndorsementId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CD_RequestId");

                    b.HasIndex("CD_ScenarioId");

                    b.HasIndex("CD_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CD_EndorsementId = 2L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5177),
                            GuidRecord = new Guid("94fe85c2-28d4-4284-b9ee-0ae47ceab598"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5179),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد,سهم شرکت,بزگتر از,0",
                            PIndex = 1L,
                            PName = "Head_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 2L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 204L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5191),
                            GuidRecord = new Guid("35f46d1a-f83c-4d4e-8143-a6e958a3a585"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5192),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            PIndex = 2L,
                            PName = "Med_Scenario,Med,=,1"
                        },
                        new
                        {
                            Id = 3L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5197),
                            GuidRecord = new Guid("36060f35-ec2e-4a4a-a7cd-af6ac47af7cc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5198),
                            PCode = 3L,
                            PDisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            PIndex = 3L,
                            PName = "Med_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 4L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 205L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5202),
                            GuidRecord = new Guid("6d5ac8f9-3805-4d46-be4d-7fbc8f082ffc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5204),
                            PCode = 4L,
                            PDisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            PIndex = 4L,
                            PName = "FMCG_Scenario,FMCG,=,1"
                        },
                        new
                        {
                            Id = 5L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 103L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5208),
                            GuidRecord = new Guid("8cd18628-5094-4168-b306-ad634accd3f7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5210),
                            PCode = 5L,
                            PDisplayName = "سناریو مصرفی,مبلغ,بزگتر از,0",
                            PIndex = 5L,
                            PName = "FMCG_Scenario,Price,>,0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ED_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("ED_ScenarioId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5233),
                            ED_RoleId = 5L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("ecfd422e-6f5b-405b-9b58-c6c3fe036976"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5235),
                            PCode = 1L,
                            PDisplayName = "سناریو سه,مدیریت مرکز توزیع",
                            PIndex = 1L,
                            PName = "Med_Scenario,DistributionCenterManager"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5241),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 3L,
                            GuidRecord = new Guid("56ada24e-5cbb-4af1-a19c-86e3ac823984"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5243),
                            PCode = 2L,
                            PDisplayName = "سناریو سه,معاونت غذایی",
                            PIndex = 2L,
                            PName = "Strategy3,FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5249),
                            ED_RoleId = 1L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("b02b1a0d-8b54-46e8-972b-bb804cae481a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5250),
                            PCode = 3L,
                            PDisplayName = "سناریو دو,معاونت دارویی",
                            PIndex = 3L,
                            PName = "Strategy2,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5256),
                            ED_RoleId = 2L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("a6f49e5d-3f18-4531-a4dd-15beb460d5ad"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5257),
                            PCode = 4L,
                            PDisplayName = "سناریو دارویی,معاونت دارویی",
                            PIndex = 4L,
                            PName = "Med_Scenario,PharmaceuticalDeputy"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RQT_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RQT_Current_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(112);

                    b.Property<long?>("RQT_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RQT_IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long?>("RQT_ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RQT_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("RQT_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<long?>("RQT_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("Parent_Id");

                    b.HasIndex("RQT_CreatorId");

                    b.HasIndex("RQT_Current_ReviewId");

                    b.HasIndex("RQT_ProcessId");

                    b.HasIndex("RQT_ProcessStateId");

                    b.HasIndex("RQT_RequestorId");

                    b.ToTable("F_Request", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("APV_AssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_PerformerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_AssignmentId");

                    b.HasIndex("APV_PerformerId");

                    b.HasIndex("APV_RequestId");

                    b.HasIndex("APV_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Review", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5110),
                            GuidRecord = new Guid("7b7fdddb-5bf8-4cb1-a30a-519bdec955c5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5112),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد",
                            PIndex = 1L,
                            PName = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5116),
                            GuidRecord = new Guid("56bd2446-bdd9-40d5-9486-070854ce59d1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5117),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5151),
                            GuidRecord = new Guid("c2c89a9d-71d3-483e-a584-4df765323619"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5153),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی",
                            PIndex = 3L,
                            PName = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5395),
                            FirstId = 1L,
                            GuidRecord = new Guid("8fd6aff1-938a-4d57-ba45-93c8c550e7f7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5397),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            PIndex = 1L,
                            PName = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5401),
                            FirstId = 1L,
                            GuidRecord = new Guid("d8dcf998-8e4b-4f14-89f8-30d2555b51ca"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5403),
                            PCode = 2L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            PIndex = 2L,
                            PName = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5407),
                            FirstId = 2L,
                            GuidRecord = new Guid("fe2e2b5a-cb0c-4add-9814-3d19f834d246"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5409),
                            PCode = 3L,
                            PDisplayName = "مجوزهای موردی-سناریو یک",
                            PIndex = 3L,
                            PName = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5413),
                            FirstId = 1L,
                            GuidRecord = new Guid("56d19d9e-a13b-45a9-836e-c555326f0fa9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5414),
                            PCode = 4L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            PIndex = 4L,
                            PName = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5446),
                            FirstId = 2L,
                            GuidRecord = new Guid("dcbd2b74-44a9-42fd-b242-ca490c9ba2fa"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5448),
                            PCode = 5L,
                            PDisplayName = "مجوزهای موردی-سناریو دو",
                            PIndex = 5L,
                            PName = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5318),
                            FirstId = 1L,
                            GuidRecord = new Guid("bfebde53-7e5c-4b5d-963d-d6ceec67ef67"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5319),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5323),
                            FirstId = 2L,
                            GuidRecord = new Guid("4e804728-d133-4b2d-a55b-7dcccd85b23c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5325),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5329),
                            FirstId = 3L,
                            GuidRecord = new Guid("65ab7378-9777-4e2c-8b51-646becfd58c8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5331),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5334),
                            FirstId = 3L,
                            GuidRecord = new Guid("70d170e5-08fe-442e-8033-5d469e11fc97"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5336),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5345),
                            FirstId = 4L,
                            GuidRecord = new Guid("31f9a62a-5671-4b44-991b-fe61a582d5b8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5347),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5351),
                            FirstId = 4L,
                            GuidRecord = new Guid("3c21d3df-b380-4de1-9538-96b6ffc5c476"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5352),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5356),
                            FirstId = 5L,
                            GuidRecord = new Guid("3cd2fda9-3170-4d0a-a0a9-72d4a23dda94"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5358),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5287),
                            FirstId = 1L,
                            GuidRecord = new Guid("1e0fd6f0-58c1-41c3-9487-c87fa3f002cd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5289),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5294),
                            FirstId = 2L,
                            GuidRecord = new Guid("695b3fc0-7eb8-468e-8e8f-4700ece4ebea"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5296),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool?>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PCode] IS NOT NULL");

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PIndex] IS NOT NULL");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[PName] IS NOT NULL");

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5476),
                            FirstId = 1L,
                            GuidRecord = new Guid("0a86aff3-aeeb-4dc6-95ec-889bc3051e43"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5478),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-مدیر مرکز",
                            PIndex = 1L,
                            PName = "m.sharifi-PharmaceuticalDeputy",
                            SecondId = 7L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5482),
                            FirstId = 2L,
                            GuidRecord = new Guid("8684363d-6896-40aa-a5f2-10b76803f932"),
                            LastUpdatedRecord = new DateTime(2023, 5, 15, 15, 37, 41, 94, DateTimeKind.Local).AddTicks(5483),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-معاون غذایی",
                            PIndex = 2L,
                            PName = "a.sharifi-FMCGDeputy",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId");

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", null)
                        .WithMany("PRM_CondidateUsers")
                        .HasForeignKey("F_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", null)
                        .WithMany("RQT_Assignments")
                        .HasForeignKey("F_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "PRM_Endorsement")
                        .WithMany()
                        .HasForeignKey("PRM_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "PRM_Review")
                        .WithMany()
                        .HasForeignKey("PRM_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PRM_Endorsement");

                    b.Navigation("PRM_Review");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Review", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "CD_Endorsement")
                        .WithMany("ED_Conditions")
                        .HasForeignKey("CD_EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "CD_Request")
                        .WithMany("RQT_Conditions")
                        .HasForeignKey("CD_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "CD_Scenario")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_Tag")
                        .WithMany()
                        .HasForeignKey("CD_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_Endorsement");

                    b.Navigation("CD_Operand");

                    b.Navigation("CD_Request");

                    b.Navigation("CD_Scenario");

                    b.Navigation("CD_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ED_Scenario")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_ScenarioId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_Role");

                    b.Navigation("ED_Scenario");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Creator")
                        .WithMany()
                        .HasForeignKey("RQT_CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "RQT_Current_Review")
                        .WithMany()
                        .HasForeignKey("RQT_Current_ReviewId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "RQT_Process")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RQT_ProcessState")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Requestor")
                        .WithMany()
                        .HasForeignKey("RQT_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RQT_Creator");

                    b.Navigation("RQT_Current_Review");

                    b.Navigation("RQT_Process");

                    b.Navigation("RQT_ProcessState");

                    b.Navigation("RQT_Requestor");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "APV_Assignment")
                        .WithMany()
                        .HasForeignKey("APV_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_Performer")
                        .WithMany()
                        .HasForeignKey("APV_PerformerId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "APV_Request")
                        .WithMany("RQT_Reviews")
                        .HasForeignKey("APV_RequestId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "APV_Tag")
                        .WithMany()
                        .HasForeignKey("APV_TagId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Assignment");

                    b.Navigation("APV_Performer");

                    b.Navigation("APV_Request");

                    b.Navigation("APV_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "PS_Process")
                        .WithMany("PC_ProcessScenario")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "PS_Scenario")
                        .WithMany("EP_ProcessScenarios")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PS_Process");

                    b.Navigation("PS_Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserPositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PC_ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PRM_CondidateUsers");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ED_Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RQT_Assignments");

                    b.Navigation("RQT_Conditions");

                    b.Navigation("RQT_Reviews");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");

                    b.Navigation("EP_ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

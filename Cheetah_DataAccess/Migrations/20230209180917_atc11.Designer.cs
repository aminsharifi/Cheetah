// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheetahDataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230209180917_atc11")]
    partial class atc11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.CopyProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("idRole");

                    b.ToTable("CopyProducts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.CopyROLE", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRole"));

                    b.Property<Guid>("guidRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("idRole");

                    b.ToTable("CopyROLEs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("APV_UserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_UserInChargeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_RequestInformationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("APV_UserActionIdRecord");

                    b.HasIndex("APV_UserInChargeIdRecord");

                    b.HasIndex("M_RequestInformationIdRecord");

                    b.ToTable("M_Approve", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Attachment", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_ApproveIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("M_ApproveIdRecord");

                    b.ToTable("M_Attachment", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CallWebService", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<string>("CWS_JsonInputBody")
                        .HasColumnType("ntext");

                    b.Property<long?>("CWS_ParameterListIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("CWS_URL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("CWS_WSResult")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_RequestInformationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("CWS_ParameterListIdRecord");

                    b.HasIndex("M_RequestInformationIdRecord");

                    b.ToTable("M_CallWebService", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CurrentPE", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<bool?>("CPE_Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CPE_ProcessEndorsementsIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("CPE_UserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("CPE_UserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.HasKey("IdRecord");

                    b.HasIndex("CPE_ProcessEndorsementsIdRecord");

                    b.HasIndex("CPE_UserActionIdRecord");

                    b.HasIndex("CPE_UserIdRecord");

                    b.ToTable("M_CurrentPE", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdWorkItem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_ActiveProcessEndorsementIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("RI_AlborzSHare")
                        .HasColumnType("bit");

                    b.Property<long?>("RI_AreaIdRecord")
                        .HasColumnType("bigint");

                    b.Property<byte?>("RI_Attachment")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("RI_ConditionDrug")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionFMCG")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionOccur1")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionOccur2")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionOccur3")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionOccur4")
                        .HasColumnType("bit");

                    b.Property<bool?>("RI_ConditionOccur5")
                        .HasColumnType("bit");

                    b.Property<long?>("RI_CreatorIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_CurrentUserNames")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("RI_ERPBranchs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_ERPKindID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_ExpertUserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_Inputuser1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RI_LastTaskSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RI_LastTimeModify")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_LastUserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_LastUserComment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_LastUserInChargeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_LocationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_NewDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RI_OldDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RI_OutputVar1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_OutputVar2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_OutputVar3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_OutputVar4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_OutputVar5")
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint");

                    b.Property<string>("RI_People")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_PersonIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ProcessStateIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_ProcessVar1")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RI_ProcessVar2")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RI_ProcessVar3")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RI_ProcessVar4")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RI_ProcessVar5")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<long?>("RI_RejectReasonIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RI_RequestID")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_RequestNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_RequestSubject")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("RI_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestTypeIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_SubRequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_SupplierSHare")
                        .HasColumnType("bit");

                    b.Property<string>("RI_TaskName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_UserActionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("RI_UserComment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RI_UserNameCreator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RI_ValidUserAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RI_WS_CurrentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_WS_Result")
                        .HasColumnType("bit");

                    b.Property<int?>("RI_WS_Result_Code")
                        .HasColumnType("int");

                    b.Property<string>("RI_WS_Result_Desc")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("RI_WS_TryNum")
                        .HasColumnType("int");

                    b.Property<long?>("RI_idUnitType")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("RI_ActiveProcessEndorsementIdRecord");

                    b.HasIndex("RI_AreaIdRecord");

                    b.HasIndex("RI_CreatorIdRecord");

                    b.HasIndex("RI_ExpertUserIdRecord");

                    b.HasIndex("RI_LastUserActionIdRecord");

                    b.HasIndex("RI_LastUserInChargeIdRecord");

                    b.HasIndex("RI_LocationIdRecord");

                    b.HasIndex("RI_PersonIdRecord");

                    b.HasIndex("RI_ProcessStateIdRecord");

                    b.HasIndex("RI_RejectReasonIdRecord");

                    b.HasIndex("RI_RequestTitleIdRecord");

                    b.HasIndex("RI_RequestTypeIdRecord");

                    b.HasIndex("RI_RequestorIdRecord");

                    b.HasIndex("RI_SubRequestTitleIdRecord");

                    b.HasIndex("RI_UserActionIdRecord");

                    b.ToTable("M_RequestInformation", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_UserActionsProcess", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long?>("M_RequestInformationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("UAP_Automation")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UAP_CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UAP_IdentificationCode_input")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)");

                    b.Property<long?>("UAP_P_CurrentPEIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UAP_P_PositionOrgIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("UAP_P_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("UAP_Receiver_input")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UAP_SMS")
                        .HasColumnType("bit");

                    b.Property<bool?>("UAP_SendERP")
                        .HasColumnType("bit");

                    b.Property<bool?>("UAP_SendLetterResponse")
                        .HasColumnType("bit");

                    b.Property<bool?>("UAP_SendNotifyERP")
                        .HasColumnType("bit");

                    b.Property<string>("UAP_Subject_input")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UAP_TextBody_input")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("UAP_sender_input")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("M_RequestInformationIdRecord");

                    b.HasIndex("UAP_P_CurrentPEIdRecord");

                    b.HasIndex("UAP_P_PositionOrgIdRecord");

                    b.HasIndex("UAP_P_RequestTitleIdRecord");

                    b.ToTable("M_UserActionsProcess", "Masters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterList", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_ParameterList", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterType", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("P_ParameterListIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("P_ParameterListIdRecord");

                    b.ToTable("P_ParameterType", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_PositionOrg", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PSO_FMCGRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSO_Group")
                        .HasColumnType("bit");

                    b.Property<string>("PSO_MedicineRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("PSO_Role2IdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSO_RoleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("PSO_User")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("PSO_Role2IdRecord");

                    b.HasIndex("PSO_RoleIdRecord");

                    b.ToTable("P_PositionOrg", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSE_Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_CompanySHare")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_ConditionDrug")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_ConditionFMCG")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Conditional")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Conditional2")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Conditional3")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Conditional4")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_Conditional5")
                        .HasColumnType("bit");

                    b.Property<long?>("PSE_ExpertUserIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit");

                    b.Property<long?>("PSE_PONIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_ProcessStateIdRecord")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_RequestTitleIdRecord")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit");

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit");

                    b.Property<string>("PSE_SubRequestTitles")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSE_SupplierSHare")
                        .HasColumnType("bit");

                    b.Property<string>("PSE_TaskName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit");

                    b.Property<long?>("PSE_UserRelationship")
                        .HasMaxLength(50)
                        .HasColumnType("bigint");

                    b.Property<string>("PSE_ValidOutput")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PSE_ValidUserAction")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("PSE_ExpertUserIdRecord");

                    b.HasIndex("PSE_PONIdRecord");

                    b.HasIndex("PSE_ProcessStateIdRecord");

                    b.HasIndex("PSE_RequestTitleIdRecord");

                    b.ToTable("P_ProcessEndorsement", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessState", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_ProcessState", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestTitle", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit");

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit");

                    b.Property<string>("RT_ConditionOccur")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_ConditionOccur5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit");

                    b.Property<string>("RT_OutputVar1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RT_OutputVar5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit");

                    b.HasKey("IdRecord");

                    b.ToTable("P_RequestTitle", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_RequestType", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_RequestType", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_SubRequestTitle", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("SBT_RequestTitlesIdRecord")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.HasIndex("SBT_RequestTitlesIdRecord");

                    b.ToTable("P_SubRequestTitle", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserAction", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UA_Abbreviation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("UA_UserActionGroupIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("UA_ValidActions")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.HasIndex("UA_UserActionGroupIdRecord");

                    b.ToTable("P_UserAction", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserActionGroup", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("P_UserActionGroup", "Parameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Area", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Area", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Location", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Location", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_OrgPosition", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("POS_idOrg")
                        .HasColumnType("bigint");

                    b.HasKey("IdRecord");

                    b.ToTable("S_OrgPosition", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_Role", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRecord");

                    b.ToTable("S_Role", "Systems");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_User", b =>
                {
                    b.Property<long>("IdRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("IdRecord"));

                    b.Property<DateTime>("CreateTimeRecord")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit");

                    b.Property<Guid>("GuidRecord")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("PCode")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("PCost")
                        .HasColumnType("numeric");

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint");

                    b.Property<long>("PIndex")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("User_AreaIdRecord")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("User_Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("User_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("User_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit");

                    b.Property<long?>("User_DefaultPositionIdRecord")
                        .HasColumnType("bigint");

                    b.Property<byte?>("User_DelegateEnabled")
                        .HasColumnType("tinyint");

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_DistrictManager_RelatedL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("User_Domain")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("User_Enabled")
                        .HasColumnType("bit");

                    b.Property<byte?>("User_EnabledForAssignation")
                        .HasColumnType("tinyint");

                    b.Property<long?>("User_FirstApproverId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("User_FirstRoleUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("User_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("User_IsNeedUpperApprove")
                        .HasColumnType("bit");

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("User_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("User_LocationIdRecord")
                        .HasColumnType("bigint");

                    b.Property<string>("User_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("User_NotifByCell")
                        .HasColumnType("bit");

                    b.Property<bool?>("User_NotifByEmail")
                        .HasColumnType("bit");

                    b.Property<bool?>("User_NotifByMessenger")
                        .HasColumnType("bit");

                    b.Property<bool?>("User_OfflineForms")
                        .HasColumnType("bit");

                    b.Property<decimal?>("User_OvertimeCost")
                        .HasColumnType("money");

                    b.Property<string>("User_RelatedLocation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("User_SecondApproverId")
                        .HasColumnType("bigint");

                    b.Property<string>("User_SubUsers")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("User_Temp_IDPersonel")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("User_UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("User_UserPicture")
                        .HasColumnType("tinyint");

                    b.Property<int?>("User_UserStartPage")
                        .HasColumnType("int");

                    b.Property<long?>("User_idTimeZone")
                        .HasColumnType("bigint");

                    b.Property<long?>("User_idUnitType")
                        .HasColumnType("bigint");

                    b.Property<long?>("User_idWorkingTimeSchema")
                        .HasColumnType("bigint");

                    b.Property<int?>("User_language")
                        .HasColumnType("int");

                    b.Property<string>("identityUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRecord");

                    b.HasIndex("User_AreaIdRecord");

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DefaultPositionIdRecord");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_FirstApproverId");

                    b.HasIndex("User_FirstRoleUserId");

                    b.HasIndex("User_LocationIdRecord");

                    b.HasIndex("User_SecondApproverId");

                    b.HasIndex("identityUserId");

                    b.ToTable("S_User", "Systems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.CopyProduct", b =>
                {
                    b.HasOne("Cheetah_DataAccess.CopyROLE", "copyROLE")
                        .WithMany()
                        .HasForeignKey("idRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("copyROLE");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "APV_UserAction")
                        .WithMany()
                        .HasForeignKey("APV_UserActionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_RequestInformation", null)
                        .WithMany("RI_Approves")
                        .HasForeignKey("M_RequestInformationIdRecord");

                    b.Navigation("APV_UserAction");

                    b.Navigation("APV_UserInCharge");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.M_Approve", null)
                        .WithMany("APV_M_Attachment")
                        .HasForeignKey("M_ApproveIdRecord");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CallWebService", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterList", "CWS_ParameterList")
                        .WithMany()
                        .HasForeignKey("CWS_ParameterListIdRecord");

                    b.HasOne("Cheetah_DataAccess.Masters.M_RequestInformation", null)
                        .WithMany("RI_CallWebServices")
                        .HasForeignKey("M_RequestInformationIdRecord");

                    b.Navigation("CWS_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_CurrentPE", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", "CPE_ProcessEndorsements")
                        .WithMany()
                        .HasForeignKey("CPE_ProcessEndorsementsIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "CPE_UserAction")
                        .WithMany()
                        .HasForeignKey("CPE_UserActionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "CPE_User")
                        .WithMany()
                        .HasForeignKey("CPE_UserIdRecord");

                    b.Navigation("CPE_ProcessEndorsements");

                    b.Navigation("CPE_User");

                    b.Navigation("CPE_UserAction");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", "RI_ActiveProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("RI_ActiveProcessEndorsementIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Area", "RI_Area")
                        .WithMany()
                        .HasForeignKey("RI_AreaIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "RI_LastUserAction")
                        .WithMany()
                        .HasForeignKey("RI_LastUserActionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_LastUserInCharge")
                        .WithMany()
                        .HasForeignKey("RI_LastUserInChargeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Location", "RI_Location")
                        .WithMany()
                        .HasForeignKey("RI_LocationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_Person")
                        .WithMany()
                        .HasForeignKey("RI_PersonIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterList", "RI_RejectReason")
                        .WithMany()
                        .HasForeignKey("RI_RejectReasonIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestType", "RI_RequestType")
                        .WithMany()
                        .HasForeignKey("RI_RequestTypeIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_SubRequestTitle", "RI_SubRequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_SubRequestTitleIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserAction", "RI_UserAction")
                        .WithMany()
                        .HasForeignKey("RI_UserActionIdRecord");

                    b.Navigation("RI_ActiveProcessEndorsement");

                    b.Navigation("RI_Area");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_LastUserAction");

                    b.Navigation("RI_LastUserInCharge");

                    b.Navigation("RI_Location");

                    b.Navigation("RI_Person");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RejectReason");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_RequestType");

                    b.Navigation("RI_Requestor");

                    b.Navigation("RI_SubRequestTitle");

                    b.Navigation("RI_UserAction");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_UserActionsProcess", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.M_RequestInformation", null)
                        .WithMany("RI_UserActionsProcesses")
                        .HasForeignKey("M_RequestInformationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", "UAP_P_CurrentPE")
                        .WithMany()
                        .HasForeignKey("UAP_P_CurrentPEIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_PositionOrg", "UAP_P_PositionOrg")
                        .WithMany()
                        .HasForeignKey("UAP_P_PositionOrgIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "UAP_P_RequestTitle")
                        .WithMany()
                        .HasForeignKey("UAP_P_RequestTitleIdRecord");

                    b.Navigation("UAP_P_CurrentPE");

                    b.Navigation("UAP_P_PositionOrg");

                    b.Navigation("UAP_P_RequestTitle");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_ParameterList", "P_ParameterList")
                        .WithMany("PL_ParameterType")
                        .HasForeignKey("P_ParameterListIdRecord");

                    b.Navigation("P_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_PositionOrg", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Role", "PSO_Role2")
                        .WithMany()
                        .HasForeignKey("PSO_Role2IdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Role", "PSO_Role")
                        .WithMany()
                        .HasForeignKey("PSO_RoleIdRecord");

                    b.Navigation("PSO_Role");

                    b.Navigation("PSO_Role2");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_PositionOrg", "PSE_PON")
                        .WithMany()
                        .HasForeignKey("PSE_PONIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_ProcessState", "PSE_ProcessState")
                        .WithMany()
                        .HasForeignKey("PSE_ProcessStateIdRecord");

                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "PSE_RequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_RequestTitleIdRecord");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("PSE_PON");

                    b.Navigation("PSE_ProcessState");

                    b.Navigation("PSE_RequestTitle");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_SubRequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_RequestTitle", "SBT_RequestTitles")
                        .WithMany()
                        .HasForeignKey("SBT_RequestTitlesIdRecord");

                    b.Navigation("SBT_RequestTitles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_UserAction", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Parameters.P_UserActionGroup", "UA_UserActionGroup")
                        .WithMany()
                        .HasForeignKey("UA_UserActionGroupIdRecord");

                    b.Navigation("UA_UserActionGroup");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Systems.S_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Systems.S_Area", "User_Area")
                        .WithMany()
                        .HasForeignKey("User_AreaIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Systems.S_OrgPosition", "User_DefaultPosition")
                        .WithMany()
                        .HasForeignKey("User_DefaultPositionIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_FirstApprover")
                        .WithMany()
                        .HasForeignKey("User_FirstApproverId");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_FirstRoleUser")
                        .WithMany()
                        .HasForeignKey("User_FirstRoleUserId");

                    b.HasOne("Cheetah_DataAccess.Systems.S_Location", "User_Location")
                        .WithMany()
                        .HasForeignKey("User_LocationIdRecord");

                    b.HasOne("Cheetah_DataAccess.Systems.S_User", "User_SecondApprover")
                        .WithMany()
                        .HasForeignKey("User_SecondApproverId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "identityUser")
                        .WithMany()
                        .HasForeignKey("identityUserId");

                    b.Navigation("User_Area");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_DefaultPosition");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_FirstApprover");

                    b.Navigation("User_FirstRoleUser");

                    b.Navigation("User_Location");

                    b.Navigation("User_SecondApprover");

                    b.Navigation("identityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_Approve", b =>
                {
                    b.Navigation("APV_M_Attachment");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.M_RequestInformation", b =>
                {
                    b.Navigation("RI_Approves");

                    b.Navigation("RI_CallWebServices");

                    b.Navigation("RI_UserActionsProcesses");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.P_ParameterList", b =>
                {
                    b.Navigation("PL_ParameterType");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230513130258_Initials")]
    partial class Initials
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("Display")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7415),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("f17e8e17-18af-437a-8206-505544882668"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7418),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7520),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("44af1680-cce1-4e12-a9ec-1644a390b950"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7525),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7541),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("6e2074b1-1f83-464b-9182-b2533bee169c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7545),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7558),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("cc933a68-ef29-4012-922f-1f345ae3d5b3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7563),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7625),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("374cd774-2008-4178-a713-78ca2b9271a7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7628),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7641),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("10ad93d3-11ec-4300-b8af-ca85f2ab66c1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7644),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7655),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("ce4b31a0-f3f4-436c-8717-588aba09d7df"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7657),
                            PCode = 107L,
                            PDisplayName = "فرآیند‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_Process"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7668),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("8260a7fa-bc1a-4a1a-b806-839cc9abfcb1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7670),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7695),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("81beec96-9e05-48a5-b241-71fff5e36fd4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7699),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7712),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("b3bed6ae-d1d2-4b96-ba86-bf09b51199df"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7716),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7731),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("f33254fe-185e-4f03-9b1c-8dfb99c739b5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7736),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_Assignment"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7749),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("9b9e1d2a-4526-4401-8a81-8a945d1dec22"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7753),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Review"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7763),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("83e96be1-b8fb-4e0f-9b1f-d97597814c5e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7768),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7780),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("40e65006-8988-4aa4-8bc3-19298528ded9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7785),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7801),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("123a06ba-298a-4cd3-ac66-0aa7549ee9f9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7804),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7838),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("ba8ffca8-f029-4849-b7e2-ac1b2b14edb9"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7841),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_Request"
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7862),
                            Display = true,
                            DsblRecord = false,
                            GuidRecord = new Guid("5f1259a8-1ed6-4db2-a2de-8d783d89d8b2"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7865),
                            PCode = 206L,
                            PDisplayName = "سناریوها(Facts)",
                            PIndex = 206L,
                            PName = "F_Scenario"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7877),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("0079f7cd-e5c7-4901-ad5f-cd6d3334cc31"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7881),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7894),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("864f60f4-84dc-4a2e-8850-93efb1c60d3c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7898),
                            PCode = 301L,
                            PDisplayName = "فرآیند-سناریو(Links)",
                            PIndex = 301L,
                            PName = "L_ProcessScenario"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7973),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("3fcc22dd-67af-4a49-85da-e9f2eeec5e58"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7978),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8002),
                            Display = false,
                            DsblRecord = false,
                            GuidRecord = new Guid("1fe1fe9c-16f0-46c6-bede-0d0728923f46"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8005),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6361),
                            DsblRecord = false,
                            GuidRecord = new Guid("5d4248d1-4541-4ae2-966c-e718c53d0859"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6394),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6403),
                            DsblRecord = false,
                            GuidRecord = new Guid("b393cd25-f56e-4598-b340-b8a7f36daf9d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6407),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6415),
                            DsblRecord = false,
                            GuidRecord = new Guid("bcebf12e-3c54-48ff-ae8f-f737ea2cf17b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6419),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6487),
                            DsblRecord = false,
                            GuidRecord = new Guid("872c50ab-4426-401b-a6c2-da43d38ce28f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6491),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6499),
                            DsblRecord = false,
                            GuidRecord = new Guid("e32b115a-d02c-446b-b95f-53bd88b16b2d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6502),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6600),
                            DsblRecord = false,
                            GuidRecord = new Guid("6729dd63-3aa3-4afd-be3a-803366b54641"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6604),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6615),
                            DsblRecord = false,
                            GuidRecord = new Guid("4aa715e9-b4fb-4774-bbdc-47d44398330e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6618),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6625),
                            DsblRecord = false,
                            GuidRecord = new Guid("ee01cc3b-bcf7-450f-8807-0f05c0ed4de4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6644),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6726),
                            DsblRecord = false,
                            GuidRecord = new Guid("43bac0ae-3e64-4cc8-bbb9-b10df83d9884"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6730),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7310),
                            DsblRecord = false,
                            GuidRecord = new Guid("4a901c80-172e-46bf-b555-4e2eb5104d5c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7314),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7321),
                            DsblRecord = false,
                            GuidRecord = new Guid("a915ee48-8133-4e65-a51b-057f36913dcb"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7324),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7330),
                            DsblRecord = false,
                            GuidRecord = new Guid("e16c2f48-a291-462e-9e7d-6ea271f2441b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7333),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7339),
                            DsblRecord = false,
                            GuidRecord = new Guid("1cf52edf-e018-456f-a603-d37a16275da1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7341),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7348),
                            DsblRecord = false,
                            GuidRecord = new Guid("251198c0-dd84-41eb-b64c-8c0914c601d7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7350),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7356),
                            DsblRecord = false,
                            GuidRecord = new Guid("22d75fc4-8f1e-4527-982b-407210cb1a5c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7358),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7363),
                            DsblRecord = false,
                            GuidRecord = new Guid("ca9a494b-e485-4322-8b1a-6efdc1473569"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7366),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<bool?>("PC_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("PC_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PC_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Process", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4504),
                            DsblRecord = false,
                            GuidRecord = new Guid("70e76da7-2106-477d-a2fd-d67df4169f5b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4698),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4766),
                            DsblRecord = false,
                            GuidRecord = new Guid("be220c85-6478-46a9-baac-5113b8e1753d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4769),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 2L,
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4777),
                            DsblRecord = false,
                            GuidRecord = new Guid("4ab7a471-b23c-458b-af79-b233081f48ef"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(4797),
                            PC_ERP = true,
                            PC_RemoveRequestorApproval = true,
                            PC_ShowSupport = true,
                            PCode = 3L,
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6113),
                            DsblRecord = false,
                            GuidRecord = new Guid("a53ac5c3-4690-4c0e-82dd-fc8fb0bb173a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6162),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6235),
                            DsblRecord = false,
                            GuidRecord = new Guid("9919dd9d-856b-4e96-87cc-c5c48453093e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6238),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6272),
                            DsblRecord = false,
                            GuidRecord = new Guid("362c767e-871c-4674-8fa0-a4d027d37302"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6275),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6279),
                            DsblRecord = false,
                            GuidRecord = new Guid("36d9c667-5f7e-40d4-8e6c-cff3fd3f953f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6282),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7201),
                            DsblRecord = false,
                            GuidRecord = new Guid("0a287ee5-3ceb-4164-9a67-5fb53635d1e5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7206),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7216),
                            DsblRecord = false,
                            GuidRecord = new Guid("7d1c2db5-e366-43e6-9168-744a8ceae14d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7220),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7225),
                            DsblRecord = false,
                            GuidRecord = new Guid("edf16cd9-e7f9-448c-842a-ea21ccdc2601"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7230),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7236),
                            DsblRecord = false,
                            GuidRecord = new Guid("3281809f-ed78-45f9-8481-e9e7607dca32"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7239),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7253),
                            DsblRecord = false,
                            GuidRecord = new Guid("87dfdc0f-e9ed-4d52-a180-c701affbc4a7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7256),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6910),
                            DsblRecord = false,
                            GuidRecord = new Guid("164da023-ff51-4354-a003-570a9989e17f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6914),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6924),
                            DsblRecord = false,
                            GuidRecord = new Guid("e94b1d34-7e07-4535-ab2a-e0facbe616e0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6928),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6935),
                            DsblRecord = false,
                            GuidRecord = new Guid("1fda6286-05e1-4371-bdc7-ebe905caa05c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6938),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6947),
                            DsblRecord = false,
                            GuidRecord = new Guid("f983705d-02dd-4cfe-922d-192a76b4572f"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6949),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6960),
                            DsblRecord = false,
                            GuidRecord = new Guid("41e6a554-d97f-461e-97f6-440dd88d69f3"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6964),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6972),
                            DsblRecord = false,
                            GuidRecord = new Guid("49b7858b-eb9c-4337-a90e-f432ee3ab8c8"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6976),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6983),
                            DsblRecord = false,
                            GuidRecord = new Guid("c3e297aa-45e0-4c66-84ac-babe82219f68"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6988),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6995),
                            DsblRecord = false,
                            GuidRecord = new Guid("965fcde4-0b5b-4f2a-a796-ac97b85df453"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7000),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7015),
                            DsblRecord = false,
                            GuidRecord = new Guid("adaaf0f4-d544-45eb-8290-cfdfc3d62dae"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7017),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7026),
                            DsblRecord = false,
                            GuidRecord = new Guid("cc055894-dbda-4964-aa7e-0795737cc973"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7029),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6814),
                            DsblRecord = false,
                            GuidRecord = new Guid("d914026c-979f-4124-8aae-f6c5c640904b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6818),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6829),
                            DsblRecord = false,
                            GuidRecord = new Guid("bb37a799-e837-4eb8-bf1f-4b6069b1356a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6833),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6840),
                            DsblRecord = false,
                            GuidRecord = new Guid("b6834498-f263-4ca0-a37f-bec63ff6c72b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6843),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6854),
                            DsblRecord = false,
                            GuidRecord = new Guid("62eabca9-fdbf-46bf-8374-2af68bb93bca"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(6858),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_AssignmentId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_AssignmentId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7105),
                            DsblRecord = false,
                            GuidRecord = new Guid("1b6004e0-5064-41a7-b9d8-a0d9112e1c49"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7110),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7119),
                            DsblRecord = false,
                            GuidRecord = new Guid("a408a333-c488-406e-a924-87dd8369add4"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(7122),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PRM_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PRM_EndorsementId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Assignment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ReviewId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ReviewId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("CD_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("CD_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<string>("CD_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_EndorsementId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CD_ScenarioId");

                    b.HasIndex("CD_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Condition", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8180),
                            DsblRecord = false,
                            GuidRecord = new Guid("67bb0cd8-f7de-476d-a714-7523f7a0c49c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8185),
                            PCode = 1L,
                            PDisplayName = "سناریو دارویی,سهم شرکت,بزگتر از,0",
                            PIndex = 1L,
                            PName = "Med_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 2L,
                            CD_EndorsementId = 2L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 1L,
                            CD_TagId = 204L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8200),
                            DsblRecord = false,
                            GuidRecord = new Guid("3502b225-8ce0-462a-8319-bff9f239e7cd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8203),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,دارویی,مساوی,1",
                            PIndex = 2L,
                            PName = "Med_Scenario,Med,=,1"
                        },
                        new
                        {
                            Id = 3L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 100L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8216),
                            DsblRecord = false,
                            GuidRecord = new Guid("2b5e1a7e-29e2-4975-9c3d-8bcc3ee0d22b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8219),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی,سهم شرکت,بزگتر از,0",
                            PIndex = 3L,
                            PName = "FMCG_Scenario,OursShare,>,0"
                        },
                        new
                        {
                            Id = 4L,
                            CD_OperandId = 1L,
                            CD_ScenarioId = 2L,
                            CD_TagId = 205L,
                            CD_Value = "1",
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8230),
                            DsblRecord = false,
                            GuidRecord = new Guid("b98de80b-6e3a-4c18-b598-2dc6c33d6ee6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8233),
                            PCode = 4L,
                            PDisplayName = "سناریو مصرفی,مصرفی,مساوی,1",
                            PIndex = 4L,
                            PName = "FMCG_Scenario,FMCG,=,1"
                        },
                        new
                        {
                            Id = 5L,
                            CD_OperandId = 3L,
                            CD_ScenarioId = 3L,
                            CD_TagId = 103L,
                            CD_Value = "0",
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8242),
                            DsblRecord = false,
                            GuidRecord = new Guid("a79b2281-59fd-4405-8ebe-3f5adfb83773"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8245),
                            PCode = 5L,
                            PDisplayName = "سناریو ستاد,مبلغ,بزگتر از,0",
                            PIndex = 5L,
                            PName = "Head_Scenario,Price,>,0"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("ED_ScenarioId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("ED_ScenarioId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8302),
                            DsblRecord = false,
                            ED_RoleId = 5L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("011dda5d-6e8e-4644-add6-6dd75eccc1c6"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8307),
                            PCode = 1L,
                            PDisplayName = "سناریو دارویی,مدیریت مرکز توزیع",
                            PIndex = 1L,
                            PName = "Med_Scenario,DistributionCenterManager"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8320),
                            DsblRecord = false,
                            ED_RoleId = 2L,
                            ED_ScenarioId = 1L,
                            GuidRecord = new Guid("fa8f2804-03b3-4301-be5a-0eaffb5640f1"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8325),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی,معاونت دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8333),
                            DsblRecord = false,
                            ED_RoleId = 1L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("e42c89ba-54f4-4b05-b02c-88008c4d62e5"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8338),
                            PCode = 3L,
                            PDisplayName = "سناریو دو,معاونت دارویی",
                            PIndex = 3L,
                            PName = "Strategy2,PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8353),
                            DsblRecord = false,
                            ED_RoleId = 2L,
                            ED_ScenarioId = 2L,
                            GuidRecord = new Guid("f0a77d3f-d629-4abb-8083-e94796d9632c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8358),
                            PCode = 4L,
                            PDisplayName = "سناریو دو,معاونت غذایی",
                            PIndex = 4L,
                            PName = "Strategy2,FMCGDeputy"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RQT_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RQT_Current_ReviewId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(112);

                    b.Property<long?>("RQT_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RQT_IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<long?>("RQT_ProcessId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RQT_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("RQT_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<long?>("RQT_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RQT_CreatorId");

                    b.HasIndex("RQT_Current_ReviewId");

                    b.HasIndex("RQT_ProcessId");

                    b.HasIndex("RQT_ProcessStateId");

                    b.HasIndex("RQT_RequestorId");

                    b.ToTable("F_Request", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<long?>("APV_AssignmentId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_PerformerId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_RequestId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_AssignmentId");

                    b.HasIndex("APV_PerformerId");

                    b.HasIndex("APV_RequestId");

                    b.HasIndex("APV_TagId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Review", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Scenario", "Facts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8093),
                            DsblRecord = false,
                            GuidRecord = new Guid("4aa05391-4f4c-4577-b4a3-b68bb7145efd"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8099),
                            PCode = 1L,
                            PDisplayName = "سناریو ستاد",
                            PIndex = 1L,
                            PName = "Head_Scenario3"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8110),
                            DsblRecord = false,
                            GuidRecord = new Guid("fb66b368-a391-41e6-a352-ca502784d917"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8114),
                            PCode = 2L,
                            PDisplayName = "سناریو دارویی",
                            PIndex = 2L,
                            PName = "Med_Scenario"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8120),
                            DsblRecord = false,
                            GuidRecord = new Guid("e806fb6d-d340-4845-b2ce-e935ea4224ad"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8125),
                            PCode = 3L,
                            PDisplayName = "سناریو مصرفی",
                            PIndex = 3L,
                            PName = "FMCG_Scenario"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_ProcessScenario", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8746),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("36179a1f-20a2-4f0b-b1ab-4917db01c36e"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8750),
                            PCode = 1L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو سه",
                            PIndex = 1L,
                            PName = "CustomerDefinition-Strategy3",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8758),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("57e685a1-61be-451e-86de-f16a1f4a4c5d"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8761),
                            PCode = 2L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو یک",
                            PIndex = 2L,
                            PName = "CustomerDefinition-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8767),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("a8a2e4ab-7ed8-46ee-b5fb-f35288eb027c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8770),
                            PCode = 3L,
                            PDisplayName = "مجوزهای موردی-سناریو یک",
                            PIndex = 3L,
                            PName = "PolicyCenter-Strategy1",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8779),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("675fa466-26a1-4357-ba99-35cfbdc91da0"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8781),
                            PCode = 4L,
                            PDisplayName = "تعریف/اصلاح مشتری-سناریو دو",
                            PIndex = 4L,
                            PName = "PolicyCenter-Strategy2",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8787),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("b23879e4-ef6c-4d71-b48b-315916e8d25c"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8790),
                            PCode = 5L,
                            PDisplayName = "مجوزهای موردی-سناریو دو",
                            PIndex = 5L,
                            PName = "CustomerDefinition-Strategy2",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8558),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("f7db4343-cc81-4dc3-b7cd-ab2f30b91b8b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8564),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8573),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("86efdae2-b615-496b-a3bd-79453456766b"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8576),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8584),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("323c9bc3-abef-43ed-a29d-a8eb531fe58a"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8587),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8593),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("b0b55d5b-d531-4da0-8332-1cffbece90d7"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8597),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8603),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("d9a88785-6ccf-4bc8-a893-e6987fe5a6dc"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8606),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8616),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("e9bb79a8-d426-40db-b243-87d7a1cfb593"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8619),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8627),
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("326f1d0c-3876-46e8-8429-e86b179d4856"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8629),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8412),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("08023798-3197-45e6-a9e4-db5b64ac6a67"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8417),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8432),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("e9fbb819-627e-4c08-aa7c-bc1e39d08227"),
                            LastUpdatedRecord = new DateTime(2023, 5, 13, 17, 32, 57, 921, DateTimeKind.Local).AddTicks(8436),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("FirstId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long?>("PCode")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("SecondId")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId");

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", null)
                        .WithMany("PRM_CondidateUsers")
                        .HasForeignKey("F_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", null)
                        .WithMany("RQT_Assignments")
                        .HasForeignKey("F_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "PRM_Endorsement")
                        .WithMany()
                        .HasForeignKey("PRM_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PRM_Endorsement");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Review", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ReviewId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "CD_Endorsement")
                        .WithMany("ED_Conditions")
                        .HasForeignKey("CD_EndorsementId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "CD_Scenario")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_ScenarioId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_Tag")
                        .WithMany()
                        .HasForeignKey("CD_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", null)
                        .WithMany("RQT_Conditions")
                        .HasForeignKey("F_RequestId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_Endorsement");

                    b.Navigation("CD_Operand");

                    b.Navigation("CD_Scenario");

                    b.Navigation("CD_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ED_Scenario")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_ScenarioId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_Role");

                    b.Navigation("ED_Scenario");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Request", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Creator")
                        .WithMany()
                        .HasForeignKey("RQT_CreatorId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "RQT_Current_Review")
                        .WithMany()
                        .HasForeignKey("RQT_Current_ReviewId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "RQT_Process")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RQT_ProcessState")
                        .WithMany()
                        .HasForeignKey("RQT_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RQT_Requestor")
                        .WithMany()
                        .HasForeignKey("RQT_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RQT_Creator");

                    b.Navigation("RQT_Current_Review");

                    b.Navigation("RQT_Process");

                    b.Navigation("RQT_ProcessState");

                    b.Navigation("RQT_Requestor");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Assignment", "APV_Assignment")
                        .WithMany()
                        .HasForeignKey("APV_AssignmentId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_Performer")
                        .WithMany()
                        .HasForeignKey("APV_PerformerId");

                    b.HasOne("Cheetah_Business.Facts.F_Request", "APV_Request")
                        .WithMany("RQT_Reviews")
                        .HasForeignKey("APV_RequestId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "APV_Tag")
                        .WithMany()
                        .HasForeignKey("APV_TagId");

                    b.HasOne("Cheetah_Business.Facts.F_Review", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Assignment");

                    b.Navigation("APV_Performer");

                    b.Navigation("APV_Request");

                    b.Navigation("APV_Tag");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_ProcessScenario", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Process", "PS_Process")
                        .WithMany("PC_ProcessScenario")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Facts.F_Scenario", "PS_Scenario")
                        .WithMany("EP_ProcessScenarios")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PS_Process");

                    b.Navigation("PS_Scenario");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Process", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PC_ProcessScenario");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Assignment", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PRM_CondidateUsers");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ED_Conditions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Request", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RQT_Assignments");

                    b.Navigation("RQT_Conditions");

                    b.Navigation("RQT_Reviews");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Review", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Scenario", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");

                    b.Navigation("EP_ProcessScenarios");
                });
#pragma warning restore 612, 618
        }
    }
}

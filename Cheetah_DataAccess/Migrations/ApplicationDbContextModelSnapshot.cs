// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cheetah_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_EndorsementPattern", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(5942),
                            DsblRecord = false,
                            GuidRecord = new Guid("0c9a4362-e93b-47b6-a9f6-4d5f7f301513"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6004),
                            PCode = 1L,
                            PDisplayName = "الگوی یک",
                            PIndex = 1L,
                            PName = "Pattern1"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6053),
                            DsblRecord = false,
                            GuidRecord = new Guid("99180ca2-9923-4707-9ea2-986c5ac47eff"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6055),
                            PCode = 2L,
                            PDisplayName = "الگوی دو",
                            PIndex = 2L,
                            PName = "Pattern2"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6059),
                            DsblRecord = false,
                            GuidRecord = new Guid("19debf24-0b88-49ce-bde9-e8a6ce1eee10"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6060),
                            PCode = 3L,
                            PDisplayName = "الگوی سه",
                            PIndex = 3L,
                            PName = "Pattern3"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6922),
                            DsblRecord = false,
                            GuidRecord = new Guid("6e081dee-1cb5-4db6-a893-6bf2c72a31e4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6924),
                            PCode = 101L,
                            PDisplayName = "نوع تگ‌ها(Dimentions)",
                            PIndex = 101L,
                            PName = "D_TagType"
                        },
                        new
                        {
                            Id = 102L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7119),
                            DsblRecord = false,
                            GuidRecord = new Guid("e4abe0d1-f8c5-4597-8974-ab1057f335f1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7121),
                            PCode = 102L,
                            PDisplayName = "موقعیت‌ها(Dimentions)",
                            PIndex = 102L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7131),
                            DsblRecord = false,
                            GuidRecord = new Guid("b3fb085f-af8e-44be-91c1-1e18e39d4f6c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7133),
                            PCode = 103L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 103L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 104L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7139),
                            DsblRecord = false,
                            GuidRecord = new Guid("57d765eb-b0e9-4f2c-8669-b10cc664ddad"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7141),
                            PCode = 104L,
                            PDisplayName = "تگ‌ها(Dimentions)",
                            PIndex = 104L,
                            PName = "D_Tag"
                        },
                        new
                        {
                            Id = 105L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7160),
                            DsblRecord = false,
                            GuidRecord = new Guid("35349317-8b38-40dc-a7b5-9e583dfe6a1e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7161),
                            PCode = 105L,
                            PDisplayName = "سمت‌ها(Dimentions)",
                            PIndex = 105L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 106L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7168),
                            DsblRecord = false,
                            GuidRecord = new Guid("febe74ca-38cf-4352-92f1-65cb5703cd94"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7170),
                            PCode = 106L,
                            PDisplayName = "وضعیت فرآیندها(Dimentions)",
                            PIndex = 106L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 107L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7176),
                            DsblRecord = false,
                            GuidRecord = new Guid("4088ff71-9ded-44b6-9c06-2b3f088306e9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7178),
                            PCode = 107L,
                            PDisplayName = "عنوان درخواست‌ها(Dimentions)",
                            PIndex = 107L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 108L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7184),
                            DsblRecord = false,
                            GuidRecord = new Guid("1bab6f48-379f-401a-b30f-b3b33e719551"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7186),
                            PCode = 108L,
                            PDisplayName = "نقش‌ها(Dimentions)",
                            PIndex = 108L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 109L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7193),
                            DsblRecord = false,
                            GuidRecord = new Guid("f58fd426-217b-494c-8c2f-f6796b12ae4f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7194),
                            PCode = 109L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 109L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 110L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7203),
                            DsblRecord = false,
                            GuidRecord = new Guid("af6c9a31-e630-4da5-ba06-b1be8e24f4e8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7205),
                            PCode = 110L,
                            PDisplayName = "الگوهای تایید(Dimentions)",
                            PIndex = 110L,
                            PName = "D_EndorsementPattern"
                        },
                        new
                        {
                            Id = 111L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7212),
                            DsblRecord = false,
                            GuidRecord = new Guid("a01126dd-555f-4562-8180-714283e033ed"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7214),
                            PCode = 111L,
                            PDisplayName = "اختصاص نقش‌ها(Facts)",
                            PIndex = 111L,
                            PName = "D_Endorsement"
                        },
                        new
                        {
                            Id = 112L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7220),
                            DsblRecord = false,
                            GuidRecord = new Guid("44e06948-330e-4218-a52f-71165de8915c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7222),
                            PCode = 112L,
                            PDisplayName = "اطلاعات کاربرها(Facts)",
                            PIndex = 112L,
                            PName = "D_UserInformation"
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7228),
                            DsblRecord = false,
                            GuidRecord = new Guid("5d362c63-0877-4a09-b9fd-79c1a2bec81c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7229),
                            PCode = 200L,
                            PDisplayName = "تمام تاییدها(Facts)",
                            PIndex = 200L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7235),
                            DsblRecord = false,
                            GuidRecord = new Guid("6972e08e-a648-4241-9dc3-1711e7737d74"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7237),
                            PCode = 201L,
                            PDisplayName = "تاییدهای جاری(Facts)",
                            PIndex = 201L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7242),
                            DsblRecord = false,
                            GuidRecord = new Guid("523b6ad1-c431-45ab-9bb7-51cc0116e6e4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7244),
                            PCode = 202L,
                            PDisplayName = "ضمیمه‌ها(Facts)",
                            PIndex = 202L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7250),
                            DsblRecord = false,
                            GuidRecord = new Guid("bd79cf68-f80c-4a42-a735-59671acf1d7e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7252),
                            PCode = 203L,
                            PDisplayName = "لیست تخصیص‌ها(Facts)",
                            PIndex = 203L,
                            PName = "F_Endorsement"
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7258),
                            DsblRecord = false,
                            GuidRecord = new Guid("2d49408a-7797-4ac8-89db-accd1410ae5b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7260),
                            PCode = 204L,
                            PDisplayName = "لیست شرط‌ها(Facts)",
                            PIndex = 204L,
                            PName = "F_Condition"
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7268),
                            DsblRecord = false,
                            GuidRecord = new Guid("68f115c6-e76d-40ab-b479-9df269a1bce4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7270),
                            PCode = 205L,
                            PDisplayName = "اطلاعات درخواست‌ها(Facts)",
                            PIndex = 205L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 300L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7277),
                            DsblRecord = false,
                            GuidRecord = new Guid("40085d67-3866-4669-874a-91f38c8d01dd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7279),
                            PCode = 300L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 300L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 301L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7285),
                            DsblRecord = false,
                            GuidRecord = new Guid("4fe76ec1-18e1-477e-a255-2a4721e36992"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7286),
                            PCode = 301L,
                            PDisplayName = "کاربر-واحد(Links)",
                            PIndex = 301L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 302L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7300),
                            DsblRecord = false,
                            GuidRecord = new Guid("3eb22593-3e8f-456b-af7b-8c4cfa4878fa"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7302),
                            PCode = 302L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 302L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 303L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7309),
                            DsblRecord = false,
                            GuidRecord = new Guid("de54bd0e-42d0-47e3-90b3-c33be9a4f2ea"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7311),
                            PCode = 303L,
                            PDisplayName = "کاربر-سمت(Links)",
                            PIndex = 303L,
                            PName = "L_UserPosition"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6553),
                            DsblRecord = false,
                            GuidRecord = new Guid("e01116e1-3c8b-4426-8c31-c267465a738f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6555),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6559),
                            DsblRecord = false,
                            GuidRecord = new Guid("fea675bf-3045-4a8e-b7a4-3b47e70b69e0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6560),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6563),
                            DsblRecord = false,
                            GuidRecord = new Guid("cca508d6-1359-4ec0-bb97-8f59405031b3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6565),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6596),
                            DsblRecord = false,
                            GuidRecord = new Guid("c7f4b730-e3b8-4da1-bb1d-3c27297fc690"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6598),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6602),
                            DsblRecord = false,
                            GuidRecord = new Guid("f1fb105f-90d1-4cd7-8cd0-1983f08a5874"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6604),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6607),
                            DsblRecord = false,
                            GuidRecord = new Guid("96593524-f6d2-40d1-bf26-e336c385fd86"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6608),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6614),
                            DsblRecord = false,
                            GuidRecord = new Guid("89274d0c-1a1a-4bdc-8995-c515367f0917"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6616),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6619),
                            DsblRecord = false,
                            GuidRecord = new Guid("c66e1b42-9da3-4685-b42d-6b5d4cad60d1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6620),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6623),
                            DsblRecord = false,
                            GuidRecord = new Guid("a90fa42b-09da-4a3f-8a0f-e14ae30c2a52"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6625),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6868),
                            DsblRecord = false,
                            GuidRecord = new Guid("e1f5c8f7-ab35-4e6b-be2f-a909fc3a546e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6870),
                            PCode = 1L,
                            PDisplayName = "معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6873),
                            DsblRecord = false,
                            GuidRecord = new Guid("0bfe9bec-ef3f-4af6-9a4d-44a2f02ebc31"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6875),
                            PCode = 2L,
                            PDisplayName = "معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6878),
                            DsblRecord = false,
                            GuidRecord = new Guid("a4d08e14-d4ee-407f-860b-4ae95347750d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6879),
                            PCode = 3L,
                            PDisplayName = "کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSeniorSpecialist"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6883),
                            DsblRecord = false,
                            GuidRecord = new Guid("f2a9a68d-b792-40ba-9c90-2b84adb59d47"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6884),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6888),
                            DsblRecord = false,
                            GuidRecord = new Guid("a08b9a0d-a834-436a-99e8-1d45ebd82343"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6889),
                            PCode = 5L,
                            PDisplayName = "کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSeniorSpecialist"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6892),
                            DsblRecord = false,
                            GuidRecord = new Guid("52c1dac6-7b80-42d5-98e7-f203f8a3f6d1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6894),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6897),
                            DsblRecord = false,
                            GuidRecord = new Guid("3062054f-ded9-4673-b789-aa1b6229bad0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6899),
                            PCode = 7L,
                            PDisplayName = "مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6488),
                            DsblRecord = false,
                            GuidRecord = new Guid("210e22f2-b577-48ef-b12f-4778b4d0f180"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6490),
                            PCode = 1L,
                            PDisplayName = "در دست بررسی",
                            PIndex = 1L,
                            PName = "Ongoing"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6495),
                            DsblRecord = false,
                            GuidRecord = new Guid("8212741a-f257-42fb-bd4e-aab298168e0a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6496),
                            PCode = 2L,
                            PDisplayName = "منتظر بازنگری",
                            PIndex = 2L,
                            PName = "Editing"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6517),
                            DsblRecord = false,
                            GuidRecord = new Guid("716bec48-1142-4a90-89a6-4986de8ad773"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6519),
                            PCode = 3L,
                            PDisplayName = "کامل شده",
                            PIndex = 3L,
                            PName = "Completed"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6522),
                            DsblRecord = false,
                            GuidRecord = new Guid("b6c29a13-d040-4dda-aa97-c5deda85a311"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6524),
                            PCode = 4L,
                            PDisplayName = "ابطال شده",
                            PIndex = 4L,
                            PName = "Aborted"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long>("RT_EndorsementPatternId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RT_EndorsementPatternId");

                    b.ToTable("D_RequestTitle", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6443),
                            DsblRecord = false,
                            GuidRecord = new Guid("5a4acc09-7670-42d8-94af-af65af8408bc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6446),
                            PCode = 1L,
                            PDescription = "الگوی یک",
                            PDisplayName = "تعریف/اصلاح مشتری",
                            PIndex = 1L,
                            PName = "CustomerDefinition",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 1L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6452),
                            DsblRecord = false,
                            GuidRecord = new Guid("73815608-0513-4a65-9553-2897deab8c59"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6454),
                            PCode = 2L,
                            PDescription = "الگوی دو",
                            PDisplayName = "مجوزهای موردی",
                            PIndex = 2L,
                            PName = "PolicyCenter",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 2L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6458),
                            DsblRecord = false,
                            GuidRecord = new Guid("e5595536-91b4-47b8-ac6f-314940849669"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6459),
                            PCode = 3L,
                            PDescription = "الگوی دو",
                            PDisplayName = "اعتباردهی مالی مشتری",
                            PIndex = 3L,
                            PName = "CustomerCredit",
                            RT_ERP = true,
                            RT_EndorsementPatternId = 2L,
                            RT_RemoveRequestorApproval = true,
                            RT_ShowSupport = true
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool>("ROL_Independent")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("ROL_Independent")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6815),
                            DsblRecord = false,
                            GuidRecord = new Guid("6daa0422-3560-4cfe-8508-b56d884bdd2f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6817),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6825),
                            DsblRecord = false,
                            GuidRecord = new Guid("b489255b-a515-400e-9a3a-fd84f8b7c3c8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6827),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6830),
                            DsblRecord = false,
                            GuidRecord = new Guid("7a072b8b-72a9-4471-acf1-b591e1740fc4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6832),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6835),
                            DsblRecord = false,
                            GuidRecord = new Guid("f4c32217-5ff9-483c-9680-912fc8954f68"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6837),
                            PCode = 4L,
                            PDisplayName = "کارشناس فروش",
                            PIndex = 4L,
                            PName = "SalesSpecialist",
                            ROL_Independent = true
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6840),
                            DsblRecord = false,
                            GuidRecord = new Guid("59a26a0a-efd4-424b-a905-d715869bd848"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6841),
                            PCode = 5L,
                            PDisplayName = "مدیریت مرکز توزیع",
                            PIndex = 5L,
                            PName = "DistributionCenterManager",
                            ROL_Independent = false
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long>("TG_TagTypeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("TG_TagTypeId");

                    b.ToTable("D_Tag", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6699),
                            DsblRecord = false,
                            GuidRecord = new Guid("99fc0113-0a1c-4294-b5d6-56c4ede1cabc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6701),
                            PCode = 100L,
                            PDescription = "عددی",
                            PDisplayName = "سهم شرکت",
                            PIndex = 100L,
                            PName = "OursShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6708),
                            DsblRecord = false,
                            GuidRecord = new Guid("10118bcc-de49-42c1-8c60-fc2684eed0a5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6709),
                            PCode = 101L,
                            PDescription = "عددی",
                            PDisplayName = "سهم دیگران",
                            PIndex = 101L,
                            PName = "OthersShare",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6713),
                            DsblRecord = false,
                            GuidRecord = new Guid("0e99a011-2721-4239-b567-0d9684113578"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6714),
                            PCode = 103L,
                            PDescription = "عددی",
                            PDisplayName = "مبلغ",
                            PIndex = 103L,
                            PName = "Price",
                            TG_TagTypeId = 1L
                        },
                        new
                        {
                            Id = 200L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6718),
                            DsblRecord = false,
                            GuidRecord = new Guid("10cb6139-7e0a-444d-ad35-758ed4ff7b47"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6719),
                            PCode = 200L,
                            PDescription = "دودویی",
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 200L,
                            PName = "Refrigerator",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 201L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6723),
                            DsblRecord = false,
                            GuidRecord = new Guid("bb61bc0c-032e-4760-8da3-ba6f11ddd438"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6724),
                            PCode = 201L,
                            PDescription = "پارامتریک",
                            PDisplayName = "تایید",
                            PIndex = 201L,
                            PName = "Approve",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 202L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6727),
                            DsblRecord = false,
                            GuidRecord = new Guid("66ba8e37-3efb-4e00-b413-9ce6cf03680a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6729),
                            PCode = 202L,
                            PDescription = "پارامتریک",
                            PDisplayName = "عدم تایید",
                            PIndex = 202L,
                            PName = "Reject",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 203L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6732),
                            DsblRecord = false,
                            GuidRecord = new Guid("62cf9913-f527-4233-bc39-61d94e1e1cd9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6734),
                            PCode = 203L,
                            PDescription = "پارامتریک",
                            PDisplayName = "بازنگری",
                            PIndex = 203L,
                            PName = "Revise",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 204L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6737),
                            DsblRecord = false,
                            GuidRecord = new Guid("0a304065-7320-46f6-a216-705c45758a97"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6739),
                            PCode = 204L,
                            PDescription = "پارامتریک",
                            PDisplayName = "دارویی",
                            PIndex = 204L,
                            PName = "Med",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 205L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6745),
                            DsblRecord = false,
                            GuidRecord = new Guid("8dee5c48-1cd7-48c1-b048-7c1ce6f28888"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6746),
                            PCode = 205L,
                            PDescription = "پارامتریک",
                            PDisplayName = "مصرفی",
                            PIndex = 205L,
                            PName = "FMCG",
                            TG_TagTypeId = 2L
                        },
                        new
                        {
                            Id = 206L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6752),
                            DsblRecord = false,
                            GuidRecord = new Guid("9b1df1bc-6db8-4c41-8866-9390f4d8423c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6753),
                            PCode = 206L,
                            PDescription = "پارامتریک",
                            PDisplayName = "کل",
                            PIndex = 206L,
                            PName = "General",
                            TG_TagTypeId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_TagType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6657),
                            DsblRecord = false,
                            GuidRecord = new Guid("848d08d2-b129-4789-9aeb-f079b5764e15"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6659),
                            PCode = 1L,
                            PDisplayName = "عددی",
                            PIndex = 1L,
                            PName = "Numberic"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6663),
                            DsblRecord = false,
                            GuidRecord = new Guid("171a07a5-e2a5-4a21-a12b-50bf863c5931"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6664),
                            PCode = 2L,
                            PDisplayName = "دودویی",
                            PIndex = 2L,
                            PName = "Boolean"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6667),
                            DsblRecord = false,
                            GuidRecord = new Guid("3ccf96ef-1324-4d8f-ba29-9c66b7808bdc"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6669),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6672),
                            DsblRecord = false,
                            GuidRecord = new Guid("8d40bf6a-2240-44f5-a0a4-fb2bc29ab899"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6673),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6779),
                            DsblRecord = false,
                            GuidRecord = new Guid("c289f124-0a73-4a0a-b534-6fc32edbe2e6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6781),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6785),
                            DsblRecord = false,
                            GuidRecord = new Guid("e44f70e6-5666-491d-89db-28dd39bacd23"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(6787),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UserInformation", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("APV_EndorsementId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(102);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_EndorsementId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CD_D_TagId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("CD_EndorsementPatternId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(103);

                    b.Property<long?>("CD_OperandId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<string>("CD_Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CD_D_TagId");

                    b.HasIndex("CD_EndorsementPatternId");

                    b.HasIndex("CD_OperandId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Condition", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("ED_EndorsementPatternId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(101);

                    b.Property<long?>("ED_RoleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("ED_EndorsementPatternId");

                    b.HasIndex("ED_RoleId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Endorsement", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(107);

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(110);

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(111);

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(106);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7386),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("c149d495-717a-42e9-bc3c-082b190e093e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7388),
                            PCode = 1L,
                            PDisplayName = "معاونت دارویی-معاون دارویی",
                            PIndex = 1L,
                            PName = "PharmaceuticalDeputy-PharmaceuticalDeputy",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7394),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("d0f3657b-38fb-4dce-bfdd-1037462ab01d"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7396),
                            PCode = 2L,
                            PDisplayName = "معاونت غذایی-معاون غذایی",
                            PIndex = 2L,
                            PName = "FMCGDeputy-FMCGDeputy",
                            SecondId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7399),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("9e6a790d-cf22-4131-ba84-160154dc4196"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7401),
                            PCode = 3L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس ارشد بازرگانی",
                            PIndex = 3L,
                            PName = "BusinessSpecialist-BusinessSeniorSpecialist",
                            SecondId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7404),
                            DsblRecord = false,
                            FirstId = 3L,
                            GuidRecord = new Guid("848740e2-fa6b-41cb-b3e4-45fcc552ec92"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7405),
                            PCode = 4L,
                            PDisplayName = "کارشناس بازرگانی-کارشناس بازرگانی",
                            PIndex = 4L,
                            PName = "BusinessSpecialist-BusinessSpecialist",
                            SecondId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7409),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("39128b94-acaa-4465-ad65-09c4116b847e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7411),
                            PCode = 5L,
                            PDisplayName = "کارشناس فروش-کارشناس ارشد فروش",
                            PIndex = 5L,
                            PName = "SalesSpecialist-SalesSeniorSpecialist",
                            SecondId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7414),
                            DsblRecord = false,
                            FirstId = 4L,
                            GuidRecord = new Guid("940e785b-cc7c-4ebb-b5db-d3603e144f00"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7415),
                            PCode = 6L,
                            PDisplayName = "کارشناس فروش-کارشناس فروش",
                            PIndex = 6L,
                            PName = "SalesSpecialist-SalesSpecialist",
                            SecondId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7419),
                            DsblRecord = false,
                            FirstId = 5L,
                            GuidRecord = new Guid("aa8f786c-95ef-44e8-9bbe-e23eb0f1d441"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7420),
                            PCode = 7L,
                            PDisplayName = "مدیریت مرکز توزیع-مدیر مرکز توزیع",
                            PIndex = 7L,
                            PName = "DistributionCenterManager-DistributionCenterManager",
                            SecondId = 7L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7355),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("011d9039-f3d2-4c52-9b38-147c82055c53"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7358),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی-تهران",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7363),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("9c1c6efa-8aa9-4c44-9312-ad4b626a5cb2"),
                            LastUpdatedRecord = new DateTime(2023, 4, 29, 14, 53, 31, 341, DateTimeKind.Local).AddTicks(7365),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserPosition", "Links");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_EndorsementPattern", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_EndorsementPattern", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_EndorsementPattern", "RT_EndorsementPattern")
                        .WithMany()
                        .HasForeignKey("RT_EndorsementPatternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentId");

                    b.Navigation("RT_EndorsementPattern");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "TG_TagType")
                        .WithMany()
                        .HasForeignKey("TG_TagTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentId");

                    b.Navigation("TG_TagType");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_TagType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_Business.Facts.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_Business.Facts.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Approve", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "APV_Endorsement")
                        .WithMany()
                        .HasForeignKey("APV_EndorsementId");

                    b.HasOne("Cheetah_Business.Facts.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_Business.Facts.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_Endorsement");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_Business.Facts.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Tag", "CD_D_Tag")
                        .WithMany()
                        .HasForeignKey("CD_D_TagId");

                    b.HasOne("Cheetah_Business.Dimentions.D_EndorsementPattern", "CD_EndorsementPattern")
                        .WithMany("EP_Conditions")
                        .HasForeignKey("CD_EndorsementPatternId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Operand", "CD_Operand")
                        .WithMany()
                        .HasForeignKey("CD_OperandId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", null)
                        .WithMany("User_Conditions")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_Business.Facts.F_RequestInformation", null)
                        .WithMany("RI_Conditions")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_Business.Facts.F_Condition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("CD_D_Tag");

                    b.Navigation("CD_EndorsementPattern");

                    b.Navigation("CD_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_EndorsementPattern", "ED_EndorsementPattern")
                        .WithMany("EP_Endorsements")
                        .HasForeignKey("ED_EndorsementPatternId");

                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "ED_Role")
                        .WithMany("ROL_EndorsementPosition")
                        .HasForeignKey("ED_RoleId");

                    b.HasOne("Cheetah_Business.Facts.F_Endorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ED_EndorsementPattern");

                    b.Navigation("ED_Role");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_Business.Facts.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_Business.Facts.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_Business.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_Business.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_Business.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_Role", "UP_Role")
                        .WithMany("ROL_RolePositions")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_Business.Links.L_UserPosition", b =>
                {
                    b.HasOne("Cheetah_Business.Dimentions.D_User", "UP_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_Business.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_UserPositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_EndorsementPattern", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("EP_Conditions");

                    b.Navigation("EP_Endorsements");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserPositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_EndorsementPosition");

                    b.Navigation("ROL_RolePositions");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_Tag", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_TagType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_Conditions");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_Business.Dimentions.D_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Condition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_Endorsement", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_Business.Facts.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}

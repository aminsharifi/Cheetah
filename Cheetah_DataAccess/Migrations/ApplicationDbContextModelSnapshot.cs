// <auto-generated />
using System;
using Cheetah_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheetahDataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Area_UnitTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("Area_UnitTypeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Area", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AreaUnitTypeId = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7463),
                            DsblRecord = false,
                            GuidRecord = new Guid("416c2afd-f86e-499e-b191-c1287a09b343"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7491),
                            PCode = 1L,
                            PDisplayName = "تهران",
                            PIndex = 1L,
                            PName = "Tehran"
                        },
                        new
                        {
                            Id = 2L,
                            AreaUnitTypeId = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7519),
                            DsblRecord = false,
                            GuidRecord = new Guid("3170a11f-b080-4bd2-9020-2295c01ee5da"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7521),
                            PCode = 2L,
                            PDisplayName = "فارس",
                            PIndex = 2L,
                            PName = "Fars"
                        },
                        new
                        {
                            Id = 3L,
                            AreaUnitTypeId = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7527),
                            DsblRecord = false,
                            GuidRecord = new Guid("413c3f0a-92ac-4ffd-b612-246c0c0babd1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7530),
                            PCode = 3L,
                            PDisplayName = "اصفهان",
                            PIndex = 3L,
                            PName = "Esfahan"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Entity", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8065),
                            DsblRecord = false,
                            GuidRecord = new Guid("fa33c901-8591-4315-b443-bdea5e40c692"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8068),
                            PCode = 1L,
                            PDisplayName = "واحدها(Dimentions)",
                            PIndex = 1L,
                            PName = "D_Area"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8372),
                            DsblRecord = false,
                            GuidRecord = new Guid("49b1254f-cc49-4978-ba7b-f84c8fe06057"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8376),
                            PCode = 2L,
                            PDisplayName = "نوع فیلد(Dimentions)",
                            PIndex = 2L,
                            PName = "D_FieldType"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8395),
                            DsblRecord = false,
                            GuidRecord = new Guid("99593bcd-28a4-445e-8752-dd2a44d52075"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8397),
                            PCode = 3L,
                            PDisplayName = "موقعیت ها(Dimentions)",
                            PIndex = 3L,
                            PName = "D_Location"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8415),
                            DsblRecord = false,
                            GuidRecord = new Guid("bb316864-ce4b-47a1-b82a-7e7bfc7ae536"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8417),
                            PCode = 4L,
                            PDisplayName = "عملگرها(Dimentions)",
                            PIndex = 4L,
                            PName = "D_Operand"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8431),
                            DsblRecord = false,
                            GuidRecord = new Guid("43102786-551e-460f-b123-5daca8a246d6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8433),
                            PCode = 5L,
                            PDisplayName = "لیست پارامترها(Dimentions)",
                            PIndex = 5L,
                            PName = "D_ParameterList"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8443),
                            DsblRecord = false,
                            GuidRecord = new Guid("a68a1fd1-83fb-4453-a375-31def282e99b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8445),
                            PCode = 6L,
                            PDisplayName = "نوع پارامتر(Dimentions)",
                            PIndex = 6L,
                            PName = "D_ParameterType"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8455),
                            DsblRecord = false,
                            GuidRecord = new Guid("a212d0ce-9026-484b-bf00-9898f157cd74"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8457),
                            PCode = 7L,
                            PDisplayName = "سمت ها(Dimentions)",
                            PIndex = 7L,
                            PName = "D_Position"
                        },
                        new
                        {
                            Id = 8L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8467),
                            DsblRecord = false,
                            GuidRecord = new Guid("3f052d62-04d0-406c-9de3-408737227ccb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8469),
                            PCode = 8L,
                            PDisplayName = "تاییدات فرآیندی(Dimentions)",
                            PIndex = 8L,
                            PName = "D_ProcessEndorsement"
                        },
                        new
                        {
                            Id = 9L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8480),
                            DsblRecord = false,
                            GuidRecord = new Guid("1e67388c-da9e-4086-81b9-6bdb510840a3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8483),
                            PCode = 9L,
                            PDisplayName = "وضعیت فرآیند(Dimentions)",
                            PIndex = 9L,
                            PName = "D_ProcessState"
                        },
                        new
                        {
                            Id = 10L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8492),
                            DsblRecord = false,
                            GuidRecord = new Guid("6a6d7b9c-ae2f-48b6-8fda-42d0eea513d1"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8494),
                            PCode = 10L,
                            PDisplayName = "عنوان درخواست(Dimentions)",
                            PIndex = 10L,
                            PName = "D_RequestTitle"
                        },
                        new
                        {
                            Id = 11L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8503),
                            DsblRecord = false,
                            GuidRecord = new Guid("4e301ee2-bc84-48e6-9013-56676c4c88e6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8505),
                            PCode = 11L,
                            PDisplayName = "نقش ها(Dimentions)",
                            PIndex = 11L,
                            PName = "D_Role"
                        },
                        new
                        {
                            Id = 12L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8514),
                            DsblRecord = false,
                            GuidRecord = new Guid("004b608f-53b0-4e89-bb39-81c5427cccd9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8517),
                            PCode = 12L,
                            PDisplayName = "حرفه ها(Dimentions)",
                            PIndex = 12L,
                            PName = "D_Skill"
                        },
                        new
                        {
                            Id = 13L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8530),
                            DsblRecord = false,
                            GuidRecord = new Guid("9fb2ca62-4fbe-427c-8800-7be7745313a7"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8532),
                            PCode = 13L,
                            PDisplayName = "زیرعنوان(Dimentions)",
                            PIndex = 13L,
                            PName = "D_SubRequestTitle"
                        },
                        new
                        {
                            Id = 14L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8541),
                            DsblRecord = false,
                            GuidRecord = new Guid("510d0f7a-d0d4-4909-add9-897df03782a5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8543),
                            PCode = 14L,
                            PDisplayName = "نوع واحد(Dimentions)",
                            PIndex = 14L,
                            PName = "D_UnitType"
                        },
                        new
                        {
                            Id = 15L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8564),
                            DsblRecord = false,
                            GuidRecord = new Guid("7285dfbc-7508-440f-9cb6-b6de6c77eb82"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8567),
                            PCode = 15L,
                            PDisplayName = "کاربران(Dimentions)",
                            PIndex = 15L,
                            PName = "D_User"
                        },
                        new
                        {
                            Id = 16L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8584),
                            DsblRecord = false,
                            GuidRecord = new Guid("00634480-608b-497b-87fb-cec0ffede83a"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8587),
                            PCode = 16L,
                            PDisplayName = "تاییدها(Facts)",
                            PIndex = 16L,
                            PName = "F_AllApprove"
                        },
                        new
                        {
                            Id = 17L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8596),
                            DsblRecord = false,
                            GuidRecord = new Guid("6c641d0e-e3d8-45a3-b3b1-f313b645d5f8"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8598),
                            PCode = 17L,
                            PDisplayName = "تایید(Facts)",
                            PIndex = 17L,
                            PName = "F_Approve"
                        },
                        new
                        {
                            Id = 18L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8607),
                            DsblRecord = false,
                            GuidRecord = new Guid("798896a0-df84-460f-b4d5-3393b4d6332c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8610),
                            PCode = 18L,
                            PDisplayName = "ضمیمه ها(Facts)",
                            PIndex = 18L,
                            PName = "F_Attachment"
                        },
                        new
                        {
                            Id = 19L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8618),
                            DsblRecord = false,
                            GuidRecord = new Guid("02865df5-ea7e-4ac8-9656-57de799d4070"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8621),
                            PCode = 19L,
                            PDisplayName = "لیست سمت ها(Facts)",
                            PIndex = 19L,
                            PName = "F_EndorsementPosition"
                        },
                        new
                        {
                            Id = 20L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8629),
                            DsblRecord = false,
                            GuidRecord = new Guid("cae9dc15-e5a9-4c32-ae78-322531fca384"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8632),
                            PCode = 20L,
                            PDisplayName = "لیست پارامترها(Facts)",
                            PIndex = 20L,
                            PName = "F_ListOfParameter"
                        },
                        new
                        {
                            Id = 21L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8644),
                            DsblRecord = false,
                            GuidRecord = new Guid("bbce5c9f-2f41-446e-a508-900687d27e50"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8647),
                            PCode = 21L,
                            PDisplayName = "اطلاعات درخواست ها(Facts)",
                            PIndex = 21L,
                            PName = "F_RequestInformation"
                        },
                        new
                        {
                            Id = 22L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8657),
                            DsblRecord = false,
                            GuidRecord = new Guid("18de218f-bbbc-4a40-a8cf-c54a60258241"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8659),
                            PCode = 22L,
                            PDisplayName = "اطلاعات کاربران(Facts)",
                            PIndex = 22L,
                            PName = "F_UserInformation"
                        },
                        new
                        {
                            Id = 23L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8668),
                            DsblRecord = false,
                            GuidRecord = new Guid("b3fcd7bb-1f8b-4bc2-afc5-cd90cca3ea34"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8671),
                            PCode = 23L,
                            PDisplayName = "نقش-سمت(Links)",
                            PIndex = 23L,
                            PName = "L_RolePosition"
                        },
                        new
                        {
                            Id = 24L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8680),
                            DsblRecord = false,
                            GuidRecord = new Guid("c8ca13fb-8264-4f27-b058-9da96542a74b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8682),
                            PCode = 24L,
                            PDisplayName = "کاربر-واحدها(Links)",
                            PIndex = 24L,
                            PName = "L_UserArea"
                        },
                        new
                        {
                            Id = 25L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8692),
                            DsblRecord = false,
                            GuidRecord = new Guid("0f709b62-dced-4308-89e2-a5cb5dbe86ea"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8694),
                            PCode = 25L,
                            PDisplayName = "کاربر-موقعیت(Links)",
                            PIndex = 25L,
                            PName = "L_UserLocation"
                        },
                        new
                        {
                            Id = 26L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8704),
                            DsblRecord = false,
                            GuidRecord = new Guid("8faa25fc-d4d5-448e-aaa9-c12f0df691bd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8706),
                            PCode = 26L,
                            PDisplayName = "کاربر-موقعیت‌های مرتبط(Links)",
                            PIndex = 26L,
                            PName = "L_UserRelatedLocation"
                        },
                        new
                        {
                            Id = 27L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8716),
                            DsblRecord = false,
                            GuidRecord = new Guid("a3e32489-8879-4ff9-a81f-55c36eef1744"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8719),
                            PCode = 27L,
                            PDisplayName = "کاربر-نقش(Links)",
                            PIndex = 27L,
                            PName = "L_UserRole"
                        },
                        new
                        {
                            Id = 28L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8727),
                            DsblRecord = false,
                            GuidRecord = new Guid("1c4873f8-3575-4f9f-8489-4f7fb9262ba4"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8729),
                            PCode = 28L,
                            PDisplayName = "کاربر-حرفه(Links)",
                            PIndex = 28L,
                            PName = "L_UserSkill"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_FieldType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7580),
                            DsblRecord = false,
                            GuidRecord = new Guid("6e610023-ae39-4432-a495-12ce1ead8497"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7584),
                            PCode = 1L,
                            PDisplayName = "پارامتریک",
                            PIndex = 1L,
                            PName = "Parameter"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7591),
                            DsblRecord = false,
                            GuidRecord = new Guid("823ab6a9-0049-4ea9-9a4f-ace012812805"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7593),
                            PCode = 2L,
                            PDisplayName = "عددی",
                            PIndex = 2L,
                            PName = "Number"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7612),
                            DsblRecord = false,
                            GuidRecord = new Guid("57ecbd88-a8bb-4188-a02c-eb58e88a329c"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7646),
                            PCode = 3L,
                            PDisplayName = "تاریخ",
                            PIndex = 3L,
                            PName = "Date"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7673),
                            DsblRecord = false,
                            GuidRecord = new Guid("a12bcb41-14be-420d-b011-b5a1f3c5483f"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7676),
                            PCode = 4L,
                            PDisplayName = "حروف",
                            PIndex = 4L,
                            PName = "String"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Location", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Operand", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7716),
                            DsblRecord = false,
                            GuidRecord = new Guid("545b5fb5-26e8-4658-8541-93661a312117"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7720),
                            PCode = 1L,
                            PDisplayName = "مساوی",
                            PIndex = 1L,
                            PName = "="
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7726),
                            DsblRecord = false,
                            GuidRecord = new Guid("bd0ef7ad-46c4-4d9e-a0b9-75c56be879d5"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7729),
                            PCode = 2L,
                            PDisplayName = "مخالف",
                            PIndex = 2L,
                            PName = "!="
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7734),
                            DsblRecord = false,
                            GuidRecord = new Guid("19ee07f4-2276-4b69-b8be-569243c3fcbd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7736),
                            PCode = 3L,
                            PDisplayName = "بزگتر از",
                            PIndex = 3L,
                            PName = ">"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7741),
                            DsblRecord = false,
                            GuidRecord = new Guid("7fa4369a-cfea-47bb-b22a-ccaa9f122810"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7744),
                            PCode = 4L,
                            PDisplayName = "بزرگتر و مساوی",
                            PIndex = 4L,
                            PName = ">="
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7749),
                            DsblRecord = false,
                            GuidRecord = new Guid("64142f94-2ab6-4ad1-b6ba-0ca7c522e0cb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7752),
                            PCode = 5L,
                            PDisplayName = " کوچکتر از",
                            PIndex = 5L,
                            PName = "<"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7757),
                            DsblRecord = false,
                            GuidRecord = new Guid("b99a2ee4-4942-4815-b762-df9279ecb5f6"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7767),
                            PCode = 6L,
                            PDisplayName = "کوچکتر و مساوی",
                            PIndex = 6L,
                            PName = "<="
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long?>("PL_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PL_ParameterTypeId");

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterList", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_P_FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_P_FieldTypeId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ParameterType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7888),
                            DsblRecord = false,
                            GuidRecord = new Guid("248d1cb0-b7bc-4075-8a94-7b491eb70164"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7892),
                            PCode = 1L,
                            PDisplayName = "سهم دیگران",
                            PIndex = 1L,
                            PName = "OthersShare"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7899),
                            DsblRecord = false,
                            GuidRecord = new Guid("ee4af325-d8c0-4f79-aa40-a26d8ca7f053"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7901),
                            PCode = 2L,
                            PDisplayName = "سهم شرکت",
                            PIndex = 2L,
                            PName = "OursShare"
                        },
                        new
                        {
                            Id = 3L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7906),
                            DsblRecord = false,
                            GuidRecord = new Guid("9650abc6-793a-42db-a98d-71ccaee7b4cb"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7909),
                            PCode = 3L,
                            PDisplayName = "نوع واحد مرتبط",
                            PIndex = 3L,
                            PName = "AreaType"
                        },
                        new
                        {
                            Id = 4L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7914),
                            DsblRecord = false,
                            GuidRecord = new Guid("9c785294-727a-42a0-8e50-b221d3de42fd"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7917),
                            PCode = 4L,
                            PDisplayName = "ستاد",
                            PIndex = 4L,
                            PName = "Staff"
                        },
                        new
                        {
                            Id = 5L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7922),
                            DsblRecord = false,
                            GuidRecord = new Guid("c664c313-8535-4706-bd80-bc4049a262a3"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7924),
                            PCode = 5L,
                            PDisplayName = "مخدر/ یخچالی",
                            PIndex = 5L,
                            PName = "Refrigerator"
                        },
                        new
                        {
                            Id = 6L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7930),
                            DsblRecord = false,
                            GuidRecord = new Guid("f9cf2586-88f5-4366-817a-0338aeb924f9"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7932),
                            PCode = 6L,
                            PDisplayName = "مبلغ",
                            PIndex = 6L,
                            PName = "Price"
                        },
                        new
                        {
                            Id = 7L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7938),
                            DsblRecord = false,
                            GuidRecord = new Guid("5e973b3e-1c2f-446e-9e18-a771ec7ffea0"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7941),
                            PCode = 7L,
                            PDisplayName = "متغیر فرآیندی",
                            PIndex = 7L,
                            PName = "ProcessVar"
                        },
                        new
                        {
                            Id = 8L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7947),
                            DsblRecord = false,
                            GuidRecord = new Guid("9f906f72-a111-4154-aa4e-5afc0b491269"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7949),
                            PCode = 8L,
                            PDisplayName = "متغییر ورودی",
                            PIndex = 8L,
                            PName = "InputVar"
                        },
                        new
                        {
                            Id = 9L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7958),
                            DsblRecord = false,
                            GuidRecord = new Guid("cd24dfdf-31ec-44bd-b9fd-f411914c3b51"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7960),
                            PCode = 9L,
                            PDisplayName = "متغییر خروجی",
                            PIndex = 9L,
                            PName = "OutputVar"
                        },
                        new
                        {
                            Id = 10L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7966),
                            DsblRecord = false,
                            GuidRecord = new Guid("3e4a62df-fdd6-4d53-911c-8ff680483921"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(7968),
                            PCode = 10L,
                            PDisplayName = "اقدام های فرآیندی",
                            PIndex = 10L,
                            PName = "ProcessAction"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PSO_Default_LocationId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSO_Independent_Location")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSO_Default_LocationId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Position", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<bool?>("PSE_Automation")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<long?>("PSE_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Mail")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.Property<bool?>("PSE_NeedApprove")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("PSE_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PSE_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_SMS")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("PSE_SendAll")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<long?>("PSE_SubRequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("PSE_Transcript")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PSE_ExpertUserId");

                    b.HasIndex("PSE_ProcessStateId");

                    b.HasIndex("PSE_RequestTitleId");

                    b.HasIndex("PSE_SubRequestTitleId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessEndorsement", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_ProcessState", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<bool?>("RT_AnotherRequester")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<bool?>("RT_CheckList")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<bool?>("RT_ERP")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("RT_RemoveRequestorApproval")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("RT_ShowSupport")
                        .HasColumnType("bit")
                        .HasColumnOrder(100);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_RequestTitle", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Role", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_Skill", "Dimentions");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_UnitType", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(6551),
                            DsblRecord = false,
                            GuidRecord = new Guid("7d2fb5f2-4f50-4cac-b0fe-46d399973872"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(6639),
                            PCode = 1L,
                            PDisplayName = "دارویی",
                            PIndex = 1L,
                            PName = "Med"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(6701),
                            DsblRecord = false,
                            GuidRecord = new Guid("e26f79ff-c401-4d36-842d-a4707ca59064"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(6703),
                            PCode = 2L,
                            PDisplayName = "مصرفی",
                            PIndex = 2L,
                            PName = "FMCG"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("User_BossUserId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(108);

                    b.Property<bool?>("User_CreatedCasesSkipAssigRules")
                        .HasColumnType("bit")
                        .HasColumnOrder(105);

                    b.Property<bool?>("User_DelegateEnabled")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<long?>("User_DelegateId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(109);

                    b.Property<string>("User_Domain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnOrder(102);

                    b.Property<bool?>("User_EnabledForAssignation")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("User_IDPersonel")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(106);

                    b.Property<string>("User_LDAPDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<long?>("User_UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("User_BossUserId");

                    b.HasIndex("User_DelegateId");

                    b.HasIndex("User_UserInformationId");

                    b.ToTable("D_User", "Dimentions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8009),
                            DsblRecord = false,
                            GuidRecord = new Guid("cd253766-5d5f-480d-8277-49de67785a4e"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8013),
                            PCode = 1L,
                            PDisplayName = "محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi"
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8019),
                            DsblRecord = false,
                            GuidRecord = new Guid("46982625-8a13-4f91-9d35-974caf0fe316"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8021),
                            PCode = 2L,
                            PDisplayName = "امین شریفی",
                            PIndex = 2L,
                            PName = "a.sharifi"
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_EndorsementPosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("UP_PositionOrgId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UP_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("UP_PositionOrgId");

                    b.HasIndex("UP_ProcessEndorsementId");

                    b.ToTable("F_EndorsementPosition", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<string>("UI_Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(112);

                    b.Property<DateTime?>("UI_Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(110);

                    b.Property<string>("UI_ContactCell")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(107);

                    b.Property<string>("UI_ContactEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(105);

                    b.Property<string>("UI_ContactMessenger")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(106);

                    b.Property<string>("UI_FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<string>("UI_InternalPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(111);

                    b.Property<string>("UI_LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(101);

                    b.Property<string>("UI_NationalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(109);

                    b.Property<bool?>("UI_NotifByCell")
                        .HasColumnType("bit")
                        .HasColumnOrder(104);

                    b.Property<bool?>("UI_NotifByEmail")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<bool?>("UI_NotifByMessenger")
                        .HasColumnType("bit")
                        .HasColumnOrder(103);

                    b.Property<string>("UI_RegistrationNumber")
                        .HasMaxLength(215)
                        .HasColumnType("nvarchar(215)")
                        .HasColumnOrder(113);

                    b.Property<byte[]>("UI_UserPicture")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(108);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_UserInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_RolePosition", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserArea", "Links");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8801),
                            DsblRecord = false,
                            FirstId = 1L,
                            GuidRecord = new Guid("490e0f18-0594-4190-b35a-1bc351f3958b"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8805),
                            PCode = 1L,
                            PDisplayName = "تهران-محمد شریفی",
                            PIndex = 1L,
                            PName = "m.sharifi-Tehran",
                            SecondId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateTimeRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8824),
                            DsblRecord = false,
                            FirstId = 2L,
                            GuidRecord = new Guid("49aa7bee-d74c-43c3-b1cd-fee5101e0857"),
                            LastUpdatedRecord = new DateTime(2023, 4, 6, 16, 22, 4, 579, DateTimeKind.Local).AddTicks(8827),
                            PCode = 2L,
                            PDisplayName = "امین شریفی-فارس",
                            PIndex = 2L,
                            PName = "a.sharifi-Fars",
                            SecondId = 2L
                        });
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserLocation", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRelatedLocation", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserRole", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_PositionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long>("FirstId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long>("SecondId")
                        .HasColumnType("bigint")
                        .HasColumnOrder(51);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_PositionId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("FirstId")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("SecondId")
                        .IsDescending();

                    b.ToTable("L_UserSkill", "Links");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AAP_Current_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("AAP_Last_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("AAP_Current_ApproveId");

                    b.HasIndex("AAP_Last_ApproveId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_AllApprove", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("APV_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_NeedApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("APV_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<string>("APV_Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(100);

                    b.Property<long?>("APV_UserInChargeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("APV_ApproveId");

                    b.HasIndex("APV_NeedApproveId");

                    b.HasIndex("APV_ProcessEndorsementId");

                    b.HasIndex("APV_UserInChargeId");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Approve", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ATC_Data")
                        .HasColumnType("varbinary(max)")
                        .HasColumnOrder(101);

                    b.Property<string>("ATC_Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(100);

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_ApproveId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_ApproveId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_Attachment", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_ProcessEndorsementId")
                        .HasColumnType("bigint");

                    b.Property<long?>("D_UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<long?>("F_RequestInformationId")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("LOP_BooleanValue")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<float?>("LOP_FloatValue")
                        .HasColumnType("real")
                        .HasColumnOrder(100);

                    b.Property<long?>("LOP_ParameterListId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LOP_ParameterTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOP_StringValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("PT_OperandId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_ProcessEndorsementId");

                    b.HasIndex("D_UserId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("F_RequestInformationId");

                    b.HasIndex("LOP_ParameterListId");

                    b.HasIndex("LOP_ParameterTypeId");

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PT_OperandId");

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("F_ListOfParameter", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<bool?>("IsTest")
                        .HasColumnType("bit")
                        .HasColumnOrder(102);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.Property<long?>("RI_AllApproveId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_CreatorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_ERPID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(100);

                    b.Property<long?>("RI_ExpertUserId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("RI_IsCancelled")
                        .HasColumnType("bit")
                        .HasColumnOrder(101);

                    b.Property<byte?>("RI_PE_Level")
                        .HasColumnType("tinyint")
                        .HasColumnOrder(103);

                    b.Property<long?>("RI_ProcessStateId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("RI_RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("RI_RequestFinishDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(105);

                    b.Property<long?>("RI_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RI_RequestorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.HasIndex("RI_AllApproveId");

                    b.HasIndex("RI_CreatorId");

                    b.HasIndex("RI_ExpertUserId");

                    b.HasIndex("RI_ProcessStateId");

                    b.HasIndex("RI_RequestTitleId");

                    b.HasIndex("RI_RequestorId");

                    b.ToTable("F_RequestInformation", "Facts");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateTimeRecord")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(6);

                    b.Property<long?>("D_RequestTitleId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DsblRecord")
                        .HasColumnType("bit")
                        .HasColumnOrder(9);

                    b.Property<Guid?>("GuidRecord")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(8);

                    b.Property<DateTime?>("LastUpdatedRecord")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnOrder(7);

                    b.Property<long>("PCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<string>("PDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(5);

                    b.Property<string>("PDisplayName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnOrder(4);

                    b.Property<long?>("PERPCode")
                        .HasColumnType("bigint")
                        .HasColumnOrder(10);

                    b.Property<long?>("PIndex")
                        .IsRequired()
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(3);

                    b.Property<long?>("Parent_Id")
                        .HasColumnType("bigint")
                        .HasColumnOrder(50);

                    b.HasKey("Id");

                    b.HasIndex("CreateTimeRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[CreateTimeRecord] IS NOT NULL");

                    b.HasIndex("D_RequestTitleId");

                    b.HasIndex("DsblRecord")
                        .IsDescending();

                    b.HasIndex("LastUpdatedRecord")
                        .IsUnique()
                        .IsDescending()
                        .HasFilter("[LastUpdatedRecord] IS NOT NULL");

                    b.HasIndex("PCode")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PERPCode")
                        .IsDescending();

                    b.HasIndex("PIndex")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("PName")
                        .IsUnique()
                        .IsDescending();

                    b.HasIndex("Parent_Id")
                        .IsDescending();

                    b.ToTable("D_SubRequestTitle", "Dimentions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_UnitType", "Area_UnitType")
                        .WithMany("UT_Areas")
                        .HasForeignKey("Area_UnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("Area_UnitType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Entity", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "PL_ParameterType")
                        .WithMany("PT_ParameterList")
                        .HasForeignKey("PL_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PL_ParameterType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_FieldType", "PT_P_FieldType")
                        .WithMany()
                        .HasForeignKey("PT_P_FieldTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PT_P_FieldType");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "PSO_Default_Location")
                        .WithMany()
                        .HasForeignKey("PSO_Default_LocationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSO_Default_Location");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "PSE_ExpertUser")
                        .WithMany()
                        .HasForeignKey("PSE_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "PSE_ProcessState")
                        .WithMany()
                        .HasForeignKey("PSE_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "PSE_RequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Parameters.D_SubRequestTitle", "PSE_SubRequestTitle")
                        .WithMany()
                        .HasForeignKey("PSE_SubRequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("PSE_ExpertUser");

                    b.Navigation("PSE_ProcessState");

                    b.Navigation("PSE_RequestTitle");

                    b.Navigation("PSE_SubRequestTitle");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Skill", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_UnitType", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_BossUser")
                        .WithMany()
                        .HasForeignKey("User_BossUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "User_Delegate")
                        .WithMany()
                        .HasForeignKey("User_DelegateId");

                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "User_UserInformation")
                        .WithMany()
                        .HasForeignKey("User_UserInformationId");

                    b.Navigation("ParentId");

                    b.Navigation("User_BossUser");

                    b.Navigation("User_Delegate");

                    b.Navigation("User_UserInformation");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_EndorsementPosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_EndorsementPosition", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_PositionOrg")
                        .WithMany("PSO_EndorsementPosition")
                        .HasForeignKey("UP_PositionOrgId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "UP_ProcessEndorsement")
                        .WithMany("PSE_EndorsementPosition")
                        .HasForeignKey("UP_ProcessEndorsementId");

                    b.Navigation("ParentId");

                    b.Navigation("UP_PositionOrg");

                    b.Navigation("UP_ProcessEndorsement");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Facts.F_UserInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_RolePosition", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UP_Role")
                        .WithMany()
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", "UP_Position")
                        .WithMany("PSO_RolePositions")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UP_Position");

                    b.Navigation("UP_Role");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserArea", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UA_User")
                        .WithMany("User_UserAreas")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Area", "UA_Area")
                        .WithMany("Area_UserAreas")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UA_Area");

                    b.Navigation("UA_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_Location")
                        .WithMany("Loc_UserLocations")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_Location");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRelatedLocation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UL_User")
                        .WithMany("User_Related_UserLocations")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Location", "UL_RelatedLocation")
                        .WithMany()
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UL_RelatedLocation");

                    b.Navigation("UL_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserRole", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "UR_User")
                        .WithMany("User_UserRoles")
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Role", "UR_Role")
                        .WithMany("ROL_UserRoles")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UR_Role");

                    b.Navigation("UR_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Links.L_UserSkill", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Position", null)
                        .WithMany("PSO_UserSkills")
                        .HasForeignKey("D_PositionId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "US_User")
                        .WithMany()
                        .HasForeignKey("FirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Skill", "US_Skill")
                        .WithMany("SKL_UserSkills")
                        .HasForeignKey("SecondId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("US_Skill");

                    b.Navigation("US_User");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "AAP_Current_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Current_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "AAP_Last_Approve")
                        .WithMany()
                        .HasForeignKey("AAP_Last_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("AAP_Current_Approve");

                    b.Navigation("AAP_Last_Approve");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "APV_Approve")
                        .WithMany("AAP_Approves")
                        .HasForeignKey("APV_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "APV_NeedApprove")
                        .WithMany("AAP_NeedApproves")
                        .HasForeignKey("APV_NeedApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", "APV_ProcessEndorsement")
                        .WithMany()
                        .HasForeignKey("APV_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "APV_UserInCharge")
                        .WithMany()
                        .HasForeignKey("APV_UserInChargeId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("APV_Approve");

                    b.Navigation("APV_NeedApprove");

                    b.Navigation("APV_ProcessEndorsement");

                    b.Navigation("APV_UserInCharge");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_Approve", null)
                        .WithMany("APV_Attachments")
                        .HasForeignKey("F_ApproveId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_Attachment", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", null)
                        .WithMany("PSE_ListOfParameter")
                        .HasForeignKey("D_ProcessEndorsementId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", null)
                        .WithMany("User_ListOfParameters")
                        .HasForeignKey("D_UserId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_RequestInformation", null)
                        .WithMany("RI_ListOfParameters")
                        .HasForeignKey("F_RequestInformationId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterList", "LOP_ParameterList")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterListId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ParameterType", "LOP_ParameterType")
                        .WithMany()
                        .HasForeignKey("LOP_ParameterTypeId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_Operand", "PT_Operand")
                        .WithMany()
                        .HasForeignKey("PT_OperandId");

                    b.HasOne("Cheetah_DataAccess.Masters.F_ListOfParameter", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("LOP_ParameterList");

                    b.Navigation("LOP_ParameterType");

                    b.Navigation("PT_Operand");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Masters.F_RequestInformation", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.HasOne("Cheetah_DataAccess.Masters.F_AllApprove", "RI_AllApprove")
                        .WithMany()
                        .HasForeignKey("RI_AllApproveId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Creator")
                        .WithMany()
                        .HasForeignKey("RI_CreatorId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_ExpertUser")
                        .WithMany()
                        .HasForeignKey("RI_ExpertUserId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_ProcessState", "RI_ProcessState")
                        .WithMany()
                        .HasForeignKey("RI_ProcessStateId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", "RI_RequestTitle")
                        .WithMany()
                        .HasForeignKey("RI_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Dimentions.D_User", "RI_Requestor")
                        .WithMany()
                        .HasForeignKey("RI_RequestorId");

                    b.Navigation("ParentId");

                    b.Navigation("RI_AllApprove");

                    b.Navigation("RI_Creator");

                    b.Navigation("RI_ExpertUser");

                    b.Navigation("RI_ProcessState");

                    b.Navigation("RI_RequestTitle");

                    b.Navigation("RI_Requestor");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.HasOne("Cheetah_DataAccess.Dimentions.D_RequestTitle", null)
                        .WithMany("RT_SubRequestTitles")
                        .HasForeignKey("D_RequestTitleId");

                    b.HasOne("Cheetah_DataAccess.Parameters.D_SubRequestTitle", "ParentId")
                        .WithMany("Childs")
                        .HasForeignKey("Parent_Id");

                    b.Navigation("ParentId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Area", b =>
                {
                    b.Navigation("Area_UserAreas");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Entity", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_FieldType", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Location", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Loc_UserLocations");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Operand", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterList", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ParameterType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PT_ParameterList");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Position", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSO_EndorsementPosition");

                    b.Navigation("PSO_RolePositions");

                    b.Navigation("PSO_UserSkills");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessEndorsement", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("PSE_EndorsementPosition");

                    b.Navigation("PSE_ListOfParameter");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_ProcessState", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_RequestTitle", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RT_SubRequestTitles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Role", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("ROL_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_Skill", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("SKL_UserSkills");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_UnitType", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("UT_Areas");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Dimentions.D_User", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("User_ListOfParameters");

                    b.Navigation("User_Related_UserLocations");

                    b.Navigation("User_UserAreas");

                    b.Navigation("User_UserLocations");

                    b.Navigation("User_UserRoles");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_EndorsementPosition", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Facts.F_UserInformation", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_AllApprove", b =>
                {
                    b.Navigation("AAP_Approves");

                    b.Navigation("AAP_NeedApproves");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Approve", b =>
                {
                    b.Navigation("APV_Attachments");

                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_Attachment", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_ListOfParameter", b =>
                {
                    b.Navigation("Childs");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Masters.F_RequestInformation", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("RI_ListOfParameters");
                });

            modelBuilder.Entity("Cheetah_DataAccess.Parameters.D_SubRequestTitle", b =>
                {
                    b.Navigation("Childs");
                });
#pragma warning restore 612, 618
        }
    }
}

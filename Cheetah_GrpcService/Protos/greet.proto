syntax = "proto3";

option csharp_namespace = "Cheetah_GrpcService";

package greet;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply);
}

// The request message containing the user's name.
message HelloRequest
{
  string name = 1;
}

// The response message containing the greetings.
message HelloReply
{
  string message = 1;
}


// The greeting service definition.
service Request {
  // Sends a greeting
  rpc CreateRequest (Create_Input_Request) returns (Output_Request);
  rpc PerformRequest (Perform_Input_Request) returns (Output_Request);  
}
message Create_Input_Request
{
     int64  PERPCode = 1;
     string RQT_Creator_PName = 2;
     string RQT_Requestor_PName = 3;
     string RQT_Process_PName = 4;
     repeated GRPC_BaseClass RQT_Conditions = 5;
}

message Perform_Input_Request
{
     int64  Id = 1;
     GRPC_BaseClass Condition = 2;
     GRPC_UserAssignment CurrentAssignment = 3;
}

message Output_Request
{
    int64  Id = 1;
    string ProcessState = 2;
    repeated GRPC_UserAssignment CurrentAssignments = 3;
    repeated GRPC_UserAssignment AllAssignments = 4;
}

message GRPC_UserAssignment
{
    GRPC_BaseClass UserAssignment = 1;
    GRPC_BaseClass Endorsement = 2;
}

message GRPC_BaseClass
{
    int64 Id = 1;
    string PName = 2;
    string PDisplayName = 3;    
}
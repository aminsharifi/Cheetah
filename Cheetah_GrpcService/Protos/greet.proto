syntax = "proto3";

import "google/protobuf/timestamp.proto";


option csharp_namespace = "Cheetah_GrpcService";

package greet;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply);
}

// The request message containing the user's name.
message HelloRequest
{
  string name = 1;
}

// The response message containing the greetings.
message HelloReply
{
  string message = 1;
}


// The greeting service definition.
service Request {
  // Sends a greeting
  rpc CreateRequest (Create_Input_Request) returns (Brief_Output_Request);
  rpc PerformRequest (Perform_Input_Request) returns (Brief_Output_Request);
  rpc GetCase (GetCase_Input_Request) returns (DetailOutput_Request);
  rpc Sync(InputSync) returns (OutputSync);
  rpc Inbox (PageCartable) returns (PageCartable);
  rpc Outbox (PageCartable) returns (PageCartable);
}

message InputSync
{    
    string TableName = 1;
}

message OutputSync
{    
    repeated GRPC_BaseClass SyncTable = 1;
}


message PageCartable
{
    int32 PageNo = 1;
    string Username = 2;
    string ProcessName = 3;
    repeated RecordCartable RecordCartables = 4;
}

message RecordCartable
{    
    GRPC_BaseClass D_Tag = 1;
    string Requestor  = 2;
    string RadNumber  = 3;
    int64 CreateDate  = 4;
    string PCreateDate = 5;
    int64 RecieveDate = 6;
    string PRecieveDate = 7;
    string ProcessName = 8;
    string TaskName = 9;
    string Summary = 10;
}

message Brief_Output_Request
{
    int64  Id = 1;
    GRPC_BaseClass ProcessState = 2;
}
message GetCase_Input_Request
{
     int64  Id = 1;
     int64  PERPCode = 2;
     string ProcessName = 3;
}

message Create_Input_Request
{
     
     int64  PERPCode = 1;
     string Creator_PName = 2;
     string Requestor_PName = 3;
     string Process_PName = 4;
     repeated GRPC_BaseClass Conditions = 5;
}

message Perform_Input_Request
{
     int64  AssignmentId = 1;
     string Tag_Name = 2;
}

message DetailOutput_Request
{
    int64  Id = 1;
    int64  PERPCode = 2;
    string ProcessName = 3;
    GRPC_BaseClass ProcessState = 4;
    repeated GRPC_UserAssignment AllAssignments = 5;
}

message GRPC_UserAssignment
{
    GRPC_BaseClass Endorsement = 2;
    repeated GRPC_BaseClass UserAssignments = 1;
}

message GRPC_BaseClass
{
    int64 Id = 1;
    string Name = 2;
    string DisplayName = 3;    
}